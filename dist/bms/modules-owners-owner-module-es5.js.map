{"version":3,"sources":["webpack:///src/app/features/admin-dashboard/modules/owners/components/active-owners/active-owners.component.ts","webpack:///src/app/features/admin-dashboard/modules/owners/components/active-owners/active-owners.component.html","webpack:///src/app/features/admin-dashboard/modules/owners/components/invited-owners/invited-owners.component.ts","webpack:///src/app/features/admin-dashboard/modules/owners/components/invited-owners/invited-owners.component.html","webpack:///src/app/features/admin-dashboard/modules/owners/components/owners/owners.component.ts","webpack:///src/app/features/admin-dashboard/modules/owners/components/owners/owners.component.html","webpack:///src/app/features/admin-dashboard/modules/owners/containers/active-owners-container/active-owners-container.component.ts","webpack:///src/app/features/admin-dashboard/modules/owners/containers/active-owners-container/active-owners-container.component.html","webpack:///src/app/features/admin-dashboard/modules/owners/containers/invited-owners-container/invited-owners-container.component.ts","webpack:///src/app/features/admin-dashboard/modules/owners/containers/invited-owners-container/invited-owners-container.component.html","webpack:///src/app/features/admin-dashboard/modules/owners/containers/owners-container/owners-container.component.ts","webpack:///src/app/features/admin-dashboard/modules/owners/containers/owners-container/owners-container.component.html","webpack:///src/app/features/admin-dashboard/modules/owners/owner-routing.module.ts","webpack:///src/app/features/admin-dashboard/modules/owners/owner.module.ts","webpack:///src/app/features/admin-dashboard/modules/owners/services/owners.service.ts","webpack:///src/app/features/admin-dashboard/modules/owners/store/actions/owners.actions.ts","webpack:///src/app/features/admin-dashboard/modules/owners/store/effects/owners.effects.ts","webpack:///src/app/features/admin-dashboard/modules/owners/store/reducers/owners.reducer.ts"],"names":["ActiveOwnersComponent","paramChanged","invitePropertyOwnerClicked","dataSource","PROPERTIES_DATA","sn","image","name","contact","address","columnsToDisplay","dataSourceProperties","columnsToDisplayProperties","listenObservables","activeOwners$","subscribe","activeOwners","typeChange","param","page","type","value","emit","handleInviteOwnerModal","height","minHeight","visibility","selector","templateUrl","animations","InvitedOwnersComponent","statusChange","pendingOwnerInvitations$","pendingInvitationList","status","getUpdatableStatus","includes","index","invitation","updateStatusPayload","userId","ownerId","propertyId","modules","statusSelectElement","document","getElementById","OwnersComponent","ActiveOwnersContainerComponent","store","dialog","invitePropertyOwnerSuccess$","destroyed$","params","size","search","ownerType","pipe","d","dialogRef","close","select","owners","list","fetchActiveOwnerList","filteredParams","getFilteredParams","dispatch","getParam","parameter","perPage","open","id","data","componentInstance","payload","afterClosed","result","console","log","onParamChange","showInvitePropertyOwnerModal","InvitedOwnersContainerComponent","fetchPendingOwnerInvitations","invitations","onUpdateStatus","invitedOwnersCmp","OwnersContainerComponent","routes","path","component","children","redirectTo","pathMatch","OwnerRoutingModule","forChild","imports","exports","OwnerModule","forFeature","declarations","OwnersService","injector","parameters","http","get","ACTIVE_OWNERS","PROPERTY_OWNER_PENDING_INVITATIONS","updateInvitationStatus","put","UPDATE_INVITATION_STATUS","OWNER","providedIn","loadActiveOwners","loadActiveOwnersSuccess","loadActiveOwnersFailure","loadPendingOwnerInvitations","loadPendingOwnerInvitationsSuccess","loadPendingOwnerInvitationsFailure","updateInvitationStatusSuccess","updateInvitationStatusFailure","getOwnerDetails","getOwnerDetailsSuccess","getOwnerDetailsFailure","OwnersEffects","actions$","service","snackBar","translate","loadActiveOwners$","action","getActiveOwners","response","error","loadPendingOwnerInvitations$","getPendingOwnerInvitations","updateInvitationStatus$","instant","getOwnerDetails$","getOwnerDetailsById","ownerFeatureKey","initialOwnersState","pagination","loading","message","detail","ownersReducer","state"],"mappings":"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","file":"modules-owners-owner-module-es5.js","sourcesContent":["import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { MatSelectChange } from \"@angular/material/select\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Observable } from \"rxjs\";\nimport { IOwners } from \"./../../interfaces/owners\";\n\nexport interface IProperties {\n  sn: number;\n  image: string;\n  name: string;\n  contact: string;\n  address: string;\n}\n@Component({\n  selector: \"app-active-owners\",\n  templateUrl: \"./active-owners.component.html\",\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\", visibility: \"hidden\" })),\n      state(\"expanded\", style({ height: \"*\", visibility: \"visible\" })),\n      transition(\"expanded <=> collapsed\", animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")),\n    ]),\n  ],\n})\nexport class ActiveOwnersComponent implements OnInit {\n  @Input() activeOwners$: Observable<IOwners[]>;\n  @Output() paramChanged: EventEmitter<any> = new EventEmitter<any>();\n  @Output() invitePropertyOwnerClicked: EventEmitter<null> = new EventEmitter<null>();\n  dataSource = new MatTableDataSource<IOwners>();\n\n  PROPERTIES_DATA: IProperties[] = [\n    {\n      sn: 1,\n      image: \"./assets/images/hero.jpg\",\n      name: \"Sunrise Homes\",\n      contact: \"977-1-423567890\",\n      address: \"Tripura Marg, Tripureswor, Kathmandu, Nepal\",\n    },\n    {\n      sn: 2,\n      image: \"./assets/images/hero.jpg\",\n      name: \"Sunrise Homes\",\n      contact: \"977-1-423567890\",\n      address: \"Tripura Marg, Tripureswor, Kathmandu, Nepal\",\n    },\n    {\n      sn: 3,\n      image: \"./assets/images/hero.jpg\",\n      name: \"Sunrise Housing\",\n      contact: \"977-1-423567890\",\n      address: \"Balkumari, Koteshwor, Kathmandu, Nepal\",\n    },\n  ];\n\n  columnsToDisplay = [\"sn\", \"fullname\", \"mobileNumber\", \"email\", \"ownerType\"];\n  expandedElement: IOwners | null;\n\n  dataSourceProperties = this.PROPERTIES_DATA;\n  columnsToDisplayProperties = [\"sn\", \"image\", \"name\", \"contact\", \"address\", \"actions\"];\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.listenObservables();\n  }\n\n  listenObservables() {\n    this.activeOwners$.subscribe((activeOwners) => {\n      this.dataSource = new MatTableDataSource(activeOwners);\n    });\n  }\n\n  onOwnerTypeChange(typeChange: MatSelectChange) {\n    const param = {\n      page: 1,\n      type: typeChange.value,\n    };\n    this.paramChanged.emit(param);\n  }\n\n  handleInviteOwnerModal() {\n    this.invitePropertyOwnerClicked.emit();\n  }\n}\n","<div class=\"content-inner\">\n  <div class=\"breadcrubms\">\n    <span>Dashboard</span>\n    <span>Owner</span>\n    <span>Active</span>\n  </div>\n\n  <h2 class=\"module-header d-flex align-center justify-between\">\n    <span class=\"module-header-text\">Active Owner</span>\n    <form class=\"d-flex\">\n      <!-- <div class=\"form-field-wrapper has-no-margin has-padding-right\">\n        <mat-form-field floatLabel=\"never\">\n          <mat-label>Search by Owner Name / Number</mat-label>\n          <input type=\"text\" matInput placeholder=\"Search by Owner Name / Number\" />\n          <i mat-icon-button matSuffix class=\"las la-search\"></i>\n        </mat-form-field>\n      </div> -->\n      <button mat-button class=\"btn btn-theme-green\" (click)=\"handleInviteOwnerModal()\">Invite</button>\n    </form>\n  </h2>\n\n  <!-- Filters -->\n  <div class=\"records-filter\">\n    <!-- <h3>Filter by</h3>\n    <div class=\"d-flex\">\n      <div class=\"form-field-wrapper\">\n        <mat-form-field>\n          <mat-select floatLabel=\"never\">\n            <mat-option value=\"owner type\" seleceted>Owner Type</mat-option>\n            <mat-option value=\"owner type\">Company</mat-option>\n            <mat-option value=\"owner type\">Individual</mat-option>\n          </mat-select>\n          <mat-label>Owner Type</mat-label>\n        </mat-form-field>\n      </div>\n\n      <div class=\"form-field-wrapper\">\n        <mat-form-field>\n          <mat-select>\n            <mat-option value=\"User Status\" selected>User Status</mat-option>\n            <mat-option value=\"User Status\">Active</mat-option>\n            <mat-option value=\"User Status\">Inactive</mat-option>\n          </mat-select>\n          <mat-label>User Status</mat-label>\n        </mat-form-field>\n      </div>\n    </div>-->\n  </div>\n  <!-- Filters -->\n\n  <!-- Records Table -->\n  <div class=\"records-wrapper\">\n    <div class=\"table-wrapper\">\n      <table\n        mat-table\n        [dataSource]=\"dataSource\"\n        multiTemplateDataRows\n        class=\"records-table records-table--product-admin-owner-active\"\n      >\n        <ng-container matColumnDef=\"sn\">\n          <th mat-header-cell *matHeaderCellDef>#</th>\n          <td mat-cell *matCellDef=\"let element; let i = dataIndex\">{{ i + 1 }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fullname\">\n          <th mat-header-cell *matHeaderCellDef>Fullname</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"mobileNumber\">\n          <th mat-header-cell *matHeaderCellDef>Mobile Number</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.mobileNumber }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n          <th mat-header-cell *matHeaderCellDef>Email</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"ownerType\">\n          <th mat-header-cell *matHeaderCellDef>Owner Type</th>\n          <td mat-cell *matCellDef=\"let element\">Company</td>\n        </ng-container>\n\n        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n        <ng-container matColumnDef=\"expandedDetail\">\n          <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\" class=\"text-left\">\n            <div class=\"owner-active-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n              <!-- Owner Information -->\n              <div class=\"info info-admin\">\n                <div class=\"d-flex has-3-cols\">\n                  <div class=\"col\">\n                    <i class=\"las la-map-marked text-primary\"></i>\n                    <p>\n                      <label>Permanent Adress </label>\n                      <span\n                        >Anantalingeshwor Marg, Bhaktapur, Kathmandu, <br />\n                        Nepal, Ward Number: 01, Zip Code: 650045</span\n                      >\n                    </p>\n                  </div>\n\n                  <div class=\"col\">\n                    <i class=\"las la-transgender text-primary\"></i>\n                    <span>Male</span>\n                  </div>\n\n                  <div class=\"col\">\n                    <i class=\"las la-birthday-cake text-primary\"></i>\n                    <span>March 08, 1981</span>\n                  </div>\n                </div>\n                <div flex class=\"d-flex has-3-cols\">\n                  <div class=\"col\">\n                    <i class=\"las la-file-alt text-primary\"></i>\n                    <a href=\"#\" class=\"text-primary\">Owner PAN ID</a>\n                  </div>\n                  <div flex class=\"col\">\n                    <i class=\"las la-file-alt text-primary\"></i>\n                    <a href=\"#\" class=\"text-primary\">Citizenship Front</a>\n                  </div>\n                  <div flex class=\"col\">\n                    <i class=\"las la-file-alt text-primary\"></i>\n                    <a href=\"#\" class=\"text-primary\">Citizenship Back</a>\n                  </div>\n                </div>\n                <div class=\"status\">\n                  <label>User Status</label>\n                  <mat-slide-toggle [checked]=\"element.userStatus === 'active'\"></mat-slide-toggle>\n                </div>\n              </div>\n              <!-- Owner Information -->\n              <!-- Company Information-->\n\n              <div class=\"info info-admin\">\n                <h4>\n                  <span>Company Information</span>\n                </h4>\n                <div class=\"d-flex has-3-cols\">\n                  <div class=\"col\">\n                    <figure class=\"is is-rounded-image\">\n                      <img class=\"\" src=\"./assets/images/hero.jpg\" />\n                    </figure>\n                  </div>\n\n                  <div class=\"col\">\n                    <i class=\"las la-building text-primary\"></i>\n                    <span>{{ element.name }}</span>\n                  </div>\n\n                  <div class=\"col\">\n                    <i class=\"las la-envelope text-primary\"></i>\n                    <a href=\"mailto:info@smartmobe.com\">info@smartmobe.com</a>\n                  </div>\n\n                  <div class=\"col\">\n                    <i class=\"las la-map-marked text-primary\"></i>\n                    <p>\n                      <label>Company Address </label>\n                      <span\n                        >Tripura Marg, Triprushwor, Kathmandu, Ward Number: 01, Zip Code: 650045, Bagmati<br />\n                        Nepal,\n                      </span>\n                    </p>\n                  </div>\n\n                  <div class=\"col\">\n                    <i class=\"las la-phone text-primary\"></i>\n                    <span>977-1-4256789</span>\n                  </div>\n                </div>\n                <div flex class=\"d-flex has-3-cols\">\n                  <div class=\"col\">\n                    <i class=\"las la-file-alt text-primary\"></i>\n                    <a href=\"#\" class=\"text-primary\">Company PAN/VAT Registration</a>\n                  </div>\n                  <div flex class=\"col\">\n                    <i class=\"las la-file-alt text-primary\"></i>\n                    <a href=\"#\" class=\"text-primary\">Company Registration Certificate</a>\n                  </div>\n                </div>\n              </div>\n              <!-- Admin Information -->\n              <!-- Properties -->\n              <div class=\"info table-wrapper\">\n                <h4 class=\"d-flex align-center justify-between\">\n                  <span>Property</span>\n                  <button mat-button class=\"btn btn-theme-green\">Add Property</button>\n                </h4>\n                <table mat-table [dataSource]=\"dataSourceProperties\" class=\"records-table records-table--properties\">\n                  <ng-container matColumnDef=\"sn\">\n                    <td mat-cell *matCellDef=\"let element\">{{ element.sn }}</td>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"image\">\n                    <td mat-cell *matCellDef=\"let element\">\n                      <figure class=\"is-rounded-image\">\n                        <img src=\"{{ element.image }}\" />\n                      </figure>\n                    </td>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"name\">\n                    <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"contact\">\n                    <td mat-cell *matCellDef=\"let element\">{{ element.contact }}</td>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"address\">\n                    <td mat-cell *matCellDef=\"let element\">{{ element.address }}</td>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"actions\">\n                    <td mat-cell *matCellDef=\"let element\">\n                      <a class=\"text-primary\"><i class=\"las la-redo\"></i></a>\n                    </td>\n                  </ng-container>\n\n                  <tr mat-row *matRowDef=\"let row; columns: columnsToDisplayProperties\"></tr>\n                </table>\n              </div>\n              <!-- Properties -->\n            </div>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay\" class=\"records-row example-element-row\"></tr>\n        <!-- <tr\n        mat-row\n        *matRowDef=\"let element; columns: columnsToDisplay\"\n        class=\"records-row example-element-row\"\n        [class.expanded]=\"expandedElement === element\"\n        (click)=\"expandedElement = expandedElement === element ? null : element\"\n      ></tr> -->\n        <!-- <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"expanded-row-details\"></tr> -->\n      </table>\n      <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" showFirstLastButtons></mat-paginator> -->\n    </div>\n  </div>\n  <!-- Records Table -->\n</div>\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { MatSelectChange } from \"@angular/material/select\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Observable } from \"rxjs\";\nimport { IInvitations } from \"./../../../../../../shared/interfaces/invitations\";\nimport { IUpdateInvitationStatus } from \"./../../interfaces/update-invitation-status\";\n\n@Component({\n  selector: \"app-invited-owners\",\n  templateUrl: \"./invited-owners.component.html\",\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\", visibility: \"hidden\" })),\n      state(\"expanded\", style({ height: \"*\", visibility: \"visible\" })),\n      transition(\"expanded <=> collapsed\", animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")),\n    ]),\n  ],\n})\nexport class InvitedOwnersComponent implements OnInit {\n  @Input() pendingOwnerInvitations$: Observable<IInvitations[]>;\n  dataSource: MatTableDataSource<IInvitations>;\n  @Output() statusChange: EventEmitter<IUpdateInvitationStatus> = new EventEmitter<IUpdateInvitationStatus>();\n  @Output() invitePropertyOwnerClicked: EventEmitter<null> = new EventEmitter<null>();\n  columnsToDisplay = [\"sn\", \"fullname\", \"phoneNumber\", \"email\", \"ownerType\", \"userStatus\", \"actions\"];\n  expandedElement: IInvitations | null;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.listenObservables();\n  }\n\n  listenObservables() {\n    this.pendingOwnerInvitations$.subscribe((pendingInvitationList) => {\n      this.dataSource = new MatTableDataSource(pendingInvitationList);\n    });\n  }\n\n  allowStatusUpdate(status: string) {\n    return !this.getUpdatableStatus().includes(status);\n  }\n\n  getUpdatableStatus() {\n    return [\"PENDING_VERIFICATION\", \"IN_VERIFICATION\"];\n  }\n\n  onStatusChange(statusChange: MatSelectChange, index: number, invitation: IInvitations) {\n    if (statusChange.value !== invitation.status) {\n      const updateStatusPayload = {\n        userId: invitation.userId ?? \"\",\n        ownerId: invitation.ownerId ?? \"\",\n        propertyId: invitation.propertyId ?? \"\",\n        status: statusChange.value ?? \"\",\n        modules: [\"USER\"],\n        index,\n      };\n      this.statusChange.emit(updateStatusPayload);\n    }\n    return null;\n  }\n\n  resetInitialStatus(index: number) {\n    const statusSelectElement = document.getElementById(\"status\" + index);\n    debugger;\n  }\n\n  handleInviteOwnerModal() {\n    this.invitePropertyOwnerClicked.emit();\n  }\n}\n","<div class=\"content-inner\">\n  <div class=\"breadcrubms\">\n    <span>Dashboard</span>\n    <span>Owner</span>\n    <span>Invited</span>\n  </div>\n\n  <h2 class=\"module-header d-flex align-center justify-between\">\n    <span class=\"module-header-text\">Invited Owner</span>\n    <form class=\"d-flex\">\n      <!-- <div class=\"form-field-wrapper has-no-margin has-padding-right\">\n        <mat-form-field floatLabel=\"never\">\n          <mat-label>Search by Owner Name / Number</mat-label>\n          <input type=\"text\" matInput placeholder=\"Search by Owner Name / Number\" />\n          <i mat-icon-button matSuffix class=\"las la-search\"></i>\n        </mat-form-field>\n      </div> -->\n      <button mat-button class=\"btn btn-theme-green\" (click)=\"handleInviteOwnerModal()\">Invite</button>\n    </form>\n  </h2>\n\n  <!-- Filters -->\n  <div class=\"records-filter\">\n    <!-- <h3>Filter by</h3>\n    <div class=\"d-flex\">\n      <div class=\"form-field-wrapper\">\n        <mat-form-field>\n          <mat-select floatLabel=\"never\">\n            <mat-option value=\"owner type\" seleceted>Owner Type</mat-option>\n            <mat-option value=\"owner type\">Company</mat-option>\n            <mat-option value=\"owner type\">Individual</mat-option>\n          </mat-select>\n          <mat-label>Owner Type</mat-label>\n        </mat-form-field>\n      </div>\n\n      <div class=\"form-field-wrapper\">\n        <mat-form-field>\n          <mat-select>\n            <mat-option value=\"User Status\" selected>User Status</mat-option>\n            <mat-option value=\"User Status\">Pending</mat-option>\n            <mat-option value=\"User Status\">In Verification</mat-option>\n            <mat-option value=\"User Status\">Expired</mat-option>\n          </mat-select>\n          <mat-label>User Status</mat-label>\n        </mat-form-field>\n      </div>\n    </div> -->\n  </div>\n  <!-- Filters -->\n\n  <!-- Records Table -->\n  <div class=\"records-wrapper\">\n    <div class=\"table-wrapper\">\n      <table\n        mat-table\n        [dataSource]=\"dataSource\"\n        multiTemplateDataRows\n        class=\"records-table records-table--product-admin-owner-invited\"\n      >\n        <ng-container matColumnDef=\"sn\">\n          <th mat-header-cell *matHeaderCellDef>#</th>\n          <td mat-cell *matCellDef=\"let element; let i = dataIndex\">{{ i + 1 }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fullname\">\n          <th mat-header-cell *matHeaderCellDef>Fullname</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"phoneNumber\">\n          <th mat-header-cell *matHeaderCellDef>Phone Number</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.mobileNumber }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n          <th mat-header-cell *matHeaderCellDef>Email</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"ownerType\">\n          <th mat-header-cell *matHeaderCellDef>Owner Type</th>\n          <td mat-cell *matCellDef=\"let element\">Company</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"userStatus\">\n          <th mat-header-cell *matHeaderCellDef>User Status</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <span class=\"badge\">{{ element.status }}</span>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>action</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <!-- <a href=\"#\"><i class=\"las la-redo-alt\" matTooltip=\"Re-send Invitation\"></i></a> -->\n          </td>\n        </ng-container>\n\n        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n        <ng-container matColumnDef=\"expandedDetail\">\n          <td\n            mat-cell\n            *matCellDef=\"let element; let i = dataIndex\"\n            [attr.colspan]=\"columnsToDisplay.length\"\n            class=\"text-left\"\n          >\n            <div class=\"owner-active-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n              <!-- Owner Information -->\n              <!-- <div class=\"info info-admin\">\n                <div class=\"d-flex has-3-cols\">\n                  <div class=\"col\">\n                    <i class=\"las la-map-marked text-primary\"></i>\n                    <p>\n                      <label>Permanent Adress </label>\n                      <span\n                        >Anantalingeshwor Marg, Bhaktapur, Kathmandu, <br />\n                        Nepal, Ward Number: 01, Zip Code: 650045</span\n                      >\n                    </p>\n                  </div>\n\n                  <div class=\"col\">\n                    <i class=\"las la-transgender text-primary\"></i>\n                    <span>Male</span>\n                  </div>\n\n                  <div class=\"col\">\n                    <i class=\"las la-birthday-cake text-primary\"></i>\n                    <span>March 08, 1981</span>\n                  </div>\n                </div>\n                <div flex class=\"d-flex has-3-cols\">\n                  <div class=\"col\">\n                    <i class=\"las la-file-alt text-primary\"></i>\n                    <a href=\"#\" class=\"text-primary\">Owner PAN ID</a>\n                  </div>\n                  <div flex class=\"col\">\n                    <i class=\"las la-file-alt text-primary\"></i>\n                    <a href=\"#\" class=\"text-primary\">Citizenship Front</a>\n                  </div>\n                  <div flex class=\"col\">\n                    <i class=\"las la-file-alt text-primary\"></i>\n                    <a href=\"#\" class=\"text-primary\">Citizenship Back</a>\n                  </div>\n                </div>\n              </div> -->\n              <!-- Owner Information -->\n              <!-- Company Information-->\n\n              <!-- <div class=\"info info-admin\">\n                <h4>\n                  <span>Company Information</span>\n                </h4>\n                <div class=\"d-flex has-3-cols\">\n                  <div class=\"col\">\n                    <figure class=\"is is-rounded-image\">\n                      <img class=\"\" src=\"./assets/images/hero.jpg\" />\n                    </figure>\n                  </div>\n\n                  <div class=\"col\">\n                    <i class=\"las la-building text-primary\"></i>\n                    <span>Sunrise Builders</span>\n                  </div>\n\n                  <div class=\"col\">\n                    <i class=\"las la-envelope text-primary\"></i>\n                    <a href=\"mailto:info@smartmobe.com\">info@smartmobe.com</a>\n                  </div>\n\n                  <div class=\"col\">\n                    <i class=\"las la-map-marked text-primary\"></i>\n                    <p>\n                      <label>Company Address </label>\n                      <span\n                        >Tripura Marg, Triprushwor, Kathmandu, Ward Number: 01, Zip Code: 650045, Bagmati<br />\n                        Nepal,\n                      </span>\n                    </p>\n                  </div>\n\n                  <div class=\"col\">\n                    <i class=\"las la-phone text-primary\"></i>\n                    <span>977-1-4256789</span>\n                  </div>\n                </div>\n                <div flex class=\"d-flex has-3-cols\">\n                  <div class=\"col\">\n                    <i class=\"las la-file-alt text-primary\"></i>\n                    <a href=\"#\" class=\"text-primary\">Company PAN/VAT Registration</a>\n                  </div>\n                  <div flex class=\"col\">\n                    <i class=\"las la-file-alt text-primary\"></i>\n                    <a href=\"#\" class=\"text-primary\">Company Registration Certificate</a>\n                  </div>\n                </div>\n              </div> -->\n              <!-- Admin Information -->\n\n              <div class=\"list-actions\">\n                <div class=\"form-field-wrapper\">\n                  <mat-form-field>\n                    <mat-label>Status</mat-label>\n                    <mat-select\n                      [value]=\"element.status\"\n                      [disabled]=\"allowStatusUpdate(element.status)\"\n                      (selectionChange)=\"onStatusChange($event, i, element)\"\n                      id=\"status{{ i }}\"\n                    >\n                      <mat-option value=\"INVITED\" *ngIf=\"element.status === 'INVITED'\">Invited</mat-option>\n                      <mat-option value=\"PENDING_VERIFICATION\" *ngIf=\"element.status === 'PENDING_VERIFICATION'\"\n                        >Pending Verification</mat-option\n                      >\n                      <mat-option\n                        value=\"IN_VERIFICATION\"\n                        *ngIf=\"element.status === 'PENDING_VERIFICATION' || element.status === 'IN_VERIFICATION'\"\n                        >In Verification</mat-option\n                      >\n                      <mat-option\n                        value=\"VERIFIED\"\n                        *ngIf=\"element.status === 'IN_VERIFICATION' || element.status === 'VERIFIED'\"\n                        >Verified</mat-option\n                      >\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n            </div>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n        <tr\n          mat-row\n          *matRowDef=\"let element; columns: columnsToDisplay\"\n          class=\"records-row example-element-row\"\n          [class.expanded]=\"expandedElement === element\"\n          (click)=\"expandedElement = expandedElement === element ? null : element\"\n        ></tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"expanded-row-details\"></tr>\n      </table>\n      <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" showFirstLastButtons></mat-paginator> -->\n    </div>\n  </div>\n  <!-- Records Table -->\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-owners\",\n  templateUrl: \"./owners.component.html\",\n})\nexport class OwnersComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>owners works!</p>\n","import { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport Utils from \"@core/utilities/utils\";\nimport { Actions, ofType } from \"@ngrx/effects\";\nimport { Store } from \"@ngrx/store\";\nimport { PropertyOwnerInvitationComponent } from \"@shared/property-owner-invitation/property-owner-invitation.component\";\nimport * as invitationsAction from \"@shared/store/actions/invitations.actions\";\nimport { Observable, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { IOwners } from \"../../interfaces/owners\";\nimport { loadActiveOwners } from \"../../store/actions/owners.actions\";\nimport { IParameters } from \"./../../../../../../shared/interfaces/parameters\";\nimport { invitePropertyOwner } from \"./../../../../../../shared/store/actions/invitations.actions\";\n\n@Component({\n  selector: \"app-active-owners-container\",\n  templateUrl: \"./active-owners-container.component.html\",\n})\nexport class ActiveOwnersContainerComponent implements OnInit {\n  activeOwners$: Observable<IOwners[]>;\n\n  filterParams: IParameters;\n  destroyed$ = new Subject<boolean>();\n  dialogRef: any;\n\n  params = {\n    page: 1,\n    size: 10,\n    search: null,\n    ownerType: null,\n    status: 0,\n  };\n\n  constructor(private store: Store<any>, public dialog: MatDialog, public invitePropertyOwnerSuccess$: Actions) {\n    invitePropertyOwnerSuccess$\n      .pipe(ofType(invitationsAction.invitePropertyOwnerSuccess), takeUntil(this.destroyed$))\n      .subscribe((d) => {\n        this.dialogRef.close();\n      });\n  }\n\n  ngOnInit(): void {\n    this.activeOwners$ = this.store.select((store) => store.owners.list);\n    this.fetchActiveOwnerList();\n  }\n\n  fetchActiveOwnerList() {\n    const filteredParams = Utils.getFilteredParams(this.params);\n    this.store.dispatch(loadActiveOwners({ params: filteredParams }));\n  }\n\n  onParamChange(param: IParameters) {\n    const filteredParams = Utils.getFilteredParams(this.getParam(param));\n    this.store.dispatch(loadActiveOwners({ params: filteredParams }));\n  }\n\n  getParam(parameter?: IParameters) {\n    return {\n      page: parameter.page ?? this.params.page,\n      perPage: parameter.size ?? this.params.size,\n      search: parameter.search ?? this.params.search,\n      ownerType: parameter.ownerType ?? this.params.ownerType,\n      status: parameter.status ?? this.params.status,\n    };\n  }\n\n  showInvitePropertyOwnerModal() {\n    this.dialogRef = this.dialog.open(PropertyOwnerInvitationComponent, {\n      id: \"invitePropertyOwner\",\n      data: {},\n    });\n    this.dialogRef.componentInstance.invitePropertyOwnerClicked.subscribe((d) => {\n      this.store.dispatch(invitePropertyOwner({ payload: d }));\n    });\n    this.dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"modal closed\");\n    });\n  }\n}\n","<app-active-owners\n  [activeOwners$]=\"activeOwners$\"\n  (paramChanged)=\"onParamChange($event)\"\n  (invitePropertyOwnerClicked)=\"showInvitePropertyOwnerModal()\"\n></app-active-owners>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { BaseComponent } from \"@core/components\";\nimport Utils from \"@core/utilities/utils\";\nimport { Actions, ofType } from \"@ngrx/effects\";\nimport { Store } from \"@ngrx/store\";\nimport { IParameters } from \"@shared/interfaces\";\nimport { IInvitations } from \"@shared/interfaces/invitations\";\nimport * as invitationsAction from \"@shared/store/actions/invitations.actions\";\nimport { Observable, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { InvitedOwnersComponent } from \"../../components/invited-owners/invited-owners.component\";\nimport { PropertyOwnerInvitationComponent } from \"./../../../../../../shared/property-owner-invitation/property-owner-invitation.component\";\nimport { invitePropertyOwner } from \"./../../../../../../shared/store/actions/invitations.actions\";\nimport { IUpdateInvitationStatus } from \"./../../interfaces/update-invitation-status\";\nimport { loadPendingOwnerInvitations, updateInvitationStatus } from \"./../../store/actions/owners.actions\";\n\n@Component({\n  selector: \"app-invited-owners-container\",\n  templateUrl: \"./invited-owners-container.component.html\",\n})\nexport class InvitedOwnersContainerComponent extends BaseComponent implements OnInit {\n  @ViewChild(\"invitedOwnersCmp\") invitedOwnersCmp: InvitedOwnersComponent;\n  pendingOwnerInvitations$: Observable<IInvitations[]>;\n\n  filterParams: IParameters;\n  destroyed$ = new Subject<boolean>();\n  dialogRef: any;\n\n  params = {\n    page: 1,\n    size: 10,\n    search: null,\n    ownerType: null,\n    status: 0,\n  };\n\n  constructor(private store: Store<any>, public dialog: MatDialog, public invitePropertyOwnerSuccess$: Actions) {\n    super();\n    invitePropertyOwnerSuccess$\n      .pipe(ofType(invitationsAction.invitePropertyOwnerSuccess), takeUntil(this.destroyed$))\n      .subscribe((d) => {\n        if (this.dialogRef) {\n          this.dialogRef.close();\n        }\n        this.fetchPendingOwnerInvitations();\n      });\n  }\n\n  ngOnInit(): void {\n    this.pendingOwnerInvitations$ = this.store.select((store) => store.owners.invitations);\n    this.fetchPendingOwnerInvitations();\n  }\n\n  fetchPendingOwnerInvitations() {\n    const filteredParams = Utils.getFilteredParams(this.params);\n    this.store.dispatch(loadPendingOwnerInvitations({ params: filteredParams }));\n  }\n\n  onUpdateStatus(updateStatusPayload: IUpdateInvitationStatus) {\n    // const options = {\n    //   message: this.getTranslatedString(\"confirm_status_change\"),\n    //   cancelText: this.getTranslatedString(\"common.cancel\"),\n    //   confirmText: this.getTranslatedString(\"common.yes\"),\n    // };\n    // this.confirmDialog.open(options);\n    // this.confirmDialog.confirmed().subscribe((confirmed) => {\n    //   if (confirmed) {\n    this.store.dispatch(updateInvitationStatus({ payload: updateStatusPayload }));\n    this.fetchPendingOwnerInvitations();\n    //   } else {\n    //     this.invitedOwnersCmp.resetInitialStatus(updateStatusPayload.index);\n    //   }\n    // });\n  }\n\n  showInvitePropertyOwnerModal() {\n    this.dialogRef = this.dialog.open(PropertyOwnerInvitationComponent, {\n      id: \"invitePropertyOwner\",\n      data: {},\n    });\n    this.dialogRef.componentInstance.invitePropertyOwnerClicked.subscribe((d) => {\n      this.store.dispatch(invitePropertyOwner({ payload: d }));\n    });\n    this.dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"modal closed\");\n    });\n  }\n}\n","<app-invited-owners\n  #invitedOwnersCmp\n  [pendingOwnerInvitations$]=\"pendingOwnerInvitations$\"\n  (statusChange)=\"onUpdateStatus($event)\"\n  (invitePropertyOwnerClicked)=\"showInvitePropertyOwnerModal()\"\n></app-invited-owners>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-owners-container\",\n  templateUrl: \"./owners-container.component.html\",\n})\nexport class OwnersContainerComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<router-outlet> </router-outlet>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ActiveOwnersContainerComponent } from \"./containers/active-owners-container/active-owners-container.component\";\nimport { InvitedOwnersContainerComponent } from \"./containers/invited-owners-container/invited-owners-container.component\";\nimport { OwnersContainerComponent } from \"./containers/owners-container/owners-container.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: OwnersContainerComponent,\n    children: [\n      {\n        path: \"\",\n        redirectTo: \"active\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"active\",\n        component: ActiveOwnersContainerComponent,\n      },\n      {\n        path: \"invited\",\n        component: InvitedOwnersContainerComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OwnerRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { SharedModule } from \"./../../../../shared/shared.module\";\nimport { ActiveOwnersComponent } from \"./components/active-owners/active-owners.component\";\nimport { InvitedOwnersComponent } from \"./components/invited-owners/invited-owners.component\";\nimport { OwnersComponent } from \"./components/owners/owners.component\";\nimport { ActiveOwnersContainerComponent } from \"./containers/active-owners-container/active-owners-container.component\";\nimport { InvitedOwnersContainerComponent } from \"./containers/invited-owners-container/invited-owners-container.component\";\nimport { OwnersContainerComponent } from \"./containers/owners-container/owners-container.component\";\nimport { OwnerRoutingModule } from \"./owner-routing.module\";\nimport { OwnersEffects } from \"./store/effects/owners.effects\";\nimport * as fromOwners from \"./store/reducers/owners.reducer\";\n\n@NgModule({\n  declarations: [\n    ActiveOwnersComponent,\n    ActiveOwnersContainerComponent,\n    OwnersContainerComponent,\n    OwnersComponent,\n    InvitedOwnersComponent,\n    InvitedOwnersContainerComponent,\n  ],\n  imports: [\n    SharedModule,\n    OwnerRoutingModule,\n    CommonModule,\n    StoreModule.forFeature(fromOwners.ownerFeatureKey, fromOwners.ownersReducer),\n    EffectsModule.forFeature([OwnersEffects]),\n  ],\n})\nexport class OwnerModule {}\n","import { Injectable, Injector } from \"@angular/core\";\nimport { ApiUrls } from \"@core/enums\";\nimport { BaseService } from \"@core/services\";\nimport { Observable } from \"rxjs\";\nimport { IUpdateInvitationStatus } from \"./../interfaces/update-invitation-status\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OwnersService extends BaseService {\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getActiveOwners(parameters: any): Observable<any> {\n    return this.http.get(ApiUrls.ACTIVE_OWNERS, { params: parameters });\n  }\n\n  getPendingOwnerInvitations(parameters: any): Observable<any> {\n    return this.http.get(ApiUrls.PROPERTY_OWNER_PENDING_INVITATIONS, { params: parameters });\n  }\n\n  updateInvitationStatus(updateInvitationStatus: IUpdateInvitationStatus) {\n    return this.http.put(`${ApiUrls.UPDATE_INVITATION_STATUS}`, updateInvitationStatus);\n  }\n\n  getOwnerDetailsById(ownerId: string) {\n    return this.http.get(`${ApiUrls.OWNER}/${ownerId}`);\n  }\n}\n","import { createAction, props } from \"@ngrx/store\";\nimport { IParameters } from \"@shared/interfaces\";\nimport { IUpdateInvitationStatus } from \"./../../interfaces/update-invitation-status\";\n\nexport const loadActiveOwners = createAction(\"[OWNERS] Load Active Owners\", props<{ params?: IParameters }>());\n\nexport const loadActiveOwnersSuccess = createAction(\"[OWNERS] Load Active Owners Success\", props<{ data: any }>());\n\nexport const loadActiveOwnersFailure = createAction(\"[OWNERS] Load Active Owners Failure\", props<{ error: any }>());\n\nexport const loadPendingOwnerInvitations = createAction(\n  \"[OWNERS] Load Pending Invitations\",\n  props<{ params?: IParameters }>()\n);\n\nexport const loadPendingOwnerInvitationsSuccess = createAction(\n  \"[OWNERS] Load Pending Owner Invitations Success\",\n  props<{ data: any }>()\n);\n\nexport const loadPendingOwnerInvitationsFailure = createAction(\n  \"[OWNERS] Load Pending Owner Invitations Failure\",\n  props<{ error: any }>()\n);\n\nexport const updateInvitationStatus = createAction(\n  \"[OWNERS] Update Invitation Status\",\n  props<{ payload: IUpdateInvitationStatus }>()\n);\n\nexport const updateInvitationStatusSuccess = createAction(\n  \"[OWNERS] Update Invitation Status Success\",\n  props<{ data: any }>()\n);\n\nexport const updateInvitationStatusFailure = createAction(\n  \"[OWNERS] Update Invitation Status Failure\",\n  props<{ error: any }>()\n);\n\nexport const getOwnerDetails = createAction(\"[OWNERS] Get Owner Details\", props<{ id: string }>());\n\nexport const getOwnerDetailsSuccess = createAction(\"[OWNERS] Get Owner Details Success\", props<any>());\n\nexport const getOwnerDetailsFailure = createAction(\"[OWNERS] Get Owner Details Failure\", props<any>());\n","import { Injectable } from \"@angular/core\";\nimport { SnackBarService } from \"@core/services\";\nimport { Actions, createEffect, Effect, ofType } from \"@ngrx/effects\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { of } from \"rxjs\";\nimport { catchError, exhaustMap, map } from \"rxjs/operators\";\nimport * as OwnersActions from \"../actions/owners.actions\";\nimport { OwnersService } from \"./../../services/owners.service\";\n\n@Injectable()\nexport class OwnersEffects {\n  /**\n   * Fetch all the active owners\n   */\n  loadActiveOwners$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OwnersActions.loadActiveOwners),\n      exhaustMap((action) =>\n        this.service.getActiveOwners(action.params).pipe(\n          map((response: any) => OwnersActions.loadActiveOwnersSuccess(response)),\n          catchError((error) => of(OwnersActions.loadActiveOwnersFailure({ error })))\n        )\n      )\n    )\n  );\n\n  loadPendingOwnerInvitations$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OwnersActions.loadPendingOwnerInvitations),\n      exhaustMap((action) =>\n        this.service.getPendingOwnerInvitations(action.params).pipe(\n          map((response: any) => OwnersActions.loadPendingOwnerInvitationsSuccess(response)),\n          catchError((error) => of(OwnersActions.loadPendingOwnerInvitationsFailure({ error })))\n        )\n      )\n    )\n  );\n\n  updateInvitationStatus$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(OwnersActions.updateInvitationStatus),\n      exhaustMap((action) =>\n        this.service.updateInvitationStatus(action.payload).pipe(\n          map((response: any) => OwnersActions.updateInvitationStatusSuccess(response)),\n          catchError((error) => of(OwnersActions.updateInvitationStatusFailure({ error })))\n        )\n      )\n    );\n  });\n\n  @Effect({ dispatch: false })\n  updateInvitationStatusSuccess = this.actions$.pipe(\n    ofType<any>(OwnersActions.updateInvitationStatusSuccess),\n    map((invitation: any) => {\n      this.snackBar.open(this.translate.instant(\"invitation_status_updated\"));\n    })\n  );\n\n  getOwnerDetails$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(OwnersActions.getOwnerDetails),\n      exhaustMap((action) =>\n        this.service.getOwnerDetailsById(action.id).pipe(\n          map((response: any) => OwnersActions.getOwnerDetailsSuccess(response)),\n          catchError((error) => of(OwnersActions.getOwnerDetailsFailure({ error })))\n        )\n      )\n    );\n  });\n\n  constructor(\n    private actions$: Actions,\n    private service: OwnersService,\n    private snackBar: SnackBarService,\n    private translate: TranslateService\n  ) {}\n}\n","import { createReducer, on } from \"@ngrx/store\";\nimport { IInvitations } from \"@shared/interfaces/invitations\";\nimport { IPagination } from \"@shared/interfaces/pagination\";\nimport { IOwners } from \"../../interfaces/owners\";\nimport * as OwnersActions from \"../actions/owners.actions\";\n\nexport const ownerFeatureKey = \"owners\";\n\nexport interface OwnersState {\n  loading: boolean;\n  message: string;\n  list: IOwners[];\n  detail: IOwners;\n  pagination: IPagination;\n  error: Error;\n  invitations: IInvitations[];\n}\n\nexport const initialOwnersState: OwnersState = {\n  list: [],\n  pagination: null,\n  loading: false,\n  message: \"\",\n  detail: null,\n  error: null,\n  invitations: [],\n};\n\nexport const ownersReducer = createReducer(\n  initialOwnersState,\n  on(OwnersActions.loadActiveOwners, (state: OwnersState) => ({\n    ...state,\n    loading: true,\n  })),\n\n  on(OwnersActions.loadActiveOwnersSuccess, (state: OwnersState, action) => ({\n    ...state,\n    loading: false,\n    list: action.data,\n  })),\n\n  on(OwnersActions.loadActiveOwnersFailure, (state: OwnersState, action) => ({\n    ...state,\n    loading: false,\n  })),\n\n  on(OwnersActions.loadPendingOwnerInvitations, (state: OwnersState) => ({\n    ...state,\n    loading: true,\n  })),\n\n  on(OwnersActions.loadPendingOwnerInvitationsSuccess, (state: OwnersState, action) => ({\n    ...state,\n    loading: false,\n    invitations: action.data,\n  })),\n\n  on(OwnersActions.loadPendingOwnerInvitationsFailure, (state: OwnersState, action) => ({\n    ...state,\n    loading: false,\n  })),\n  on(OwnersActions.getOwnerDetails, (state: OwnersState) => ({\n    ...state,\n    loading: true,\n  })),\n\n  on(OwnersActions.getOwnerDetailsSuccess, (state: OwnersState, action) => ({\n    ...state,\n    loading: false,\n    detail: action.data,\n    message: action.message,\n  })),\n\n  on(OwnersActions.getOwnerDetailsFailure, (state: OwnersState, action) => ({\n    ...state,\n    loading: false,\n    message: action.message,\n  }))\n);\n"]}