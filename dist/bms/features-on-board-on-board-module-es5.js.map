{"version":3,"sources":["webpack:///src/app/features/on-board/components/greet/greet.component.ts","webpack:///src/app/features/on-board/components/greet/greet.component.html","webpack:///src/app/features/on-board/components/on-board/on-board.component.ts","webpack:///src/app/features/on-board/components/on-board/on-board.component.html","webpack:///src/app/features/on-board/components/owner-company/owner-company.component.ts","webpack:///src/app/features/on-board/components/owner-company/owner-company.component.html","webpack:///src/app/features/on-board/components/owner-detail/owner-detail.component.ts","webpack:///src/app/features/on-board/components/owner-detail/owner-detail.component.html","webpack:///src/app/features/on-board/components/owner-individual/owner-individual.component.ts","webpack:///src/app/features/on-board/components/owner-individual/owner-individual.component.html","webpack:///src/app/features/on-board/components/owner-type/owner-type.component.ts","webpack:///src/app/features/on-board/components/owner-type/owner-type.component.html","webpack:///src/app/features/on-board/components/property-apartment/property-apartment.component.ts","webpack:///src/app/features/on-board/components/property-apartment/property-apartment.component.html","webpack:///src/app/features/on-board/components/property-detail/property-detail.component.ts","webpack:///src/app/features/on-board/components/property-detail/property-detail.component.html","webpack:///src/app/features/on-board/components/property-housing/property-housing.component.ts","webpack:///src/app/features/on-board/components/property-housing/property-housing.component.html","webpack:///src/app/features/on-board/components/property-type/property-type.component.ts","webpack:///src/app/features/on-board/components/property-type/property-type.component.html","webpack:///src/app/features/on-board/containers/greet/greet-container.component.ts","webpack:///src/app/features/on-board/containers/greet/greet-container.component.html","webpack:///src/app/features/on-board/containers/owner-detail/owner-detail-container.component.ts","webpack:///src/app/features/on-board/containers/owner-detail/owner-detail-container.component.html","webpack:///src/app/features/on-board/containers/owner-type/owner-type-container.component.ts","webpack:///src/app/features/on-board/containers/owner-type/owner-type-container.component.html","webpack:///src/app/features/on-board/containers/property-apartment/property-apartment-container.component.ts","webpack:///src/app/features/on-board/containers/property-apartment/property-apartment-container.component.html","webpack:///src/app/features/on-board/containers/property-detail/property-detail-container.component.ts","webpack:///src/app/features/on-board/containers/property-detail/property-detail-container.component.html","webpack:///src/app/features/on-board/containers/property-housing/property-housing-container.component.ts","webpack:///src/app/features/on-board/containers/property-housing/property-housing-container.component.html","webpack:///src/app/features/on-board/containers/property-type/property-type-container.component.ts","webpack:///src/app/features/on-board/containers/property-type/property-type-container.component.html","webpack:///src/app/features/on-board/on-board.module.ts","webpack:///src/app/features/on-board/on-board.routing.module.ts","webpack:///src/app/features/on-board/services/on-board.service.ts","webpack:///src/app/features/on-board/store/actions/on-board.actions.ts","webpack:///src/app/features/on-board/store/effects/on-board.effects.ts","webpack:///src/app/features/on-board/store/reducers/on-board.reducer.ts"],"names":["GreetComponent","redirectTo","DASHBOARD","onGoToDashboard","selector","templateUrl","styleUrls","pathName","OnBoardComponent","OwnerCompanyComponent","activatedRoute","previousClicked","nextClicked","countries","provinces","datasService","ownerType","snapshot","paramMap","get","toUpperCase","setOwnerCompanyForm","listenProvinceChanges","filteredProvinces","ownerCompanyForm","valueChanges","pipe","value","filterProvince","filterValue","toLowerCase","filter","province","includes","contactsFormArray","formBuilder","array","createContact","group","name","required","email","registrationNumber","panNumber","address","addressLine1","addressLine2","city","zipCode","wardNo","country","street","contacts","defaultCountry","c","map","res","setValue","type","number","push","index","removeAt","next","valid","contact","el","toString","emit","controls","addContact","onPrevious","onNext","OwnerDetailComponent","OwnerIndividualComponent","ownerIndividualForm","citizenshipNumber","OwnerTypeComponent","selectedOwnerTypeCode","ON_BOARD_OWNER_COMPANY","ON_BOARD_OWNER_INDIVIDUAL","ownerTypeCode","ownershipTypes$","PropertyApartmentComponent","PropertyDetailComponent","ownerId","propertyType","setPropertyDetailForm","propertyDetailForm","facilities","PropertyHousingComponent","PropertyTypeComponent","selectedPropertyTypeCode","ON_BOARD_PROPERTY_DETAIL","propertyTypeCode","propertyTypes$","GreetContainerComponent","router","events","subscribe","val","location","pathname","OwnerDetailContainerComponent","store","ON_BOARD_OWNER_TYPE","ownerDetailPayload","dispatch","payload","OwnerTypeContainerComponent","select","onBoard","ownershipTypes","PropertyApartmentContainerComponent","PropertyDetailContainerComponent","propertyDetailPayload","onPreviousClick","onNextClick","PropertyHousingContainerComponent","PropertyTypeContainerComponent","propertyTypes","OnBoardModule","forFeature","declarations","imports","routes","path","component","children","pathMatch","OnBoardRoutingModule","forChild","exports","OnBoardService","injector","http","OWNERSHIP_TYPES","ownerDetail","post","ONBOARD_OWNER","PROPERTY_TYPES","propertyDetail","ONBOARD_PROPERTY","providedIn","loadOwnershipType","loadOwnershipTypeSuccess","loadOwnershipTypeFailure","onBoardOwner","onBoardOwnerSuccess","onBoardOwnerFailure","loadPropertyType","loadPropertyTypeSuccess","loadPropertyTypeFailure","onBoardProperty","onBoardPropertySuccess","onBoardPropertyFailure","OnBoardEffects","actions$","snackBar","translate","onBoardService","getOwnershipTypes$","action","getOwnershipTypes","response","error","onBoardOwner$","navigateByUrl","ON_BOARD_PROPERTY_TYPE","data","id","getPropertyTypes$","getPropertyTypes","onBoardProperty$","ON_BOARD_GREET","onBoardFeatureKey","initialState","loading","onBoardReducer","state"],"mappings":"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","file":"features-on-board-on-board-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from \"@angular/core\";\nimport { BaseComponent } from \"@core/components\";\nimport { AppRoutes } from \"@core/enums\";\n\n@Component({\n  selector: \"app-greet\",\n  templateUrl: \"./greet.component.html\",\n  styleUrls: [\"./greet.component.scss\"],\n})\nexport class GreetComponent extends BaseComponent implements OnInit {\n  @Input() pathName: string;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  onGoToDashboard() {\n    this.redirectTo(`${AppRoutes.DASHBOARD}`);\n  }\n}\n","<app-wizard-section [pathName]=\"pathName\">\n  <div class=\"success-msg text-center\">\n    <h4>Congratulation</h4>\n    <p>\n      You have submitted all the required detail of yours and your first property for verification. You must get an SMS\n      and an email and when your profile and your property both are verified at our end.\n    </p>\n    <button mat-button class=\"btn btn-theme-green\" (click)=\"onGoToDashboard()\">Go to Dashboard</button>\n  </div>\n</app-wizard-section>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-on-board\",\n  templateUrl: \"./on-board.component.html\",\n})\nexport class OnBoardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<router-outlet></router-outlet>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormArray, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { BaseComponent } from \"@core/components\";\nimport { Observable } from \"rxjs\";\nimport { map, startWith } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-owner-company\",\n  templateUrl: \"./owner-company.component.html\",\n  styleUrls: [\"./owner-company.component.scss\"],\n})\nexport class OwnerCompanyComponent extends BaseComponent implements OnInit {\n  @Output() previousClicked: EventEmitter<null> = new EventEmitter<null>();\n  @Output() nextClicked: EventEmitter<null> = new EventEmitter<null>();\n  @Input() pathName: string;\n  ownerCompanyForm: FormGroup;\n  ownerType: string;\n  contactsFormArray: FormArray;\n  countries = [];\n  provinces = [];\n  filteredProvinces: Observable<any>;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.countries = this.datasService.countries;\n    this.provinces = this.datasService.provinces;\n    this.ownerType = this.activatedRoute.snapshot.paramMap.get(\"ownerType\").toUpperCase();\n    if (this.ownerType) {\n      this.setOwnerCompanyForm();\n      this.listenProvinceChanges();\n    }\n  }\n\n  private listenProvinceChanges() {\n    this.filteredProvinces = this.ownerCompanyForm\n      .get(\"address\")\n      .get(\"province\")\n      .valueChanges.pipe(\n        startWith(\"\"),\n        map((value) => this.filterProvince(value))\n      );\n  }\n\n  private filterProvince(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.provinces.filter((province) => province.value.toLowerCase().includes(filterValue));\n  }\n\n  setOwnerCompanyForm() {\n    this.contactsFormArray = this.formBuilder.array([this.createContact()]);\n    this.ownerCompanyForm = this.formBuilder.group({\n      ownerType: [this.ownerType],\n      name: [\"\", [Validators.required]],\n      email: [\"\", [Validators.required, Validators.email]],\n      registrationNumber: [\"\", [Validators.required]],\n      panNumber: [\"\", [Validators.required]],\n      address: this.formBuilder.group({\n        addressLine1: [\"\", [Validators.required]],\n        addressLine2: \"\",\n        city: [\"\", [Validators.required]],\n        zipCode: [\"\", [Validators.required]],\n        wardNo: [\"\", [Validators.required]],\n        country: [\"\", [Validators.required]],\n        province: [\"\", [Validators.required]],\n        street: [\"\", [Validators.required]],\n      }),\n      contacts: this.contactsFormArray,\n    });\n\n    const defaultCountry = this.countries.filter((c) => c.value === \"Nepal\").map((res) => res.value);\n    this.ownerCompanyForm.get(\"address\").get(\"country\").setValue(defaultCountry[0]);\n  }\n\n  private createContact() {\n    return this.formBuilder.group({\n      type: [\"phone\"],\n      number: \"\",\n    });\n  }\n\n  addContact(): void {\n    this.contactsFormArray.push(this.createContact());\n  }\n\n  removeContact(index: number) {\n    this.contactsFormArray.removeAt(index);\n  }\n\n  onPrevious() {\n    this.previousClicked.next();\n  }\n\n  onNext() {\n    if (this.ownerCompanyForm.valid) {\n      this.ownerCompanyForm.value[\"phones\"] = this.ownerCompanyForm.value.contacts\n        .filter((contact) => contact.type === \"phone\")\n        .map((el) => el.number.toString());\n      this.ownerCompanyForm.value[\"mobileNumbers\"] = this.ownerCompanyForm.value.contacts\n        .filter((contact) => contact.type === \"mobile\")\n        .map((el) => el.number.toString());\n\n      this.nextClicked.emit(this.ownerCompanyForm.value);\n    }\n  }\n\n  getContactLabel(index: number) {\n    return \"Phone\";\n  }\n\n  onPhoneIconClick(index: number) {\n    this.contactsFormArray.controls[index][\"controls\"][\"type\"].setValue(\"phone\");\n  }\n\n  onMobileIconClick(index: number) {\n    this.contactsFormArray.controls[index][\"controls\"][\"type\"].setValue(\"mobile\");\n  }\n}\n","<app-wizard-section [pathName]=\"pathName\">\n  <h4>Company Detail as owner</h4>\n  <form class=\"detail-form\" [formGroup]=\"ownerCompanyForm\">\n    <!-- <div class=\"form-field-wrapper\">\n      <div class=\"form-field-input is-image-field\">\n        <label>Company Logo</label>\n        <span class=\"file-upload\">\n          <input type=\"file\" />\n          <label>Upload</label>\n        </span>\n      </div>\n    </div> -->\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label> Company Name </mat-label>\n        <input type=\"text\" matInput formControlName=\"name\" />\n        <mat-error>\n          <app-error-message [control]=\"ownerCompanyForm.get('name')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label> Company Registration Number </mat-label>\n        <input type=\"text\" matInput formControlName=\"registrationNumber\" />\n        <mat-error>\n          <app-error-message [control]=\"ownerCompanyForm.get('registrationNumber')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label> Company PAN Number </mat-label>\n        <input type=\"text\" matInput formControlName=\"panNumber\" />\n        <mat-error>\n          <app-error-message [control]=\"ownerCompanyForm.get('panNumber')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label> Company Email </mat-label>\n        <input type=\"email\" matInput formControlName=\"email\" />\n        <mat-error>\n          <app-error-message [control]=\"ownerCompanyForm.get('email')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"contact-details contact-details-company\">\n      <h5 class=\"form-section-title\">Contact <i class=\"las la-plus\" (click)=\"addContact()\"></i></h5>\n      <ng-container formArrayName=\"contacts\" *ngFor=\"let contact of contactsFormArray.controls; let i = index\">\n        <div class=\"d-flex has-2-cols\" [formGroupName]=\"i\">\n          <div class=\"form-field-wrapper col\">\n            <div class=\"contact-type-options\">\n              <button\n                mat-icon-button\n                matPrefix\n                class=\"matPrefix\"\n                [class.selected]=\"contact.value.type === 'phone'\"\n                (click)=\"onPhoneIconClick(i)\"\n              >\n                <i class=\"las la-phone\"></i>\n              </button>\n              <button\n                mat-icon-button\n                matPrefix\n                class=\"matPrefix\"\n                [class.selected]=\"contact.value.type === 'mobile'\"\n                (click)=\"onMobileIconClick(i)\"\n              >\n                <i class=\"las la-mobile\"></i>\n              </button>\n            </div>\n            <mat-form-field>\n              <mat-label>{{ contact.value.type }} </mat-label>\n              <input appOnlyNumber matInput formControlName=\"number\" />\n              <button mat-icon-button matSuffix *ngIf=\"contactsFormArray.controls.length > 1\">\n                <i class=\"las la-minus-circle\" (click)=\"removeContact(i)\"></i>\n              </button>\n            </mat-form-field>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n\n    <div class=\"address-details address-details-company\" formGroupName=\"address\">\n      <h5 class=\"form-section-title\">Address</h5>\n      <div class=\"d-flex has-2-cols\">\n        <div class=\"form-field-wrapper col full-width\">\n          <mat-form-field>\n            <mat-label> Address Line 1 </mat-label>\n            <input type=\"text\" matInput formControlName=\"addressLine1\" />\n            <mat-error>\n              <app-error-message [control]=\"ownerCompanyForm.get('address').get('addressLine1')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col full-width\">\n          <mat-form-field>\n            <mat-label> Address Line 2 </mat-label>\n            <input type=\"text\" matInput formControlName=\"addressLine2\" />\n            <mat-error>\n              <app-error-message [control]=\"ownerCompanyForm.get('address').get('addressLine2')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Country </mat-label>\n            <mat-select formControlName=\"country\">\n              <mat-option [value]=\"country.value\" *ngFor=\"let country of countries\">{{ country.title }}</mat-option>\n            </mat-select>\n            <mat-error>\n              <app-error-message [control]=\"ownerCompanyForm.get('address').get('country')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Province </mat-label>\n            <input\n              type=\"text\"\n              placeholder=\"Select Province\"\n              matInput\n              formControlName=\"province\"\n              [matAutocomplete]=\"auto\"\n            />\n            <mat-autocomplete #auto=\"matAutocomplete\">\n              <mat-option *ngFor=\"let province of filteredProvinces | async\" [value]=\"province.value\">\n                {{ province.name }}\n              </mat-option>\n            </mat-autocomplete>\n            <mat-error>\n              <app-error-message [control]=\"ownerCompanyForm.get('address').get('province')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> City </mat-label>\n            <input type=\"text\" matInput formControlName=\"city\" />\n            <mat-error>\n              <app-error-message [control]=\"ownerCompanyForm.get('address').get('city')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Zip Code </mat-label>\n            <input matInput formControlName=\"zipCode\" appOnlyNumber />\n            <mat-error>\n              <app-error-message [control]=\"ownerCompanyForm.get('address').get('zipCode')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Ward No. </mat-label>\n            <input matInput formControlName=\"wardNo\" appOnlyNumber />\n            <mat-error>\n              <app-error-message [control]=\"ownerCompanyForm.get('address').get('wardNo')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Street </mat-label>\n            <input matInput formControlName=\"street\" />\n            <mat-error>\n              <app-error-message [control]=\"ownerCompanyForm.get('address').get('street')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class=\"documents contains-mulitple-images\">\n      <h5 class=\"form-section-title\">Documents</h5>\n\n      <div class=\"d-flex has-2-cols\">\n        <div class=\"col image-holder\">\n          <figure>\n            <img src=\"./assets/images/hero.jpg\" alt=\"\" />\n            <figcaption>Company Registration Certificate</figcaption>\n            <span>\n              <input type=\"file\" />\n              <i class=\"las la-camera\"></i>\n            </span>\n          </figure>\n          <div class=\"progressbar\">\n            <div class=\"progressbar-inner\" style=\"width: 25%\"></div>\n          </div>\n        </div>\n\n        <div class=\"col image-holder\">\n          <figure>\n            <img src=\"./assets/images/hero.jpg\" alt=\"\" />\n            <figcaption>Company PAN Certificate</figcaption>\n          </figure>\n          <div class=\"progressbar\">\n            <div class=\"progressbar-inner\" style=\"width: 25%\"></div>\n          </div>\n        </div>\n      </div>\n    </div> -->\n\n    <div class=\"buttons-wrapper d-flex\">\n      <a mat-button class=\"btn btn-theme-white\" (click)=\"onPrevious()\">Previous</a>\n      <button mat-button class=\"btn btn-theme-green\" (click)=\"onNext()\">Next</button>\n    </div>\n  </form>\n</app-wizard-section>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-owner-detail\",\n  templateUrl: \"./owner-detail.component.html\",\n  styleUrls: [\"./owner-detail.component.scss\"],\n})\nexport class OwnerDetailComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>owner-detail works!</p>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormArray, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { BaseComponent } from \"@core/components\";\nimport { Observable } from \"rxjs\";\nimport { map, startWith } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-owner-individual\",\n  templateUrl: \"./owner-individual.component.html\",\n  styleUrls: [\"./owner-individual.component.scss\"],\n})\nexport class OwnerIndividualComponent extends BaseComponent implements OnInit {\n  @Output() previousClicked: EventEmitter<null> = new EventEmitter<null>();\n  @Output() nextClicked: EventEmitter<null> = new EventEmitter<null>();\n  @Input() pathName: string;\n  ownerIndividualForm: FormGroup;\n  ownerType: string;\n  contactsFormArray: FormArray;\n  countries = [];\n  provinces = [];\n  filteredProvinces: Observable<any>;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.countries = this.datasService.countries;\n    this.provinces = this.datasService.provinces;\n    this.ownerType = this.activatedRoute.snapshot.paramMap.get(\"ownerType\").toUpperCase();\n    if (this.ownerType) {\n      this.setOwnerCompanyForm();\n      this.listenProvinceChanges();\n    }\n  }\n\n  private listenProvinceChanges() {\n    this.filteredProvinces = this.ownerIndividualForm\n      .get(\"address\")\n      .get(\"province\")\n      .valueChanges.pipe(\n        startWith(\"\"),\n        map((value) => this.filterProvince(value))\n      );\n  }\n\n  private filterProvince(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.provinces.filter((province) => province.value.toLowerCase().includes(filterValue));\n  }\n\n  setOwnerCompanyForm() {\n    this.contactsFormArray = this.formBuilder.array([this.createContact()]);\n    this.ownerIndividualForm = this.formBuilder.group({\n      ownerType: [this.ownerType],\n      name: [\"\", [Validators.required]],\n      email: [\"\", [Validators.required, Validators.email]],\n      citizenshipNumber: [\"\", [Validators.required]],\n      panNumber: [\"\", [Validators.required]],\n      address: this.formBuilder.group({\n        addressLine1: [\"\", [Validators.required]],\n        addressLine2: \"\",\n        city: [\"\", [Validators.required]],\n        zipCode: [\"\", [Validators.required]],\n        wardNo: [\"\", [Validators.required]],\n        country: [\"\", [Validators.required]],\n        province: [\"\", [Validators.required]],\n        street: [\"\", [Validators.required]],\n      }),\n      contacts: this.contactsFormArray,\n    });\n\n    const defaultCountry = this.countries.filter((c) => c.value === \"Nepal\").map((res) => res.value);\n    this.ownerIndividualForm.get(\"address\").get(\"country\").setValue(defaultCountry[0]);\n  }\n\n  private createContact() {\n    return this.formBuilder.group({\n      type: [\"phone\"],\n      number: \"\",\n    });\n  }\n\n  addContact(): void {\n    this.contactsFormArray.push(this.createContact());\n  }\n\n  removeContact(index: number) {\n    this.contactsFormArray.removeAt(index);\n  }\n\n  onPrevious() {\n    this.previousClicked.next();\n  }\n\n  onNext() {\n    if (this.ownerIndividualForm.valid) {\n      this.ownerIndividualForm.value[\"phones\"] = this.ownerIndividualForm.value.contacts\n        .filter((contact) => contact.type === \"phone\")\n        .map((el) => el.number.toString());\n      this.ownerIndividualForm.value[\"mobileNumbers\"] = this.ownerIndividualForm.value.contacts\n        .filter((contact) => contact.type === \"mobile\")\n        .map((el) => el.number.toString());\n\n      this.nextClicked.emit(this.ownerIndividualForm.value);\n    }\n  }\n\n  getContactLabel(index: number) {\n    return \"Phone\";\n  }\n\n  onPhoneIconClick(index: number) {\n    this.contactsFormArray.controls[index][\"controls\"][\"type\"].setValue(\"phone\");\n  }\n\n  onMobileIconClick(index: number) {\n    this.contactsFormArray.controls[index][\"controls\"][\"type\"].setValue(\"mobile\");\n  }\n}\n","<app-wizard-section [pathName]=\"pathName\">\n  <h4>Individual Detail as owner</h4>\n  <form class=\"detail-form\" [formGroup]=\"ownerIndividualForm\">\n    <!-- <div class=\"form-field-wrapper\">\n      <div class=\"form-field-input is-image-field\">\n        <label>Upload Image</label>\n        <span class=\"file-upload\">\n          <input type=\"file\" />\n          <label>Upload</label>\n        </span>\n      </div>\n    </div> -->\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label> Full Name </mat-label>\n        <input type=\"text\" matInput formControlName=\"name\" />\n        <mat-error>\n          <app-error-message [control]=\"ownerIndividualForm.get('name')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label> PAN Number </mat-label>\n        <input type=\"text\" matInput formControlName=\"panNumber\" />\n        <mat-error>\n          <app-error-message [control]=\"ownerIndividualForm.get('panNumber')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label> Citizenship Number </mat-label>\n        <input type=\"text\" matInput formControlName=\"citizenshipNumber\" />\n        <mat-error>\n          <app-error-message [control]=\"ownerIndividualForm.get('citizenshipNumber')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label> Email </mat-label>\n        <input type=\"text\" matInput formControlName=\"email\" />\n        <mat-error>\n          <app-error-message [control]=\"ownerIndividualForm.get('email')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"contact-details contact-details-individual\">\n      <h5 class=\"form-section-title\">Contact <i class=\"las la-plus\" (click)=\"addContact()\"></i></h5>\n      <ng-container formArrayName=\"contacts\" *ngFor=\"let contact of contactsFormArray.controls; let i = index\">\n        <div class=\"d-flex has-2-cols\" [formGroupName]=\"i\">\n          <div class=\"form-field-wrapper col\">\n            <div class=\"contact-type-options\">\n              <button\n                mat-icon-button\n                matPrefix\n                class=\"matPrefix\"\n                [class.selected]=\"contact.value.type === 'phone'\"\n                (click)=\"onPhoneIconClick(i)\"\n              >\n                <i class=\"las la-phone\"></i>\n              </button>\n              <button\n                mat-icon-button\n                matPrefix\n                class=\"matPrefix\"\n                [class.selected]=\"contact.value.type === 'mobile'\"\n                (click)=\"onMobileIconClick(i)\"\n              >\n                <i class=\"las la-mobile\"></i>\n              </button>\n            </div>\n            <mat-form-field>\n              <mat-label>{{ contact.value.type }} </mat-label>\n\n              <input appOnlyNumber matInput formControlName=\"number\" />\n              <button mat-icon-button matSuffix *ngIf=\"contactsFormArray.controls.length > 1\">\n                <i class=\"las la-minus-circle\" (click)=\"removeContact(i)\"></i>\n              </button>\n            </mat-form-field>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n\n    <div class=\"address-details address-details-individual\" formGroupName=\"address\">\n      <h5 class=\"form-section-title\">Address</h5>\n      <div class=\"d-flex has-2-cols\">\n        <div class=\"form-field-wrapper col full-width\">\n          <mat-form-field>\n            <mat-label> Address Line 1 </mat-label>\n            <input type=\"text\" matInput formControlName=\"addressLine1\" />\n            <mat-error>\n              <app-error-message [control]=\"ownerIndividualForm.get('address').get('addressLine1')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col full-width\">\n          <mat-form-field>\n            <mat-label> Address Line 2 </mat-label>\n            <input type=\"text\" matInput formControlName=\"addressLine2\" />\n            <mat-error>\n              <app-error-message [control]=\"ownerIndividualForm.get('address').get('addressLine2')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Country </mat-label>\n            <mat-select formControlName=\"country\">\n              <mat-option [value]=\"country.value\" *ngFor=\"let country of countries\">{{ country.title }}</mat-option>\n            </mat-select>\n            <mat-error>\n              <app-error-message [control]=\"ownerIndividualForm.get('address').get('country')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Province </mat-label>\n            <input\n              type=\"text\"\n              placeholder=\"Select Province\"\n              matInput\n              formControlName=\"province\"\n              [matAutocomplete]=\"auto\"\n            />\n            <mat-autocomplete #auto=\"matAutocomplete\">\n              <mat-option *ngFor=\"let province of filteredProvinces | async\" [value]=\"province.value\">\n                {{ province.name }}\n              </mat-option>\n            </mat-autocomplete>\n            <mat-error>\n              <app-error-message [control]=\"ownerIndividualForm.get('address').get('province')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> City </mat-label>\n            <input type=\"text\" matInput formControlName=\"city\" />\n            <mat-error>\n              <app-error-message [control]=\"ownerIndividualForm.get('address').get('city')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Zip Code </mat-label>\n            <input matInput formControlName=\"zipCode\" appOnlyNumber />\n            <mat-error>\n              <app-error-message [control]=\"ownerIndividualForm.get('address').get('zipCode')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Ward No. </mat-label>\n            <input matInput formControlName=\"wardNo\" appOnlyNumber />\n            <mat-error>\n              <app-error-message [control]=\"ownerIndividualForm.get('address').get('wardNo')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Street </mat-label>\n            <input matInput formControlName=\"street\" />\n            <mat-error>\n              <app-error-message [control]=\"ownerIndividualForm.get('address').get('street')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class=\"documents contains-mulitple-images\">\n      <h5 class=\"form-section-title\">Documents</h5>\n\n      <div class=\"d-flex has-2-cols\">\n        <div class=\"col image-holder\">\n          <figure>\n            <img src=\"./assets/images/hero.jpg\" alt=\"citizenship\" />\n            <figcaption>citizenship</figcaption>\n            <span>\n              <input type=\"file\" />\n              <i class=\"las la-camera\"></i>\n            </span>\n          </figure>\n          <div class=\"progressbar\">\n            <div class=\"progressbar-inner\" style=\"width: 25%\"></div>\n          </div>\n        </div>\n\n        <div class=\"col image-holder\">\n          <figure>\n            <img src=\"./assets/images/hero.jpg\" alt=\"citizenship\" />\n            <figcaption>citizenship</figcaption>\n          </figure>\n          <div class=\"progressbar\">\n            <div class=\"progressbar-inner\" style=\"width: 25%\"></div>\n          </div>\n        </div>\n      </div>\n    </div> -->\n\n    <div class=\"buttons-wrapper d-flex\">\n      <a mat-button class=\"btn btn-theme-white\" (click)=\"onPrevious()\">Previous</a>\n      <button mat-button class=\"btn btn-theme-green\" (click)=\"onNext()\">Next</button>\n    </div>\n  </form>\n</app-wizard-section>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { BaseComponent } from \"@core/components\";\nimport { AppRoutes } from \"@core/enums\";\nimport { Observable } from \"rxjs\";\nimport { IOwnershipType } from \"../../interfaces/ownership-type\";\n\n@Component({\n  selector: \"app-owner-type\",\n  templateUrl: \"./owner-type.component.html\",\n})\nexport class OwnerTypeComponent extends BaseComponent implements OnInit {\n  @Input() pathName: string;\n  @Input() ownershipTypes$: Observable<IOwnershipType[]>;\n  selectedOwnerTypeCode: string;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.selectedOwnerTypeCode = \"COMPANY\";\n  }\n\n  onNext() {\n    if (this.selectedOwnerTypeCode === \"COMPANY\") {\n      this.redirectTo(AppRoutes.ON_BOARD_OWNER_COMPANY);\n    }\n\n    if (this.selectedOwnerTypeCode === \"INDIVIDUAL\") {\n      this.redirectTo(AppRoutes.ON_BOARD_OWNER_INDIVIDUAL);\n    }\n  }\n\n  onSelectOwnerType(ownerTypeCode: string) {\n    this.selectedOwnerTypeCode = ownerTypeCode;\n  }\n}\n","<app-wizard-section [pathName]=\"pathName\">\n  <h4>Owner Type</h4>\n  <mat-nav-list class=\"lists lists-owner-type\">\n    <ng-container *ngFor=\"let ownershipType of ownershipTypes$ | async\">\n      <a\n        mat-list-item\n        class=\"d-flex lists-item selected\"\n        [class.selected]=\"ownershipType.code === selectedOwnerTypeCode\"\n        (click)=\"onSelectOwnerType(ownershipType.code)\"\n      >\n        <figure>\n          <i class=\"las la-city\" *ngIf=\"ownershipType.code === 'COMPANY'\"></i>\n          <i class=\"las la-building\" *ngIf=\"ownershipType.code === 'INDIVIDUAL'\"></i>\n        </figure>\n        <div class=\"lists-item-content\">\n          <h5>{{ ownershipType?.title }}</h5>\n          <span *ngIf=\"ownershipType.code === 'COMPANY'\">Company with multiple sites</span>\n          <span *ngIf=\"ownershipType.code === 'INDIVIDUAL'\">Individual complex</span>\n        </div>\n      </a>\n    </ng-container>\n  </mat-nav-list>\n  <div class=\"buttons-wrapper d-flex\">\n    <button mat-button class=\"btn btn-theme-green\" (click)=\"onNext()\">Next</button>\n  </div>\n</app-wizard-section>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-property-apartment\",\n  templateUrl: \"./property-apartment.component.html\",\n  styleUrls: [\"./property-apartment.component.scss\"],\n})\nexport class PropertyApartmentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-wizard-section>\n  <h4>Housing</h4>\n  <form class=\"detail-form\">\n    <!-- <div class=\"form-field-wrapper\">\n          <div class=\"form-field-input is-image-field\">\n            <label>Site Logo</label>\n            <span class=\"file-upload\">\n              <input type=\"file\" />\n              <label>Upload</label>\n            </span>\n          </div>\n        </div> -->\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label> Site Name </mat-label>\n        <input type=\"text\" matInput />\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label>Apartment Number</mat-label>\n        <input type=\"text\" matInput />\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-field-wrapper\">\n      <div class=\"form-field-input\">\n        <input type=\"text\" />\n        <label>Email</label>\n        <span class=\"underline\"></span>\n      </div>\n    </div>\n\n    <div class=\"contact-details contact-details-site\">\n      <h5 class=\"form-section-title\">Contact <i class=\"las la-plus\"></i></h5>\n      <div class=\"d-flex has-2-cols\">\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label>Phone Number</mat-label>\n            <input type=\"number\" matInput />\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label>Mobile Number</mat-label>\n            <input type=\"number\" matInput />\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"address-details address-details-site\">\n      <h5 class=\"form-section-title\">Address</h5>\n      <div class=\"d-flex has-2-cols\">\n        <div class=\"form-field-wrapper col full-width\">\n          <mat-form-field>\n            <mat-label> Address Line 1 </mat-label>\n            <input type=\"text\" matInput />\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col full-width\">\n          <mat-form-field>\n            <mat-label> Address Line 2 </mat-label>\n            <input type=\"text\" matInput />\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Country </mat-label>\n            <mat-select>\n              <mat-option value=\"nepal\">Nepal</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Province </mat-label>\n            <mat-select>\n              <mat-option value=\"bagmati\">Bagmati</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> City </mat-label>\n            <input type=\"text\" matInput />\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Zip Code </mat-label>\n            <input type=\"number\" matInput />\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Ward No. </mat-label>\n            <input type=\"number\" matInput />\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class=\"form-field-wrapper\">\n          <div class=\"form-field-input\">\n            <iframe\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d9991.465460885658!2d85.32807257250968!3d27.70133511821701!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x39eb19afccf54599%3A0x93bc454f89b99ac6!2sAnnapurna%20Neuro%20Hospital!5e0!3m2!1sen!2snp!4v1601871580414!5m2!1sen!2snp\"\n              width=\"600\"\n              height=\"450\"\n              frameborder=\"0\"\n              style=\"border: 0\"\n              allowfullscreen=\"\"\n              aria-hidden=\"false\"\n              tabindex=\"0\"\n            ></iframe>\n            <label>Map Location</label>\n            <span class=\"underline\"></span>\n          </div>\n        </div> -->\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label>Facilities</mat-label>\n        <textarea matInput></textarea>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label>No. of Houses</mat-label>\n        <input type=\"number\" matInput />\n      </mat-form-field>\n    </div>\n\n    <!-- <div class=\"site-images contains-mulitple-images\">\n          <h5 class=\"form-section-title\">Site images</h5>\n          <div class=\"d-flex has-2-cols\">\n            <div class=\"image-holder col\">\n              <figure>\n                <img src=\"./assets/images/hero.jpg\" alt=\"image 1\" />\n                <figcaption>Image1</figcaption>\n                <span>\n                  <input type=\"file\" />\n                  <i class=\"las la-camera\"></i>\n                </span>\n              </figure>\n            </div>\n\n            <div class=\"image-holder col\">\n              <figure>\n                <img src=\"./assets/images/hero.jpg\" alt=\"image 1\" />\n                <figcaption>Image1</figcaption>\n                <span>\n                  <input type=\"file\" />\n                  <i class=\"las la-camera\"></i>\n                </span>\n              </figure>\n            </div>\n\n            <div class=\"image-holder col\">\n              <figure>\n                <img src=\"./assets/images/hero.jpg\" alt=\"image 1\" />\n                <figcaption>Image1</figcaption>\n                <span>\n                  <input type=\"file\" />\n                  <i class=\"las la-camera\"></i>\n                </span>\n              </figure>\n            </div>\n\n            <div class=\"image-holder col\">\n              <figure>\n                <img src=\"./assets/images/hero.jpg\" alt=\"image 1\" />\n                <figcaption>Image1</figcaption>\n                <span>\n                  <input type=\"file\" />\n                  <i class=\"las la-camera\"></i>\n                </span>\n              </figure>\n            </div>\n\n            <div class=\"form-field-wrapper col\">\n              <div class=\"form-field-input is-image-field\">\n                <span class=\"file-upload\">\n                  <input type=\"file\" />\n                  <label>Add More</label>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div> -->\n\n    <div class=\"buttons-wrapper d-flex\">\n      <a href=\"owner-type.html\" mat-button class=\"btn btn-theme-white\">Previous</a>\n      <button mat-button class=\"btn btn-theme-green\">Next</button>\n    </div>\n  </form>\n</app-wizard-section>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormArray, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { BaseComponent } from \"@core/components\";\nimport { Observable } from \"rxjs\";\nimport { map, startWith } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-property-detail\",\n  templateUrl: \"./property-detail.component.html\",\n  styleUrls: [\"./property-detail.component.scss\"],\n})\nexport class PropertyDetailComponent extends BaseComponent implements OnInit {\n  @Output() previousClicked: EventEmitter<null> = new EventEmitter<null>();\n  @Output() nextClicked: EventEmitter<any> = new EventEmitter<any>();\n  @Input() pathName: string;\n  propertyDetailForm: FormGroup;\n  propertyType: string;\n  ownerId: string;\n  contactsFormArray: FormArray;\n  countries = [];\n  provinces = [];\n  filteredProvinces: Observable<any>;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    super();\n    this.ownerId = this.activatedRoute.snapshot.paramMap.get(\"ownerId\");\n    this.propertyType = this.activatedRoute.snapshot.paramMap.get(\"propertyType\").toUpperCase();\n  }\n\n  ngOnInit(): void {\n    this.countries = this.datasService.countries;\n    this.provinces = this.datasService.provinces;\n    this.setPropertyDetailForm();\n    this.listenProvinceChanges();\n  }\n\n  private listenProvinceChanges() {\n    this.filteredProvinces = this.propertyDetailForm\n      .get(\"address\")\n      .get(\"province\")\n      .valueChanges.pipe(\n        startWith(\"\"),\n        map((value) => this.filterProvince(value))\n      );\n  }\n\n  private filterProvince(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.provinces.filter((province) => province.value.toLowerCase().includes(filterValue));\n  }\n\n  setPropertyDetailForm() {\n    this.contactsFormArray = this.formBuilder.array([this.createContact()]);\n    this.propertyDetailForm = this.formBuilder.group({\n      ownerId: [this.ownerId],\n      propertyType: [this.propertyType],\n      name: [\"\", [Validators.required]],\n      email: [\"\", [Validators.required, Validators.email]],\n      address: this.formBuilder.group({\n        addressLine1: [\"\", [Validators.required]],\n        addressLine2: \"\",\n        city: [\"\", [Validators.required]],\n        zipCode: [\"\", [Validators.required]],\n        wardNo: [\"\", [Validators.required]],\n        country: [\"\", [Validators.required]],\n        province: [\"\", [Validators.required]],\n        street: [\"\", [Validators.required]],\n      }),\n      contacts: this.contactsFormArray,\n      facilities: [\"\"],\n    });\n\n    const defaultCountry = this.countries.filter((c) => c.value === \"Nepal\").map((res) => res.value);\n    this.propertyDetailForm.get(\"address\").get(\"country\").setValue(defaultCountry[0]);\n  }\n\n  onPrevious() {\n    this.previousClicked.next();\n  }\n\n  onNext() {\n    if (this.propertyDetailForm.valid) {\n      this.propertyDetailForm.value[\"phones\"] = this.propertyDetailForm.value.contacts\n        .filter((contact) => contact.type === \"phone\")\n        .map((el) => el.number.toString());\n      this.propertyDetailForm.value[\"mobileNumbers\"] = this.propertyDetailForm.value.contacts\n        .filter((contact) => contact.type === \"mobile\")\n        .map((el) => el.number.toString());\n\n      this.nextClicked.emit(this.propertyDetailForm.value);\n    }\n  }\n\n  private createContact() {\n    return this.formBuilder.group({\n      type: [\"phone\"],\n      number: \"\",\n    });\n  }\n\n  addContact(): void {\n    this.contactsFormArray.push(this.createContact());\n  }\n\n  removeContact(index: number) {\n    this.contactsFormArray.removeAt(index);\n  }\n\n  onPhoneIconClick(index: number) {\n    this.contactsFormArray.controls[index][\"controls\"][\"type\"].setValue(\"phone\");\n  }\n\n  onMobileIconClick(index: number) {\n    this.contactsFormArray.controls[index][\"controls\"][\"type\"].setValue(\"mobile\");\n  }\n}\n","<app-wizard-section [pathName]=\"pathName\">\n  <h4>{{ propertyType | uppercase }}</h4>\n  <form class=\"detail-form\" [formGroup]=\"propertyDetailForm\">\n    <!-- <div class=\"form-field-wrapper\">\n          <div class=\"form-field-input is-image-field\">\n            <label>Site Logo</label>\n            <span class=\"file-upload\">\n              <input type=\"file\" />\n              <label>Upload</label>\n            </span>\n          </div>\n        </div> -->\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label> Property Name </mat-label>\n        <input type=\"text\" matInput formControlName=\"name\" />\n        <mat-error>\n          <app-error-message [control]=\"propertyDetailForm.get('name')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label> Email </mat-label>\n        <input type=\"email\" matInput formControlName=\"email\" />\n        <mat-error>\n          <app-error-message [control]=\"propertyDetailForm.get('email')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"contact-details contact-details-site\">\n      <h5 class=\"form-section-title\">Company Contact <i class=\"las la-plus\" (click)=\"addContact()\"></i></h5>\n      <ng-container formArrayName=\"contacts\" *ngFor=\"let contact of contactsFormArray.controls; let i = index\">\n        <div class=\"d-flex has-2-cols\" [formGroupName]=\"i\">\n          <div class=\"form-field-wrapper col\">\n            <div class=\"contact-type-options\">\n              <button\n                mat-icon-button\n                matPrefix\n                class=\"matPrefix\"\n                [class.selected]=\"contact.value.type === 'phone'\"\n                (click)=\"onPhoneIconClick(i)\"\n              >\n                <i class=\"las la-phone\"></i>\n              </button>\n              <button\n                mat-icon-button\n                matPrefix\n                class=\"matPrefix\"\n                [class.selected]=\"contact.value.type === 'mobile'\"\n                (click)=\"onMobileIconClick(i)\"\n              >\n                <i class=\"las la-mobile\"></i>\n              </button>\n            </div>\n            <mat-form-field>\n              <mat-label>{{ contact.value.type }} </mat-label>\n\n              <input appOnlyNumber matInput formControlName=\"number\" />\n              <button mat-icon-button matSuffix *ngIf=\"contactsFormArray.controls.length > 1\">\n                <i class=\"las la-minus-circle\" (click)=\"removeContact(i)\"></i>\n              </button>\n            </mat-form-field>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n\n    <div class=\"address-details address-details-site\" formGroupName=\"address\">\n      <h5 class=\"form-section-title\">Address</h5>\n      <div class=\"d-flex has-2-cols\">\n        <div class=\"form-field-wrapper col full-width\">\n          <mat-form-field>\n            <mat-label> Address Line 1 </mat-label>\n            <input type=\"text\" matInput formControlName=\"addressLine1\" />\n            <mat-error>\n              <app-error-message [control]=\"propertyDetailForm.get('address').get('addressLine1')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col full-width\">\n          <mat-form-field>\n            <mat-label> Address Line 2 </mat-label>\n            <input type=\"text\" matInput formControlName=\"addressLine2\" />\n            <mat-error>\n              <app-error-message [control]=\"propertyDetailForm.get('address').get('addressLine2')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Country </mat-label>\n            <mat-select formControlName=\"country\">\n              <mat-option [value]=\"country.value\" *ngFor=\"let country of countries\">{{ country.title }}</mat-option>\n            </mat-select>\n            <mat-error>\n              <app-error-message [control]=\"propertyDetailForm.get('address').get('country')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Province </mat-label>\n            <input\n              type=\"text\"\n              placeholder=\"Select Province\"\n              matInput\n              formControlName=\"province\"\n              [matAutocomplete]=\"auto\"\n            />\n            <mat-autocomplete #auto=\"matAutocomplete\">\n              <mat-option *ngFor=\"let province of filteredProvinces | async\" [value]=\"province.value\">\n                {{ province.name }}\n              </mat-option>\n            </mat-autocomplete>\n            <mat-error>\n              <app-error-message [control]=\"propertyDetailForm.get('address').get('province')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> City </mat-label>\n            <input type=\"text\" matInput formControlName=\"city\" />\n            <mat-error>\n              <app-error-message [control]=\"propertyDetailForm.get('address').get('city')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Zip Code </mat-label>\n            <input matInput formControlName=\"zipCode\" appOnlyNumber />\n            <mat-error>\n              <app-error-message [control]=\"propertyDetailForm.get('address').get('zipCode')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Ward No. </mat-label>\n            <input matInput formControlName=\"wardNo\" appOnlyNumber />\n            <mat-error>\n              <app-error-message [control]=\"propertyDetailForm.get('address').get('wardNo')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Street </mat-label>\n            <input matInput formControlName=\"street\" />\n            <mat-error>\n              <app-error-message [control]=\"propertyDetailForm.get('address').get('street')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class=\"form-field-wrapper\">\n          <div class=\"form-field-input\">\n            <iframe\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d9991.465460885658!2d85.32807257250968!3d27.70133511821701!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x39eb19afccf54599%3A0x93bc454f89b99ac6!2sAnnapurna%20Neuro%20Hospital!5e0!3m2!1sen!2snp!4v1601871580414!5m2!1sen!2snp\"\n              width=\"600\"\n              height=\"450\"\n              frameborder=\"0\"\n              style=\"border: 0\"\n              allowfullscreen=\"\"\n              aria-hidden=\"false\"\n              tabindex=\"0\"\n            ></iframe>\n            <label>Map Location</label>\n            <span class=\"underline\"></span>\n          </div>\n        </div> -->\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label>Facilities</mat-label>\n        <textarea matInput formControlName=\"facilities\"></textarea>\n        <mat-error>\n          <app-error-message [control]=\"propertyDetailForm.get('facilities')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <!-- <div class=\"site-images contains-mulitple-images\">\n          <h5 class=\"form-section-title\">Site images</h5>\n          <div class=\"d-flex has-2-cols\">\n            <div class=\"image-holder col\">\n              <figure>\n                <img src=\"./assets/images/hero.jpg\" alt=\"image 1\" />\n                <figcaption>Image1</figcaption>\n                <span>\n                  <input type=\"file\" />\n                  <i class=\"las la-camera\"></i>\n                </span>\n              </figure>\n            </div>\n\n            <div class=\"image-holder col\">\n              <figure>\n                <img src=\"./assets/images/hero.jpg\" alt=\"image 1\" />\n                <figcaption>Image1</figcaption>\n                <span>\n                  <input type=\"file\" />\n                  <i class=\"las la-camera\"></i>\n                </span>\n              </figure>\n            </div>\n\n            <div class=\"image-holder col\">\n              <figure>\n                <img src=\"./assets/images/hero.jpg\" alt=\"image 1\" />\n                <figcaption>Image1</figcaption>\n                <span>\n                  <input type=\"file\" />\n                  <i class=\"las la-camera\"></i>\n                </span>\n              </figure>\n            </div>\n\n            <div class=\"image-holder col\">\n              <figure>\n                <img src=\"./assets/images/hero.jpg\" alt=\"image 1\" />\n                <figcaption>Image1</figcaption>\n                <span>\n                  <input type=\"file\" />\n                  <i class=\"las la-camera\"></i>\n                </span>\n              </figure>\n            </div>\n\n            <div class=\"form-field-wrapper col\">\n              <div class=\"form-field-input is-image-field\">\n                <span class=\"file-upload\">\n                  <input type=\"file\" />\n                  <label>Add More</label>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div> -->\n\n    <div class=\"buttons-wrapper d-flex\">\n      <a mat-button class=\"btn btn-theme-white\" (click)=\"onPrevious()\">Previous</a>\n      <button mat-button class=\"btn btn-theme-green\" (click)=\"onNext()\">Next</button>\n    </div>\n  </form>\n</app-wizard-section>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-property-housing\",\n  templateUrl: \"./property-housing.component.html\",\n  styleUrls: [\"./property-housing.component.scss\"],\n})\nexport class PropertyHousingComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-wizard-section>\n  <h4>Housing</h4>\n  <form class=\"detail-form\">\n    <!-- <div class=\"form-field-wrapper\">\n          <div class=\"form-field-input is-image-field\">\n            <label>Site Logo</label>\n            <span class=\"file-upload\">\n              <input type=\"file\" />\n              <label>Upload</label>\n            </span>\n          </div>\n        </div> -->\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label> Site Name </mat-label>\n        <input type=\"text\" matInput />\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label>House Number</mat-label>\n        <input type=\"text\" matInput />\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-field-wrapper\">\n      <div class=\"form-field-input\">\n        <input type=\"text\" />\n        <label>Email</label>\n        <span class=\"underline\"></span>\n      </div>\n    </div>\n\n    <div class=\"contact-details contact-details-site\">\n      <h5 class=\"form-section-title\">Contact <i class=\"las la-plus\"></i></h5>\n      <div class=\"d-flex has-2-cols\">\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label>Phone Number</mat-label>\n            <input type=\"number\" matInput />\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label>Mobile Number</mat-label>\n            <input type=\"number\" matInput />\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"address-details address-details-site\">\n      <h5 class=\"form-section-title\">Address</h5>\n      <div class=\"d-flex has-2-cols\">\n        <div class=\"form-field-wrapper col full-width\">\n          <mat-form-field>\n            <mat-label> Address Line 1 </mat-label>\n            <input type=\"text\" matInput />\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col full-width\">\n          <mat-form-field>\n            <mat-label> Address Line 2 </mat-label>\n            <input type=\"text\" matInput />\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Country </mat-label>\n            <mat-select>\n              <mat-option value=\"nepal\">Nepal</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Province </mat-label>\n            <mat-select>\n              <mat-option value=\"bagmati\">Bagmati</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> City </mat-label>\n            <input type=\"text\" matInput />\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Zip Code </mat-label>\n            <input type=\"number\" matInput />\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper col\">\n          <mat-form-field>\n            <mat-label> Ward No. </mat-label>\n            <input type=\"number\" matInput />\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class=\"form-field-wrapper\">\n          <div class=\"form-field-input\">\n            <iframe\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d9991.465460885658!2d85.32807257250968!3d27.70133511821701!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x39eb19afccf54599%3A0x93bc454f89b99ac6!2sAnnapurna%20Neuro%20Hospital!5e0!3m2!1sen!2snp!4v1601871580414!5m2!1sen!2snp\"\n              width=\"600\"\n              height=\"450\"\n              frameborder=\"0\"\n              style=\"border: 0\"\n              allowfullscreen=\"\"\n              aria-hidden=\"false\"\n              tabindex=\"0\"\n            ></iframe>\n            <label>Map Location</label>\n            <span class=\"underline\"></span>\n          </div>\n        </div> -->\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label>Facilities</mat-label>\n        <textarea matInput></textarea>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-field-wrapper\">\n      <mat-form-field>\n        <mat-label>No. of Houses</mat-label>\n        <input type=\"number\" matInput />\n      </mat-form-field>\n    </div>\n\n    <!-- <div class=\"site-images contains-mulitple-images\">\n          <h5 class=\"form-section-title\">Site images</h5>\n          <div class=\"d-flex has-2-cols\">\n            <div class=\"image-holder col\">\n              <figure>\n                <img src=\"./assets/images/hero.jpg\" alt=\"image 1\" />\n                <figcaption>Image1</figcaption>\n                <span>\n                  <input type=\"file\" />\n                  <i class=\"las la-camera\"></i>\n                </span>\n              </figure>\n            </div>\n\n            <div class=\"image-holder col\">\n              <figure>\n                <img src=\"./assets/images/hero.jpg\" alt=\"image 1\" />\n                <figcaption>Image1</figcaption>\n                <span>\n                  <input type=\"file\" />\n                  <i class=\"las la-camera\"></i>\n                </span>\n              </figure>\n            </div>\n\n            <div class=\"image-holder col\">\n              <figure>\n                <img src=\"./assets/images/hero.jpg\" alt=\"image 1\" />\n                <figcaption>Image1</figcaption>\n                <span>\n                  <input type=\"file\" />\n                  <i class=\"las la-camera\"></i>\n                </span>\n              </figure>\n            </div>\n\n            <div class=\"image-holder col\">\n              <figure>\n                <img src=\"./assets/images/hero.jpg\" alt=\"image 1\" />\n                <figcaption>Image1</figcaption>\n                <span>\n                  <input type=\"file\" />\n                  <i class=\"las la-camera\"></i>\n                </span>\n              </figure>\n            </div>\n\n            <div class=\"form-field-wrapper col\">\n              <div class=\"form-field-input is-image-field\">\n                <span class=\"file-upload\">\n                  <input type=\"file\" />\n                  <label>Add More</label>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div> -->\n\n    <div class=\"buttons-wrapper d-flex\">\n      <a href=\"owner-type.html\" mat-button class=\"btn btn-theme-white\">Previous</a>\n      <button mat-button class=\"btn btn-theme-green\">Next</button>\n    </div>\n  </form>\n</app-wizard-section>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { BaseComponent } from \"@core/components\";\nimport { AppRoutes } from \"@core/enums\";\nimport { Observable } from \"rxjs\";\nimport { IPropertyType } from \"../../interfaces/property-type\";\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"app-property-type\",\n  templateUrl: \"./property-type.component.html\",\n})\nexport class PropertyTypeComponent extends BaseComponent implements OnInit {\n  @Input() pathName: string;\n  @Input() propertyTypes$: Observable<IPropertyType[]>;\n  selectedPropertyTypeCode: string;\n  ownerId: string;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.ownerId = this.activatedRoute.snapshot.paramMap.get(\"ownerId\");\n    this.selectedPropertyTypeCode = \"APARTMENT\";\n  }\n\n  onNext() {\n    if (this.selectedPropertyTypeCode === \"APARTMENT\") {\n      this.redirectTo(`${AppRoutes.ON_BOARD_PROPERTY_DETAIL}/${this.ownerId}/apartment`);\n    }\n    if (this.selectedPropertyTypeCode === \"HOUSING\") {\n      this.redirectTo(`${AppRoutes.ON_BOARD_PROPERTY_DETAIL}/${this.ownerId}/housing`);\n    }\n  }\n\n  onSelectPropertyType(propertyTypeCode: string) {\n    this.selectedPropertyTypeCode = propertyTypeCode;\n  }\n}\n","<app-wizard-section [pathName]=\"pathName\">\n  <h4>Property Type</h4>\n  <mat-nav-list class=\"lists lists-site-type\">\n    <ng-container *ngFor=\"let propertyType of propertyTypes$ | async\">\n      <a\n        mat-list-item\n        class=\"d-flex lists-item selected\"\n        [class.selected]=\"propertyType.code === selectedPropertyTypeCode\"\n        (click)=\"onSelectPropertyType(propertyType.code)\"\n      >\n        <figure>\n          <i class=\"las la-city\" *ngIf=\"propertyType.code === 'APARTMENT'\"></i>\n          <i class=\"las la-building\" *ngIf=\"propertyType.code === 'HOUSING'\"></i>\n        </figure>\n        <div class=\"lists-item-content\">\n          <h5>{{ propertyType?.title }}</h5>\n          <span *ngIf=\"propertyType.code === 'APARTMENT'\">Residence flat</span>\n          <span *ngIf=\"propertyType.code === 'HOUSING'\">Individual house</span>\n        </div>\n      </a>\n    </ng-container>\n  </mat-nav-list>\n  <div class=\"buttons-wrapper d-flex\">\n    <button mat-button class=\"btn btn-theme-green\" (click)=\"onNext()\">Next</button>\n  </div>\n</app-wizard-section>\n","import { Component, OnInit } from \"@angular/core\";\nimport { BaseComponent } from \"./../../../../core/components/base.component\";\n\n@Component({\n  selector: \"app-greet-container\",\n  templateUrl: \"./greet-container.component.html\",\n  styleUrls: [\"./greet-container.component.scss\"],\n})\nexport class GreetContainerComponent extends BaseComponent implements OnInit {\n  pathName: string;\n\n  constructor() {\n    super();\n    this.router.events.subscribe((val) => {\n      this.pathName = location.pathname;\n    });\n  }\n\n  ngOnInit(): void {}\n}\n","<app-greet [pathName]=\"pathName\"></app-greet>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { AppRoutes } from \"@core/enums\";\nimport { Store } from \"@ngrx/store\";\nimport { onBoardOwner } from \"../../store/actions/on-board.actions\";\nimport { BaseComponent } from \"./../../../../core/components/base.component\";\n\n@Component({\n  selector: \"app-owner-detail-container\",\n  templateUrl: \"./owner-detail-container.component.html\",\n  styleUrls: [\"./owner-detail-container.component.scss\"],\n})\nexport class OwnerDetailContainerComponent extends BaseComponent implements OnInit {\n  ownerType: string;\n  pathName: string;\n  constructor(private activatedRoute: ActivatedRoute, private store: Store<any>) {\n    super();\n    this.router.events.subscribe((val) => {\n      this.pathName = location.pathname;\n    });\n  }\n\n  ngOnInit(): void {\n    this.ownerType = this.activatedRoute.snapshot.paramMap.get(\"ownerType\");\n  }\n\n  onPreviousClick() {\n    this.redirectTo(AppRoutes.ON_BOARD_OWNER_TYPE);\n  }\n\n  onNextClick(ownerDetailPayload: any) {\n    this.store.dispatch(onBoardOwner({ payload: ownerDetailPayload }));\n  }\n}\n","<app-owner-company\n  *ngIf=\"ownerType === 'company'\"\n  [pathName]=\"pathName\"\n  (previousClicked)=\"onPreviousClick()\"\n  (nextClicked)=\"onNextClick($event)\"\n></app-owner-company>\n\n<app-owner-individual\n  *ngIf=\"ownerType === 'individual'\"\n  [pathName]=\"pathName\"\n  (previousClicked)=\"onPreviousClick()\"\n  (nextClicked)=\"onNextClick($event)\"\n></app-owner-individual>\n","import { Component, OnInit } from \"@angular/core\";\nimport { BaseComponent } from \"@core/components\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { IOwnershipType } from \"./../../interfaces/ownership-type\";\nimport { loadOwnershipType } from \"./../../store/actions/on-board.actions\";\n\n@Component({\n  selector: \"app-owner-type-container\",\n  templateUrl: \"./owner-type-container.component.html\",\n})\nexport class OwnerTypeContainerComponent extends BaseComponent implements OnInit {\n  pathName: string;\n  ownershipTypes$: Observable<IOwnershipType[]>;\n  constructor(private store: Store<any>) {\n    super();\n    this.router.events.subscribe((val) => {\n      this.pathName = location.pathname;\n    });\n  }\n\n  ngOnInit(): void {\n    this.ownershipTypes$ = this.store.select((store) => store.onBoard.ownershipTypes);\n    this.store.dispatch(loadOwnershipType(null));\n  }\n}\n","<app-owner-type [pathName]=\"pathName\" [ownershipTypes$]=\"ownershipTypes$\"></app-owner-type>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-property-apartment-container\",\n  templateUrl: \"./property-apartment-container.component.html\",\n  styleUrls: [\"./property-apartment-container.component.scss\"],\n})\nexport class PropertyApartmentContainerComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-property-apartment></app-property-apartment>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { BaseComponent } from \"./../../../../core/components/base.component\";\nimport { onBoardProperty } from \"../../store/actions/on-board.actions\";\nimport { Store } from \"@ngrx/store\";\n\n@Component({\n  selector: \"app-property-detail-container\",\n  templateUrl: \"./property-detail-container.component.html\",\n})\nexport class PropertyDetailContainerComponent extends BaseComponent implements OnInit {\n  propertyType: string;\n  ownerId: string;\n  pathName: string;\n\n  constructor(private activatedRoute: ActivatedRoute, private store: Store<any>) {\n    super();\n    this.router.events.subscribe((val) => {\n      this.pathName = location.pathname;\n    });\n  }\n\n  ngOnInit(): void {\n    this.propertyType = this.activatedRoute.snapshot.paramMap.get(\"propertyType\");\n    this.ownerId = this.activatedRoute.snapshot.paramMap.get(\"ownerId\");\n  }\n\n  onNextClick(propertyDetailPayload: any) {\n    this.store.dispatch(onBoardProperty({ payload: propertyDetailPayload }));\n  }\n\n  onPreviousClick() {}\n}\n","<app-property-detail\n  [pathName]=\"pathName\"\n  (previousClicked)=\"onPreviousClick()\"\n  (nextClicked)=\"onNextClick($event)\"\n></app-property-detail>\n\n<!-- <app-property-housing-container></app-property-housing-container>\n\n<app-property-apartment-container></app-property-apartment-container> -->\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-property-housing-container\",\n  templateUrl: \"./property-housing-container.component.html\",\n  styleUrls: [\"./property-housing-container.component.scss\"],\n})\nexport class PropertyHousingContainerComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-property-housing></app-property-housing>\n","import { Component, OnInit } from \"@angular/core\";\nimport { BaseComponent } from \"@core/components\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { loadPropertyType } from \"../../store/actions/on-board.actions\";\nimport { IPropertyType } from \"./../../interfaces/property-type\";\n\n@Component({\n  selector: \"app-property-type-container\",\n  templateUrl: \"./property-type-container.component.html\",\n})\nexport class PropertyTypeContainerComponent extends BaseComponent implements OnInit {\n  ownerId: string;\n  pathName: string;\n  propertyTypes$: Observable<IPropertyType[]>;\n\n  constructor(private store: Store<any>) {\n    super();\n    this.router.events.subscribe((val) => {\n      this.pathName = location.pathname;\n    });\n  }\n\n  ngOnInit(): void {\n    this.propertyTypes$ = this.store.select((store) => store.onBoard.propertyTypes);\n    this.store.dispatch(loadPropertyType(null));\n  }\n}\n","<app-property-type [pathName]=\"pathName\" [propertyTypes$]=\"propertyTypes$\"></app-property-type>\n","import { NgModule } from \"@angular/core\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { SharedModule } from \"@shared/shared.module\";\nimport { OnBoardComponent } from \"./components/on-board/on-board.component\";\nimport { OwnerDetailComponent } from \"./components/owner-detail/owner-detail.component\";\nimport { OwnerTypeComponent } from \"./components/owner-type/owner-type.component\";\nimport { PropertyDetailComponent } from \"./components/property-detail/property-detail.component\";\nimport { PropertyTypeComponent } from \"./components/property-type/property-type.component\";\nimport { OwnerDetailContainerComponent } from \"./containers/owner-detail/owner-detail-container.component\";\nimport { OwnerTypeContainerComponent } from \"./containers/owner-type/owner-type-container.component\";\nimport { PropertyDetailContainerComponent } from \"./containers/property-detail/property-detail-container.component\";\nimport { PropertyTypeContainerComponent } from \"./containers/property-type/property-type-container.component\";\nimport { OnBoardRoutingModule } from \"./on-board.routing.module\";\nimport { OnBoardEffects } from \"./store/effects/on-board.effects\";\nimport { onBoardReducer } from \"./store/reducers/on-board.reducer\";\nimport { OwnerCompanyComponent } from \"./components/owner-company/owner-company.component\";\nimport { OwnerIndividualComponent } from \"./components/owner-individual/owner-individual.component\";\nimport { PropertyHousingContainerComponent } from \"./containers/property-housing/property-housing-container.component\";\nimport { PropertyHousingComponent } from \"./components/property-housing/property-housing.component\";\nimport { PropertyApartmentComponent } from \"./components/property-apartment/property-apartment.component\";\nimport { PropertyApartmentContainerComponent } from \"./containers/property-apartment/property-apartment-container.component\";\nimport { GreetContainerComponent } from \"./containers/greet/greet-container.component\";\nimport { GreetComponent } from \"./components/greet/greet.component\";\n\n@NgModule({\n  declarations: [\n    OnBoardComponent,\n    OwnerTypeContainerComponent,\n    OwnerTypeComponent,\n    OwnerDetailComponent,\n    OwnerDetailContainerComponent,\n    PropertyTypeContainerComponent,\n    PropertyTypeComponent,\n    PropertyDetailContainerComponent,\n    PropertyDetailComponent,\n    OwnerCompanyComponent,\n    OwnerIndividualComponent,\n    PropertyHousingContainerComponent,\n    PropertyHousingComponent,\n    PropertyApartmentComponent,\n    PropertyApartmentContainerComponent,\n    GreetContainerComponent,\n    GreetComponent,\n  ],\n  imports: [\n    SharedModule,\n    OnBoardRoutingModule,\n    StoreModule.forFeature(\"onBoard\", onBoardReducer),\n    EffectsModule.forFeature([OnBoardEffects]),\n  ],\n})\nexport class OnBoardModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { OnBoardComponent } from \"./components/on-board/on-board.component\";\nimport { OwnerDetailContainerComponent } from \"./containers/owner-detail/owner-detail-container.component\";\nimport { OwnerTypeContainerComponent } from \"./containers/owner-type/owner-type-container.component\";\nimport { PropertyDetailContainerComponent } from \"./containers/property-detail/property-detail-container.component\";\nimport { PropertyTypeContainerComponent } from \"./containers/property-type/property-type-container.component\";\nimport { GreetContainerComponent } from \"./containers/greet/greet-container.component\";\n\n/**\n * Owner type can be 'individual' or 'company'\n */\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: OnBoardComponent,\n    children: [\n      {\n        path: \"\",\n        redirectTo: \"owner-type\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"owner-type\",\n        component: OwnerTypeContainerComponent,\n      },\n      {\n        path: \"owner-detail/:ownerType\",\n        component: OwnerDetailContainerComponent,\n      },\n      {\n        path: \"property-type/:ownerId\",\n        component: PropertyTypeContainerComponent,\n      },\n      {\n        path: \"property-detail/:ownerId/:propertyType\",\n        component: PropertyDetailContainerComponent,\n      },\n      {\n        path: \"greet\",\n        component: GreetContainerComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OnBoardRoutingModule {}\n","import { Injectable, Injector } from \"@angular/core\";\nimport { ApiUrls } from \"@core/enums\";\nimport { Observable } from \"rxjs\";\nimport { BaseService } from \"./../../../core/services/base/base.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OnBoardService extends BaseService {\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getOwnershipTypes(): Observable<any> {\n    return this.http.get(ApiUrls.OWNERSHIP_TYPES);\n  }\n\n  onBoardOwner(ownerDetail: any): Observable<any> {\n    return this.http.post(ApiUrls.ONBOARD_OWNER, ownerDetail);\n  }\n\n  getPropertyTypes(): Observable<any> {\n    return this.http.get(ApiUrls.PROPERTY_TYPES);\n  }\n\n  onBoardProperty(propertyDetail: any): Observable<any> {\n    return this.http.post(ApiUrls.ONBOARD_PROPERTY, propertyDetail);\n  }\n}\n","import { createAction, props } from \"@ngrx/store\";\nexport const loadOwnershipType = createAction(\"[ON_BOARD] Load Ownership Type\", props<any>());\n\nexport const loadOwnershipTypeSuccess = createAction(\"[ON_BOARD] Load Ownership Type Success\", props<{ data: any }>());\n\nexport const loadOwnershipTypeFailure = createAction(\"[ON_BOARD] Load Ownership TypeFailure\", props<{ error: any }>());\n\nexport const onBoardOwner = createAction(\"[ON_BOARD] On Board Owner\", props<{ payload: any }>());\n\nexport const onBoardOwnerSuccess = createAction(\"[ON_BOARD] On Board Owner Success\", props<{ data: any }>());\n\nexport const onBoardOwnerFailure = createAction(\"[ON_BOARD] On Board Owner Failure\", props<{ error: any }>());\n\nexport const loadPropertyType = createAction(\"[ON_BOARD] Load Property Type\", props<any>());\n\nexport const loadPropertyTypeSuccess = createAction(\"[ON_BOARD] Load Property Type Success\", props<{ data: any }>());\n\nexport const loadPropertyTypeFailure = createAction(\"[ON_BOARD] Load Property TypeFailure\", props<{ error: any }>());\n\nexport const onBoardProperty = createAction(\"[ON_BOARD] On Board Property\", props<{ payload: any }>());\n\nexport const onBoardPropertySuccess = createAction(\"[ON_BOARD] On Board Property Success\", props<{ data: any }>());\n\nexport const onBoardPropertyFailure = createAction(\"[ON_BOARD] On Board Property Failure\", props<{ error: any }>());\n","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AppRoutes } from \"@core/enums\";\nimport { SnackBarService } from \"@core/services\";\nimport { Actions, createEffect, Effect, ofType } from \"@ngrx/effects\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { of } from \"rxjs\";\nimport { catchError, exhaustMap, map } from \"rxjs/operators\";\nimport * as OnBoardActions from \"../actions/on-board.actions\";\nimport { OnBoardService } from \"./../../services/on-board.service\";\n\n@Injectable()\nexport class OnBoardEffects {\n  constructor(\n    private actions$: Actions,\n    private router: Router,\n    private snackBar: SnackBarService,\n    private translate: TranslateService,\n    private onBoardService: OnBoardService\n  ) {}\n\n  getOwnershipTypes$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(OnBoardActions.loadOwnershipType),\n      exhaustMap((action) =>\n        this.onBoardService.getOwnershipTypes().pipe(\n          map((response: any) => OnBoardActions.loadOwnershipTypeSuccess(response)),\n          catchError((error) => of(OnBoardActions.loadOwnershipTypeFailure({ error })))\n        )\n      )\n    );\n  });\n\n  onBoardOwner$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(OnBoardActions.onBoardOwner),\n      exhaustMap((action) =>\n        this.onBoardService.onBoardOwner(action.payload).pipe(\n          map((response: any) => OnBoardActions.onBoardOwnerSuccess(response)),\n          catchError((error) => of(OnBoardActions.onBoardOwnerFailure({ error })))\n        )\n      )\n    );\n  });\n\n  @Effect({ dispatch: false })\n  onBoardOwnerSuccess = this.actions$.pipe(\n    ofType<any>(OnBoardActions.onBoardOwnerSuccess),\n    map((res: any) => {\n      this.router.navigateByUrl(`${AppRoutes.ON_BOARD_PROPERTY_TYPE}/${res.data.id}`);\n      // this.snackBar.open(this.translate.instant(\"logged_in_success\"));\n    })\n  );\n\n  // adminLogin$ = createEffect(() => {\n  //   return this.actions$.pipe(\n  //     ofType(AdminAuthActions.adminLogin),\n  //     exhaustMap((action) =>\n  //       this.adminAuthService.adminLogin(action.payload).pipe(\n  //         map((response: any) => AdminAuthActions.adminLoginSuccess(response)),\n  //         catchError((error) => of(AdminAuthActions.adminLoginFailure({ error })))\n  //       )\n  //     )\n  //   );\n  // });\n\n  // @Effect({ dispatch: false })\n  // adminLoginSuccess = this.actions$.pipe(\n  //   ofType<any>(AdminAuthActions.adminLoginSuccess),\n  //   map((res: any) => {\n  //     this.router.navigateByUrl(AppRoutes.ADMIN_DASHBOARD);\n  //     this.snackBar.open(this.translate.instant(\"logged_in_success\"));\n  //   })\n  // );\n\n  getPropertyTypes$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(OnBoardActions.loadPropertyType),\n      exhaustMap((action) =>\n        this.onBoardService.getPropertyTypes().pipe(\n          map((response: any) => OnBoardActions.loadPropertyTypeSuccess(response)),\n          catchError((error) => of(OnBoardActions.loadPropertyTypeFailure({ error })))\n        )\n      )\n    );\n  });\n\n  onBoardProperty$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(OnBoardActions.onBoardProperty),\n      exhaustMap((action) =>\n        this.onBoardService.onBoardProperty(action.payload).pipe(\n          map((response: any) => OnBoardActions.onBoardPropertySuccess(response)),\n          catchError((error) => of(OnBoardActions.onBoardPropertyFailure({ error })))\n        )\n      )\n    );\n  });\n\n  @Effect({ dispatch: false })\n  onBoardPropertySuccess = this.actions$.pipe(\n    ofType<any>(OnBoardActions.onBoardPropertySuccess),\n    map((res: any) => {\n      this.router.navigateByUrl(`${AppRoutes.ON_BOARD_GREET}`);\n      // this.snackBar.open(this.translate.instant(\"logged_in_success\"));\n    })\n  );\n}\n","import { createReducer, on } from \"@ngrx/store\";\nimport * as OnBoardActions from \"../actions/on-board.actions\";\n\nexport const onBoardFeatureKey = \"on-board\";\n\nexport interface IOnBoardState {\n  ownershipTypes: any;\n  propertyTypes: any;\n  loading: boolean;\n}\n\nexport const initialState: IOnBoardState = {\n  ownershipTypes: [],\n  propertyTypes: [],\n  loading: false,\n};\n\nexport const onBoardReducer = createReducer(\n  initialState,\n\n  on(OnBoardActions.loadOwnershipType, (state) => ({\n    ...state,\n    loading: true,\n  })),\n  on(OnBoardActions.loadOwnershipTypeSuccess, (state, action) => ({\n    ...state,\n    ownershipTypes: action.data,\n    loading: false,\n  })),\n  on(OnBoardActions.loadOwnershipTypeFailure, (state, action) => ({\n    ...state,\n    loading: false,\n  })),\n  on(OnBoardActions.onBoardOwner, (state) => ({\n    ...state,\n    loading: true,\n  })),\n  on(OnBoardActions.onBoardOwnerSuccess, (state, action) => ({\n    ...state,\n    loading: false,\n  })),\n  on(OnBoardActions.onBoardOwnerFailure, (state, action) => ({\n    ...state,\n    loading: false,\n  })),\n  on(OnBoardActions.loadPropertyType, (state) => ({\n    ...state,\n    loading: true,\n  })),\n  on(OnBoardActions.loadPropertyTypeSuccess, (state, action) => ({\n    ...state,\n    propertyTypes: action.data,\n    loading: false,\n  })),\n  on(OnBoardActions.loadPropertyTypeFailure, (state, action) => ({\n    ...state,\n    loading: false,\n  })),\n  on(OnBoardActions.onBoardProperty, (state) => ({\n    ...state,\n    loading: true,\n  })),\n  on(OnBoardActions.onBoardPropertySuccess, (state, action) => ({\n    ...state,\n    loading: false,\n  })),\n  on(OnBoardActions.onBoardPropertyFailure, (state, action) => ({\n    ...state,\n    loading: false,\n  }))\n);\n"]}