{"version":3,"sources":["./src/app/features/auth/auth-routing.module.ts","./src/app/features/auth/auth.component.ts","./src/app/features/auth/auth.component.html","./src/app/features/auth/auth.module.ts","./src/app/features/auth/components/forgot-password/forgot-password.component.ts","./src/app/features/auth/components/forgot-password/forgot-password.component.html","./src/app/features/auth/components/login-with-password/login-with-password.component.ts","./src/app/features/auth/components/login-with-password/login-with-password.component.html","./src/app/features/auth/components/login/index.ts","./src/app/features/auth/components/login/login.component.ts","./src/app/features/auth/components/login/login.component.html","./src/app/features/auth/components/register/register.component.ts","./src/app/features/auth/components/register/register.component.html","./src/app/features/auth/components/reset-password/reset-password.component.ts","./src/app/features/auth/components/reset-password/reset-password.component.html","./src/app/features/auth/components/sign-up-otp/sign-up-otp.component.ts","./src/app/features/auth/components/sign-up-otp/sign-up-otp.component.html","./src/app/features/auth/components/sign-up/sign-up.component.ts","./src/app/features/auth/components/sign-up/sign-up.component.html","./src/app/features/auth/containers/forgot-password/forgot-password-container.component.ts","./src/app/features/auth/containers/forgot-password/forgot-password-container.component.html","./src/app/features/auth/containers/login-with-password/login-with-password-container.component.ts","./src/app/features/auth/containers/login-with-password/login-with-password-container.component.html","./src/app/features/auth/containers/login/index.ts","./src/app/features/auth/containers/login/login-container.component.ts","./src/app/features/auth/containers/login/login-container.component.html","./src/app/features/auth/containers/register/index.ts","./src/app/features/auth/containers/register/register-container.component.ts","./src/app/features/auth/containers/register/register-container.component.html","./src/app/features/auth/containers/reset-password/reset-password-container.component.ts","./src/app/features/auth/containers/reset-password/reset-password-container.component.html","./src/app/features/auth/containers/sign-up-otp/sign-up-otp-container.component.ts","./src/app/features/auth/containers/sign-up-otp/sign-up-otp-container.component.html","./src/app/features/auth/containers/sign-up/sign-up-container.component.ts","./src/app/features/auth/containers/sign-up/sign-up-container.component.html","./src/app/features/auth/store/actions/auth.actions.ts","./src/app/features/auth/store/effects/auth.effects.ts","./src/app/features/auth/store/reducers/auth.reducer.ts"],"names":[],"mappings":"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","file":"features-auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AuthComponent } from \"./auth.component\";\nimport { ForgotPasswordContainerComponent } from \"./containers/forgot-password/forgot-password-container.component\";\nimport { LoginContainerComponent } from \"./containers/login\";\nimport { LoginWithPasswordContainerComponent } from \"./containers/login-with-password/login-with-password-container.component\";\nimport { RegisterContainerComponent } from \"./containers/register\";\nimport { ResetPasswordContainerComponent } from \"./containers/reset-password/reset-password-container.component\";\nimport { SignUpOtpContainerComponent } from \"./containers/sign-up-otp/sign-up-otp-container.component\";\nimport { SignUpContainerComponent } from \"./containers/sign-up/sign-up-container.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: AuthComponent,\n    children: [\n      {\n        path: \"\",\n        redirectTo: \"register\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"login\",\n        component: LoginContainerComponent,\n        data: {\n          title: \"browser_titles.login\",\n        },\n      },\n      {\n        path: \"register\",\n        component: RegisterContainerComponent,\n        data: {\n          title: \"browser_titles.register\",\n        },\n      },\n      {\n        path: \"password-login\",\n        component: LoginWithPasswordContainerComponent,\n        data: {\n          title: \"browser_titles.password_login\",\n        },\n      },\n      {\n        path: \"forgot-password\",\n        component: ForgotPasswordContainerComponent,\n        data: {\n          title: \"browser_titles.forgot_password\",\n        },\n      },\n      {\n        path: \"reset-password\",\n        component: ResetPasswordContainerComponent,\n        data: {\n          title: \"browser_titles.reset_password\",\n        },\n      },\n      {\n        path: \"sign-up\",\n        component: SignUpContainerComponent,\n        // data: {\n        //   title: \"browser_titles.reset_password\",\n        // },\n      },\n      {\n        path: \"sign-up-otp/:mobileNumber\",\n        component: SignUpOtpContainerComponent,\n        // data: {\n        //   title: \"browser_titles.reset_password\",\n        // },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-auth\",\n  templateUrl: \"./auth.component.html\",\n  styleUrls: [\"./auth.component.scss\"],\n})\nexport class AuthComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from \"@angular/core\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { SharedModule } from \"@shared/shared.module\";\nimport { AuthRoutingModule } from \"./auth-routing.module\";\nimport { AuthComponent } from \"./auth.component\";\nimport { ForgotPasswordComponent } from \"./components/forgot-password/forgot-password.component\";\nimport { LoginComponent } from \"./components/login\";\nimport { LoginWithPasswordComponent } from \"./components/login-with-password/login-with-password.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { ResetPasswordComponent } from \"./components/reset-password/reset-password.component\";\nimport { SignUpOtpComponent } from \"./components/sign-up-otp/sign-up-otp.component\";\nimport { SignUpComponent } from \"./components/sign-up/sign-up.component\";\nimport { ForgotPasswordContainerComponent } from \"./containers/forgot-password/forgot-password-container.component\";\nimport { LoginContainerComponent } from \"./containers/login\";\nimport { LoginWithPasswordContainerComponent } from \"./containers/login-with-password/login-with-password-container.component\";\nimport { RegisterContainerComponent } from \"./containers/register\";\nimport { ResetPasswordContainerComponent } from \"./containers/reset-password/reset-password-container.component\";\nimport { SignUpOtpContainerComponent } from \"./containers/sign-up-otp/sign-up-otp-container.component\";\nimport { SignUpContainerComponent } from \"./containers/sign-up/sign-up-container.component\";\nimport { AuthEffects } from \"./store/effects/auth.effects\";\nimport { authReducer } from \"./store/reducers/auth.reducer\";\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    LoginContainerComponent,\n    AuthComponent,\n    RegisterComponent,\n    RegisterContainerComponent,\n    LoginWithPasswordContainerComponent,\n    LoginWithPasswordComponent,\n    ForgotPasswordComponent,\n    ForgotPasswordContainerComponent,\n    ResetPasswordContainerComponent,\n    ResetPasswordComponent,\n    SignUpContainerComponent,\n    SignUpComponent,\n    SignUpOtpContainerComponent,\n    SignUpOtpComponent,\n  ],\n  imports: [\n    SharedModule,\n    AuthRoutingModule,\n    TranslateModule,\n    StoreModule.forFeature(\"auth\", authReducer),\n    EffectsModule.forFeature([AuthEffects]),\n  ],\n})\nexport class AuthModule {\n  constructor() {}\n}\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormGroup, Validators } from \"@angular/forms\";\nimport { BaseComponent } from \"@core/components\";\nimport { AppRoutes } from \"@core/enums\";\nimport { CustomValidators } from \"@core/utilities\";\n\n@Component({\n  selector: \"app-forgot-password\",\n  templateUrl: \"./forgot-password.component.html\",\n})\nexport class ForgotPasswordComponent extends BaseComponent implements OnInit {\n  @Output() requestOTP: EventEmitter<any> = new EventEmitter<any>();\n  forgotPasswordForm: FormGroup;\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.setForgotPasswordForm();\n  }\n\n  private setForgotPasswordForm() {\n    this.forgotPasswordForm = this.formBuilder.group({\n      mobileNumber: [\"\", [Validators.required, CustomValidators.mobileNumber()]],\n    });\n  }\n\n  onRequestOTP() {\n    if (this.forgotPasswordForm.valid) {\n      this.requestOTP.emit(this.forgotPasswordForm.value);\n    }\n  }\n\n  goToLoginScreen() {\n    this.redirectTo(AppRoutes.LOGIN_WITH_PASSWORD);\n  }\n}\n","<div class=\"auth-form-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <div class=\"container\" fxFlex=\"1 1 400px\" fxFlex.xs=\" 1 1 100%\">\n    <figure>\n      <mat-icon>settings_cell</mat-icon>\n    </figure>\n    <h4 class=\"text-center fs-24\">Forgot Password</h4>\n    <p class=\"fs-14 text-center help-text\">Enter your mobile number to generate OTP</p>\n    <mat-card>\n      <form class=\"auth-form form-fw\" (submit)=\"onRequestOTP()\" [formGroup]=\"forgotPasswordForm\">\n        <div class=\"form-field-wrapper\">\n          <mat-icon>phone_iphone</mat-icon>\n          <mat-form-field>\n            <mat-label>{{ \"mobile\" | translate }}</mat-label>\n            <input\n              matInput\n              type=\"number\"\n              [placeholder]=\"'placeholders.mobile' | translate\"\n              formControlName=\"mobileNumber\"\n            />\n            <mat-error>\n              <app-error-message [control]=\"forgotPasswordForm.get('mobileNumber')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <button mat-button color=\"primary\" class=\"btn-primary\">\n          {{ \"common.generate_otp\" | translate }}\n        </button>\n\n        <a class=\"fs-14 text-gray text-center text-link\" (click)=\"goToLoginScreen()\">\n          {{ \"back_to_login\" | translate }}\n        </a>\n        <!-- <a (click)=\"goToLoginWithPasswordPage()\" class=\"fs-14 text-primary text-center text-link\">\n          {{ \"login_with_password\" | translate }}\n        </a> -->\n      </form>\n    </mat-card>\n    <p class=\"text-center small-text fs-14\">\n      &copy;\n      <span class=\"text-uppercase\">\n        {{ \"login.building_management\" | translate }}\n      </span>\n    </p>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormGroup, Validators } from \"@angular/forms\";\nimport { BaseComponent } from \"@core/components\";\nimport { AppRoutes } from \"@core/enums\";\nimport { CustomValidators } from \"@core/utilities\";\nimport { ILoginWithPasswordPayload } from \"../../../../core/interfaces/login-with-password-payload\";\n\n@Component({\n  selector: \"app-login-with-password\",\n  templateUrl: \"./login-with-password.component.html\",\n})\nexport class LoginWithPasswordComponent extends BaseComponent implements OnInit {\n  @Output() loginWithPassword: EventEmitter<ILoginWithPasswordPayload> = new EventEmitter<ILoginWithPasswordPayload>();\n  // @Output() forgotPassword: EventEmitter<any> = new EventEmitter<any>();\n  loginWithPasswordForm: FormGroup;\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.setLoginWithPasswordForm();\n  }\n\n  private setLoginWithPasswordForm() {\n    this.loginWithPasswordForm = this.formBuilder.group({\n      mobileNumber: [\"\", [Validators.required, CustomValidators.mobileNumber()]],\n      password: [\"\", Validators.required],\n    });\n  }\n\n  onLoginWithPassword() {\n    if (this.loginWithPasswordForm.valid) {\n      this.loginWithPassword.emit(this.loginWithPasswordForm.value);\n    }\n  }\n\n  onForgotPassword() {\n    this.redirectTo(AppRoutes.FORGOT_PASSWORD);\n  }\n\n  goToRegister() {\n    this.redirectTo(AppRoutes.REGISTRATION_PAGE);\n  }\n}\n","<div class=\"auth-form-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <div class=\"container\" fxFlex=\"1 1 400px\" fxFlex.xs=\" 1 1 100%\">\n    <figure>\n      <mat-icon>settings_cell</mat-icon>\n    </figure>\n    <h4 class=\"text-center fs-24\">Login</h4>\n    <p class=\"fs-14 text-center help-text\">Login with password</p>\n    <mat-card>\n      <form class=\"auth-form form-fw\" (submit)=\"onLoginWithPassword()\" [formGroup]=\"loginWithPasswordForm\">\n        <div class=\"form-field-wrapper\">\n          <mat-icon>phone_iphone</mat-icon>\n          <mat-form-field>\n            <mat-label>{{ \"mobile\" | translate }}</mat-label>\n            <input\n              matInput\n              type=\"number\"\n              [placeholder]=\"'placeholders.mobile' | translate\"\n              formControlName=\"mobileNumber\"\n            />\n            <mat-error>\n              <app-error-message [control]=\"loginWithPasswordForm.get('mobileNumber')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper is-pwd-field\">\n          <mat-icon>vpn_key</mat-icon>\n          <mat-form-field>\n            <mat-label>{{ \"common.password\" | translate }}</mat-label>\n            <input\n              matInput\n              type=\"password\"\n              [placeholder]=\"'placeholders.password' | translate\"\n              formControlName=\"password\"\n            />\n            <mat-error>\n              <app-error-message [control]=\"loginWithPasswordForm.get('password')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <button mat-button color=\"primary\" class=\"btn-primary\">\n          {{ \"common.login\" | translate }}\n        </button>\n\n        <a (click)=\"onForgotPassword()\" class=\"fs-14 text-gray text-center text-link\">\n          {{ \"forgot_password\" | translate }}\n        </a>\n        <a (click)=\"goToRegister()\" class=\"fs-14 text-gray text-center text-link\">\n          {{ \"login_with_otp\" | translate }}\n        </a>\n      </form>\n    </mat-card>\n    <p class=\"text-center small-text fs-14\">\n      &copy;\n      <span class=\"text-uppercase\">\n        {{ \"login.building_management\" | translate }}\n      </span>\n    </p>\n  </div>\n</div>\n","export * from \"./login.component\";\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormGroup, Validators } from \"@angular/forms\";\nimport { BaseComponent } from \"@core/components\";\nimport { ILoginWithOTPPayload } from \"@core/interfaces/login-with-otp-payload\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n})\nexport class LoginComponent extends BaseComponent implements OnInit {\n  @Output() loginWithOTP: EventEmitter<ILoginWithOTPPayload> = new EventEmitter<ILoginWithOTPPayload>();\n\n  loginForm: FormGroup;\n  otpLogin: boolean;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.otpLogin = true;\n    this.setLoginWithOTPForm();\n  }\n\n  onSubmitLoginForm(): void {\n    if (this.loginForm.valid) {\n      this.loginWithOTP.emit(this.loginForm.value);\n    }\n  }\n\n  private setLoginWithOTPForm() {\n    this.loginForm = this.formBuilder.group({\n      otpLogin: [this.otpLogin],\n      otpToken: [\"\", [Validators.required, Validators.minLength(6), Validators.maxLength(6)]],\n    });\n  }\n}\n","<app-login-section>\n  <h4 class=\"text-center\">Enter your OTP to Login</h4>\n  <form class=\"login-form\" [formGroup]=\"loginForm\">\n    <div class=\"form-field-wrapper\">\n      <i class=\"las la-mobile\"></i>\n      <mat-form-field>\n        <mat-label> OTP</mat-label>\n        <input type=\"text\" matInput formControlName=\"otpToken\" appOnlyNumber />\n        <mat-error>\n          <app-error-message [control]=\"loginForm.get('otpToken')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"buttons-wrapper\">\n      <button mat-button class=\"btn-theme-green\" (click)=\"onSubmitLoginForm()\">Submit</button>\n    </div>\n  </form>\n</app-login-section>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormGroup, Validators } from \"@angular/forms\";\nimport { BaseComponent } from \"@core/components/base.component\";\nimport { IRegisterMobileNumberPayload } from \"@core/interfaces/register-mobile-number-payload\";\nimport { CustomValidators } from \"@core/utilities\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"./register.component.html\",\n})\nexport class RegisterComponent extends BaseComponent implements OnInit {\n  @Output() registerMobileNumber: EventEmitter<IRegisterMobileNumberPayload> = new EventEmitter<\n    IRegisterMobileNumberPayload\n  >();\n  @Input() error$: Observable<Error>;\n\n  registrationForm: FormGroup;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.buildRegistrationForm();\n    this.error$.subscribe((err) => {\n      if (err && this.registrationForm) {\n        this.errorMessageService.handleServerSideError(this.registrationForm, err);\n      }\n    });\n  }\n\n  private buildRegistrationForm(): void {\n    this.registrationForm = this.formBuilder.group({\n      mobileNumber: [\"\", [Validators.required, CustomValidators.inputLengthValidator(10)]],\n    });\n  }\n\n  onGenerateOTP() {\n    if (this.registrationForm.valid) {\n      this.registerMobileNumber.emit(this.registrationForm.value);\n    }\n  }\n}\n","<app-login-section>\n  <h4 class=\"text-center\">Enter your mobile number to receive OTP</h4>\n  <form class=\"login-form\" [formGroup]=\"registrationForm\">\n    <div class=\"form-field-wrapper\">\n      <i class=\"las la-mobile\"></i>\n      <mat-form-field>\n        <mat-label> Mobile Number </mat-label>\n        <input type=\"text\" matInput formControlName=\"mobileNumber\" appOnlyNumber />\n        <mat-error>\n          <app-error-message [control]=\"registrationForm.get('mobileNumber')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"buttons-wrapper\">\n      <button mat-button class=\"btn-theme-green\" (click)=\"onGenerateOTP()\">Generate OTP</button>\n    </div>\n  </form>\n</app-login-section>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormGroup, Validators } from \"@angular/forms\";\nimport { BaseComponent } from \"@core/components\";\nimport { AppRoutes } from \"@core/enums\";\nimport { CustomValidators } from \"@core/utilities\";\nimport { IResetPassword } from \"./../../../../core/interfaces/reset-password\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"./reset-password.component.html\",\n})\nexport class ResetPasswordComponent extends BaseComponent implements OnInit {\n  @Output() resetPassword: EventEmitter<IResetPassword> = new EventEmitter<IResetPassword>();\n  resetPasswordForm: FormGroup;\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.setResetPasswordForm();\n  }\n\n  setResetPasswordForm() {\n    this.resetPasswordForm = this.formBuilder.group(\n      {\n        otp: [\"\", [Validators.required, CustomValidators.inputLengthValidator(6)]],\n        newPassword: [\"\", [Validators.required, Validators.minLength(6), Validators.maxLength(15)]],\n        newPasswordConfirm: [\"\", [Validators.required]],\n      },\n      {\n        validator: CustomValidators.checkPassword(\"newPassword\", \"newPasswordConfirm\"),\n      }\n    );\n  }\n\n  onResetPassword() {\n    if (this.resetPasswordForm.valid) {\n      this.resetPassword.emit(this.resetPasswordForm.value);\n    }\n  }\n\n  goToLoginScreen() {\n    this.redirectTo(AppRoutes.LOGIN_WITH_PASSWORD);\n  }\n}\n","<div class=\"auth-form-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <div class=\"container\" fxFlex=\"1 1 400px\" fxFlex.xs=\" 1 1 100%\">\n    <figure>\n      <mat-icon>vpn_key</mat-icon>\n    </figure>\n    <h4 class=\"text-center fs-24\">Reset Password</h4>\n    <mat-card>\n      <form class=\"auth-form form-fw\" (submit)=\"onResetPassword()\" [formGroup]=\"resetPasswordForm\">\n        <div class=\"form-field-wrapper\">\n          <mat-icon>settings_cell</mat-icon>\n          <mat-form-field>\n            <mat-label>{{ \"common.otp\" | translate }}</mat-label>\n            <input matInput type=\"number\" [placeholder]=\"'placeholders.otp' | translate\" formControlName=\"otp\" />\n            <mat-error>\n              <app-error-message [control]=\"resetPasswordForm.get('otp')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper is-pwd-field\">\n          <mat-icon>vpn_key</mat-icon>\n          <mat-form-field>\n            <mat-label>{{ \"common.password\" | translate }}</mat-label>\n            <input\n              matInput\n              type=\"password\"\n              [placeholder]=\"'placeholders.password' | translate\"\n              formControlName=\"newPassword\"\n            />\n            <mat-error>\n              <app-error-message [control]=\"resetPasswordForm.get('newPassword')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-field-wrapper is-pwd-field\">\n          <mat-icon>vpn_key</mat-icon>\n          <mat-form-field>\n            <mat-label>{{ \"common.confirm_password\" | translate }}</mat-label>\n            <input\n              matInput\n              type=\"password\"\n              [placeholder]=\"'placeholders.password' | translate\"\n              formControlName=\"newPasswordConfirm\"\n            />\n            <mat-error>\n              <app-error-message [control]=\"resetPasswordForm.get('newPasswordConfirm')\"></app-error-message>\n            </mat-error>\n          </mat-form-field>\n\n          <mat-error *ngIf=\"resetPasswordForm.errors?.compare_password\" class=\"compare-error pwd-compare\">\n            {{ \"passwords_match\" | translate }}\n          </mat-error>\n        </div>\n\n        <button mat-button color=\"primary\" class=\"btn-primary\">\n          {{ \"reset_password\" | translate }}\n        </button>\n\n        <a class=\"fs-14 text-gray text-center text-link\" (click)=\"goToLoginScreen()\">\n          {{ \"back_to_login\" | translate }}\n        </a>\n      </form>\n    </mat-card>\n    <p class=\"text-center small-text fs-14\">\n      &copy;\n      <span class=\"text-uppercase\">\n        {{ \"login.building_management\" | translate }}\n      </span>\n    </p>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { BaseComponent } from \"@core/components\";\nimport { IVerifyOTPPayload } from \"./../../../../core/interfaces/verify-otp-payload\";\n\n@Component({\n  selector: \"app-sign-up-otp\",\n  templateUrl: \"./sign-up-otp.component.html\",\n  styleUrls: [\"./sign-up-otp.component.scss\"],\n})\nexport class SignUpOtpComponent extends BaseComponent implements OnInit {\n  @Output() verifyOTP: EventEmitter<IVerifyOTPPayload> = new EventEmitter<IVerifyOTPPayload>();\n  signUpOTPForm: FormGroup;\n  mobileNumber: string;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.mobileNumber = this.activatedRoute.snapshot.paramMap.get(\"mobileNumber\");\n    if (this.mobileNumber) {\n      this.setSignUpOTPForm();\n    }\n  }\n\n  private setSignUpOTPForm() {\n    this.signUpOTPForm = this.formBuilder.group({\n      mobileNumber: [this.mobileNumber],\n      otpToken: [\"\", [Validators.required]],\n    });\n  }\n\n  onSubmit() {\n    if (this.signUpOTPForm.valid) {\n      this.verifyOTP.emit(this.signUpOTPForm.value);\n    }\n  }\n}\n","<app-auth-section>\n  <h4 class=\"text-center\">Enter your OTP to Login</h4>\n  <form class=\"login-form\" [formGroup]=\"signUpOTPForm\">\n    <div class=\"form-field-wrapper\">\n      <i class=\"las la-mobile\"></i>\n      <mat-form-field>\n        <mat-label> OTP</mat-label>\n        <input type=\"text\" matInput formControlName=\"otpToken\" appOnlyNumber />\n        <mat-error>\n          <app-error-message [control]=\"signUpOTPForm.get('otpToken')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"buttons-wrapper\">\n      <button mat-button class=\"btn-theme-green\" (click)=\"onSubmit()\">Submit</button>\n    </div>\n  </form>\n</app-auth-section>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormGroup, Validators } from \"@angular/forms\";\nimport { BaseComponent } from \"@core/components\";\nimport { CustomValidators } from \"@core/utilities\";\nimport { IVerifyMobileNumberPayload } from \"./../../../../core/interfaces/verify-mobile-number-payload\";\n\n@Component({\n  selector: \"app-sign-up\",\n  templateUrl: \"./sign-up.component.html\",\n  styleUrls: [\"./sign-up.component.scss\"],\n})\nexport class SignUpComponent extends BaseComponent implements OnInit {\n  @Output() verifyMobileNumber: EventEmitter<IVerifyMobileNumberPayload> = new EventEmitter<\n    IVerifyMobileNumberPayload\n  >();\n  @Input() invitationCode: string;\n  signUpForm: FormGroup;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.setSignUpForm();\n  }\n\n  private setSignUpForm() {\n    this.signUpForm = this.formBuilder.group({\n      mobileNumber: [\"\", [Validators.required, CustomValidators.inputLengthValidator(10)]],\n      invitationCode: [this.invitationCode],\n    });\n  }\n\n  onGenerateOTP() {\n    if (this.signUpForm.valid) {\n      this.verifyMobileNumber.emit(this.signUpForm.value);\n    }\n  }\n}\n","<app-auth-section>\n  <h4 class=\"text-center\">Enter your mobile number to receive OTP</h4>\n  <form class=\"login-form\" [formGroup]=\"signUpForm\">\n    <div class=\"form-field-wrapper\">\n      <i class=\"las la-mobile\"></i>\n      <mat-form-field>\n        <mat-label> Mobile Number </mat-label>\n        <input type=\"text\" matInput formControlName=\"mobileNumber\" appOnlyNumber />\n        <mat-error>\n          <app-error-message [control]=\"signUpForm.get('mobileNumber')\"></app-error-message>\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"buttons-wrapper\">\n      <button mat-button class=\"btn-theme-green\" (click)=\"onGenerateOTP()\">Generate OTP</button>\n    </div>\n  </form>\n</app-auth-section>\n","import { Component, OnInit } from \"@angular/core\";\nimport { BaseComponent } from \"@core/components\";\nimport { AppRoutes } from \"@core/enums\";\nimport { AuthService } from \"@core/services\";\nimport { IMobilePayload } from \"./../../../../core/interfaces/mobile-payload\";\n\n@Component({\n  selector: \"app-forgot-password-container\",\n  templateUrl: \"./forgot-password-container.component.html\",\n})\nexport class ForgotPasswordContainerComponent extends BaseComponent implements OnInit {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  onRequestOTP(mobilePayload: IMobilePayload) {\n    this.authService.generateOTPForForgotPassword(mobilePayload).subscribe(\n      (res: any) => {\n        this.snackBar.open(this.getTranslatedString(\"snackbar_messages.otp_sent\"));\n        this.redirectTo(AppRoutes.RESET_PASSWORD);\n      },\n      (err) => {}\n    );\n  }\n}\n","<app-forgot-password (requestOTP)=\"onRequestOTP($event)\"></app-forgot-password>\n","import { Component, OnInit } from \"@angular/core\";\nimport { BaseComponent } from \"@core/components\";\nimport { AuthService } from \"@core/services\";\nimport { UsersService } from \"@shared/services\";\nimport { ILoginWithPasswordPayload } from \"../../../../core/interfaces/login-with-password-payload\";\n\n@Component({\n  selector: \"app-login-with-password-container\",\n  templateUrl: \"./login-with-password-container.component.html\",\n})\nexport class LoginWithPasswordContainerComponent extends BaseComponent implements OnInit {\n  constructor(private authService: AuthService, private userService: UsersService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  onLoginWithPassword(loginWithPasswordPayload: ILoginWithPasswordPayload) {\n    this.authService.loginWithPassword(loginWithPasswordPayload).subscribe(\n      (res: any) => {},\n      (err) => {}\n    );\n  }\n}\n","<app-login-with-password (loginWithPassword)=\"onLoginWithPassword($event)\"></app-login-with-password>\n","export * from \"./login-container.component\";\n","import { Component, OnInit } from \"@angular/core\";\nimport { BaseComponent } from \"@core/components/base.component\";\nimport { ILoginWithOTPPayload } from \"@core/interfaces/login-with-otp-payload\";\nimport { Store } from \"@ngrx/store\";\nimport { loginWithOTP } from \"../../store/actions/auth.actions\";\n\n@Component({\n  selector: \"app-login-container\",\n  templateUrl: \"./login-container.component.html\",\n})\nexport class LoginContainerComponent extends BaseComponent implements OnInit {\n  constructor(private store: Store<any>) {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  onLoginWithOTP(loginWithOtpPayload: ILoginWithOTPPayload) {\n    this.store.dispatch(loginWithOTP({ payload: loginWithOtpPayload }));\n  }\n}\n","<app-login (loginWithOTP)=\"onLoginWithOTP($event)\"></app-login>\n","export * from \"./register-container.component\";\n","import { Component, OnInit } from \"@angular/core\";\nimport { BaseComponent } from \"@core/components/base.component\";\nimport { AppRoutes } from \"@core/enums\";\nimport { IRegisterMobileNumberPayload } from \"@core/interfaces/register-mobile-number-payload\";\nimport { Actions, ofType } from \"@ngrx/effects\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { registerMobileNumber, registerMobileNumberSuccess } from \"../../store/actions/auth.actions\";\n\n@Component({\n  selector: \"app-register-container\",\n  templateUrl: \"./register-container.component.html\",\n})\nexport class RegisterContainerComponent extends BaseComponent implements OnInit {\n  destroyed$ = new Subject<boolean>();\n  registerPayload: IRegisterMobileNumberPayload;\n  error$: Observable<Error>;\n\n  constructor(private store: Store<any>, verifyMobileNumberSuccess$: Actions) {\n    super();\n    verifyMobileNumberSuccess$\n      .pipe(ofType(registerMobileNumberSuccess(null)), takeUntil(this.destroyed$))\n      .subscribe((d) => {\n        this.redirectTo(`${AppRoutes.LOGIN_PAGE}`);\n      });\n  }\n\n  ngOnInit(): void {\n    this.error$ = this.store.select((store) => store.auth.error);\n  }\n\n  onRegisterMobileNumber(registerMobileNumberPayload: IRegisterMobileNumberPayload) {\n    this.registerPayload = registerMobileNumberPayload;\n    this.store.dispatch(registerMobileNumber({ payload: registerMobileNumberPayload }));\n  }\n}\n","<app-register (registerMobileNumber)=\"onRegisterMobileNumber($event)\" [error$]=\"error$\"></app-register>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { BaseComponent } from \"@core/components\";\nimport { AppRoutes } from \"@core/enums\";\nimport { AuthService } from \"@core/services\";\nimport { IResetPassword } from \"./../../../../core/interfaces/reset-password\";\nimport { ResetPasswordComponent } from \"./../../components/reset-password/reset-password.component\";\n\n@Component({\n  selector: \"app-reset-password-container\",\n  templateUrl: \"./reset-password-container.component.html\",\n})\nexport class ResetPasswordContainerComponent extends BaseComponent implements OnInit {\n  @ViewChild(\"resetPasswordCmp\") resetPasswordCmp: ResetPasswordComponent;\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  onResetPassword(resetPasswordPayload: IResetPassword) {\n    this.authService.resetPassword(resetPasswordPayload).subscribe(\n      (res: any) => {\n        this.snackBar.open(this.getTranslatedString(\"change_password_success\"));\n        this.redirectTo(AppRoutes.LOGIN_WITH_PASSWORD);\n      },\n      (err) => {\n        if (err && this.resetPasswordCmp.resetPasswordForm) {\n          this.errorMessageService.handleServerSideError(this.resetPasswordCmp.resetPasswordForm, err);\n        }\n      }\n    );\n  }\n}\n","<app-reset-password #resetPasswordCmp (resetPassword)=\"onResetPassword($event)\"></app-reset-password>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { verifyOTP } from \"../../store/actions/auth.actions\";\nimport { IVerifyOTPPayload } from \"./../../../../core/interfaces/verify-otp-payload\";\n\n@Component({\n  selector: \"app-sign-up-otp-container\",\n  templateUrl: \"./sign-up-otp-container.component.html\",\n  styleUrls: [\"./sign-up-otp-container.component.scss\"],\n})\nexport class SignUpOtpContainerComponent implements OnInit {\n  constructor(private store: Store<any>) {}\n\n  ngOnInit(): void {}\n\n  onVerifyOTP(verifyOtpPayload: IVerifyOTPPayload) {\n    this.store.dispatch(verifyOTP({ payload: verifyOtpPayload }));\n  }\n}\n","<app-sign-up-otp (verifyOTP)=\"onVerifyOTP($event)\"></app-sign-up-otp>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { BaseComponent } from \"@core/components\";\nimport { AppRoutes } from \"@core/enums\";\nimport { IVerifyMobileNumberPayload } from \"@core/interfaces/verify-mobile-number-payload\";\nimport { AuthService } from \"@core/services\";\nimport { Actions, ofType } from \"@ngrx/effects\";\nimport { Store } from \"@ngrx/store\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { verifyMobileNumber, verifyMobileNumberSuccess } from \"../../store/actions/auth.actions\";\n\n@Component({\n  selector: \"app-sign-up-container\",\n  templateUrl: \"./sign-up-container.component.html\",\n  styleUrls: [\"./sign-up-container.component.scss\"],\n})\nexport class SignUpContainerComponent extends BaseComponent implements OnInit {\n  invitationId: string;\n  invitationCode: string;\n  destroyed$ = new Subject<boolean>();\n  mobileNumberPayload: IVerifyMobileNumberPayload;\n\n  constructor(\n    private store: Store<any>,\n    private activatedRoute: ActivatedRoute,\n    private authService: AuthService,\n    verifyMobileNumberSuccess$: Actions\n  ) {\n    super();\n    verifyMobileNumberSuccess$\n      .pipe(ofType(verifyMobileNumberSuccess(null)), takeUntil(this.destroyed$))\n      .subscribe((d) => {\n        this.redirectTo(`${AppRoutes.SIGN_UP_OTP}/${this.mobileNumberPayload.mobileNumber}`);\n      });\n  }\n\n  ngOnInit(): void {\n    this.getInvitationId();\n  }\n\n  private getInvitationId() {\n    this.activatedRoute.queryParams.subscribe((params) => {\n      this.invitationId = params.invitationId;\n      this.verifyInvitation();\n    });\n  }\n\n  verifyInvitation() {\n    this.authService.verifyInvitation(this.invitationId).subscribe(\n      (d: any) => {\n        this.invitationCode = d.data.invitationCode;\n      },\n      (err) => {\n        this.redirectTo(AppRoutes.INVALID_LINK);\n      }\n    );\n  }\n\n  onVerifyMobileNumber(verifyMobileNumberPayload: IVerifyMobileNumberPayload) {\n    this.mobileNumberPayload = verifyMobileNumberPayload;\n    this.store.dispatch(verifyMobileNumber({ payload: verifyMobileNumberPayload }));\n  }\n}\n","<app-sign-up\n  *ngIf=\"this.invitationCode\"\n  (verifyMobileNumber)=\"onVerifyMobileNumber($event)\"\n  [invitationCode]=\"invitationCode\"\n></app-sign-up>\n","import { createAction, props } from \"@ngrx/store\";\nimport { ILoginWithOTPPayload } from \"./../../../../core/interfaces/login-with-otp-payload\";\nimport { IRegisterMobileNumberPayload } from \"./../../../../core/interfaces/register-mobile-number-payload\";\nimport { IVerifyMobileNumberPayload } from \"./../../../../core/interfaces/verify-mobile-number-payload\";\nimport { IVerifyOTPPayload } from \"./../../../../core/interfaces/verify-otp-payload\";\n\nexport const verifyMobileNumber = createAction(\n  \"[AUTH] Verify Mobile Number\",\n  props<{ payload: IVerifyMobileNumberPayload }>()\n);\n\nexport const verifyMobileNumberSuccess = createAction(\"[AUTH] Verify Mobile Number Success\", props<any>());\n\nexport const verifyMobileNumberFailure = createAction(\"[AUTH] Verify Mobile Number Failure\", props<{ error: any }>());\n\nexport const verifyOTP = createAction(\"[AUTH] Verify OTP\", props<{ payload: IVerifyOTPPayload }>());\n\nexport const verifyOTPSuccess = createAction(\"[AUTH] Verify OTP Success\", props<{ data: any }>());\n\nexport const verifyOTPFailure = createAction(\"[AUTH] Verify OTP Failure\", props<{ error: any }>());\n\nexport const verifyInvitation = createAction(\"[AUTH] Verify Invitation\", props<{ payload: any }>());\n\nexport const verifyInvitationSuccess = createAction(\"[AUTH] Verify Invitation Success\", props<{ data: any }>());\n\nexport const verifyInvitationFailure = createAction(\"[AUTH] Verify Invitation Failure\", props<{ error: any }>());\n\nexport const registerMobileNumber = createAction(\n  \"[AUTH] Register Mobile Number\",\n  props<{ payload: IRegisterMobileNumberPayload }>()\n);\n\nexport const registerMobileNumberSuccess = createAction(\"[AUTH] Register Mobile Number Success\", props<any>());\n\nexport const registerMobileNumberFailure = createAction(\n  \"[AUTH] Register Mobile Number Failure\",\n  props<{ error: any }>()\n);\n\nexport const loginWithOTP = createAction(\"[AUTH] Login With OTP\", props<{ payload: ILoginWithOTPPayload }>());\n\nexport const loginWithOTPSuccess = createAction(\"[AUTH] Login With OTP Success\", props<{ data: any }>());\n\nexport const loginWithOTPFailure = createAction(\"[AUTH] Login With OTP Failure\", props<{ error: any }>());\n","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AppRoutes } from \"@core/enums\";\nimport { AuthService, SnackBarService } from \"@core/services\";\nimport { Actions, createEffect, Effect, ofType } from \"@ngrx/effects\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { of } from \"rxjs\";\nimport { catchError, exhaustMap, map } from \"rxjs/operators\";\nimport * as AuthActions from \"../actions/auth.actions\";\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private router: Router,\n    private snackBar: SnackBarService,\n    private translate: TranslateService\n  ) {}\n\n  verifyMobileNumber$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(AuthActions.verifyMobileNumber),\n      exhaustMap((action) =>\n        this.authService.verifyMobileNumber(action.payload).pipe(\n          map((response: any) => AuthActions.verifyMobileNumberSuccess(response)),\n          catchError((error) => of(AuthActions.verifyMobileNumberFailure({ error })))\n        )\n      )\n    );\n  });\n\n  @Effect({ dispatch: false })\n  verifyMobileNumberSuccess = this.actions$.pipe(\n    ofType<any>(AuthActions.verifyMobileNumberSuccess),\n    map((res: any) => {\n      this.snackBar.open(this.translate.instant(\"snackbar_messages.otp_sent\"));\n    })\n  );\n\n  verifyOTP$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(AuthActions.verifyOTP),\n      exhaustMap((action) =>\n        this.authService.verifyOtp(action.payload).pipe(\n          map((response: any) => AuthActions.verifyOTPSuccess(response)),\n          catchError((error) => of(AuthActions.verifyOTPFailure({ error })))\n        )\n      )\n    );\n  });\n\n  @Effect({ dispatch: false })\n  verifyOTPSuccess = this.actions$.pipe(\n    ofType<any>(AuthActions.verifyOTPSuccess),\n    map((res: any) => {\n      this.router.navigateByUrl(AppRoutes.ON_BOARD_OWNER_TYPE);\n      this.snackBar.open(this.translate.instant(\"verify_otp_success\"));\n    })\n  );\n\n  verifyInvitation$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(AuthActions.verifyInvitation),\n      exhaustMap((action) =>\n        this.authService.verifyInvitation(action.payload).pipe(\n          map((response: any) => AuthActions.verifyInvitationSuccess(response)),\n          catchError((error) => of(AuthActions.verifyInvitationFailure({ error })))\n        )\n      )\n    );\n  });\n\n  registerMobileNumber$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(AuthActions.registerMobileNumber),\n      exhaustMap((action) =>\n        this.authService.registerMobileNumber(action.payload).pipe(\n          map((response: any) => AuthActions.registerMobileNumberSuccess(response)),\n          catchError((error) => of(AuthActions.registerMobileNumberFailure({ error })))\n        )\n      )\n    );\n  });\n\n  @Effect({ dispatch: false })\n  registerMobileNumberSuccess = this.actions$.pipe(\n    ofType<any>(AuthActions.registerMobileNumberSuccess),\n    map((res: any) => {\n      this.snackBar.open(this.translate.instant(\"snackbar_messages.otp_sent\"));\n    })\n  );\n\n  loginWithOTP$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(AuthActions.loginWithOTP),\n      exhaustMap((action) =>\n        this.authService.loginWithOtp(action.payload).pipe(\n          map((response: any) => AuthActions.loginWithOTPSuccess(response)),\n          catchError((error) => of(AuthActions.loginWithOTPFailure({ error })))\n        )\n      )\n    );\n  });\n\n  @Effect({ dispatch: false })\n  loginWithOTPSuccess = this.actions$.pipe(\n    ofType<any>(AuthActions.loginWithOTPSuccess),\n    map((res: any) => {\n      this.router.navigateByUrl(AppRoutes.ON_BOARD_OWNER_TYPE);\n      this.snackBar.open(this.translate.instant(\"logged_in_success\"));\n    })\n  );\n}\n","import { createReducer, on } from \"@ngrx/store\";\nimport * as AuthActions from \"../actions/auth.actions\";\n\nexport const authFeatureKey = \"auth\";\n\nexport interface IAuthState {\n  loading: boolean;\n  message: string;\n  error: Error;\n}\n\nexport const initialState: IAuthState = {\n  loading: false,\n  message: \"\",\n  error: null,\n};\n\nexport const authReducer = createReducer(\n  initialState,\n\n  on(AuthActions.verifyMobileNumber, (state) => ({\n    ...state,\n    loading: true,\n  })),\n  on(AuthActions.verifyMobileNumberSuccess, (state, action) => ({\n    ...state,\n    loading: false,\n  })),\n  on(AuthActions.verifyMobileNumberFailure, (state, action) => ({\n    ...state,\n    loading: false,\n  })),\n  on(AuthActions.registerMobileNumberSuccess, (state) => ({\n    ...state,\n    loading: true,\n  })),\n  on(AuthActions.registerMobileNumberSuccess, (state, action) => ({\n    ...state,\n    loading: false,\n  })),\n  on(AuthActions.registerMobileNumberFailure, (state, action) => ({\n    ...state,\n    loading: false,\n    error: action.error.error,\n  }))\n);\n"],"sourceRoot":"webpack:///"}