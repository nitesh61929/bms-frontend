{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../modules/schematics/src/store/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Rule,\n  SchematicContext,\n  SchematicsException,\n  Tree,\n  apply,\n  applyTemplates,\n  branchAndMerge,\n  chain,\n  mergeWith,\n  template,\n  url,\n  move,\n  filter,\n  noop,\n} from '@angular-devkit/schematics';\nimport { Path, dirname } from '@angular-devkit/core';\nimport * as ts from 'typescript';\nimport {\n  stringUtils,\n  buildRelativePath,\n  insertImport,\n  Change,\n  InsertChange,\n  getProjectPath,\n  isLib,\n  findModuleFromOptions,\n  addImportToModule,\n  parseName,\n  visitNgModuleImports,\n} from '@ngrx/schematics/schematics-core';\nimport { Schema as StoreOptions } from './schema';\n\nfunction addImportToNgModule(options: StoreOptions): Rule {\n  return (host: Tree) => {\n    const modulePath = options.module;\n\n    if (!modulePath) {\n      return host;\n    }\n\n    if (!host.exists(modulePath)) {\n      throw new Error(`Specified module path ${modulePath} does not exist`);\n    }\n\n    const text = host.read(modulePath);\n    if (text === null) {\n      throw new SchematicsException(`File ${modulePath} does not exist.`);\n    }\n    const sourceText = text.toString('utf-8');\n\n    const source = ts.createSourceFile(\n      modulePath,\n      sourceText,\n      ts.ScriptTarget.Latest,\n      true\n    );\n\n    const statePath = `${options.path}/${options.statePath}`;\n    const relativePath = buildRelativePath(modulePath, statePath);\n\n    const environmentsPath = buildRelativePath(\n      statePath,\n      `${options.path}/environments/environment`\n    );\n\n    const rootStoreReducers = options.minimal ? `{}` : `reducers`;\n    const rootStoreConfig = options.minimal ? `` : `, { metaReducers }`;\n\n    const storeNgModuleImport = addImportToModule(\n      source,\n      modulePath,\n      options.root\n        ? `StoreModule.forRoot(${rootStoreReducers}${rootStoreConfig})`\n        : `StoreModule.forFeature(from${stringUtils.classify(\n            options.name\n          )}.${stringUtils.camelize(\n            options.name\n          )}FeatureKey, from${stringUtils.classify(\n            options.name\n          )}.reducers, { metaReducers: from${stringUtils.classify(\n            options.name\n          )}.metaReducers })`,\n      relativePath\n    ).shift();\n\n    let commonImports = [\n      insertImport(source, modulePath, 'StoreModule', '@ngrx/store'),\n      storeNgModuleImport,\n    ];\n\n    if (options.root && !options.minimal) {\n      commonImports = commonImports.concat([\n        insertImport(\n          source,\n          modulePath,\n          'reducers, metaReducers',\n          relativePath\n        ),\n      ]);\n    } else if (!options.root) {\n      commonImports = commonImports.concat([\n        insertImport(\n          source,\n          modulePath,\n          `* as from${stringUtils.classify(options.name)}`,\n          relativePath,\n          true\n        ),\n      ]);\n    }\n\n    let rootImports: (Change | undefined)[] = [];\n\n    if (options.root) {\n      let hasImports = false;\n      visitNgModuleImports(source, (_, importNodes) => {\n        hasImports = importNodes.length > 0;\n      });\n\n      // `addImportToModule` adds a comma to imports when there are already imports present\n      // because at this time the store import hasn't been committed yet, `addImportToModule` wont add a comma\n      // so we have to add it here for empty import arrays\n      let adjectiveComma = hasImports ? '' : ', ';\n\n      const storeDevtoolsNgModuleImport = addImportToModule(\n        source,\n        modulePath,\n        `${adjectiveComma}!environment.production ? StoreDevtoolsModule.instrument() : []`,\n        relativePath\n      ).shift();\n\n      rootImports = rootImports.concat([\n        insertImport(\n          source,\n          modulePath,\n          'StoreDevtoolsModule',\n          '@ngrx/store-devtools'\n        ),\n        insertImport(source, modulePath, 'environment', environmentsPath),\n        storeDevtoolsNgModuleImport,\n      ]);\n    }\n\n    const changes = [...commonImports, ...rootImports];\n    const recorder = host.beginUpdate(modulePath);\n    for (const change of changes) {\n      if (change instanceof InsertChange) {\n        recorder.insertLeft(change.pos, change.toAdd);\n      }\n    }\n    host.commitUpdate(recorder);\n\n    return host;\n  };\n}\n\nexport default function (options: StoreOptions): Rule {\n  return (host: Tree, context: SchematicContext) => {\n    if (!options.name && !options.root) {\n      throw new Error(`Please provide a name for the feature state`);\n    }\n\n    options.path = getProjectPath(host, options);\n\n    const parsedPath = parseName(options.path, options.name || '');\n    options.name = parsedPath.name;\n    options.path = parsedPath.path;\n\n    const statePath = `/${options.path}/${options.statePath}/index.ts`;\n    const srcPath = dirname(options.path as Path);\n    const environmentsPath = buildRelativePath(\n      statePath,\n      `${srcPath}/environments/environment`\n    );\n\n    if (options.module) {\n      options.module = findModuleFromOptions(host, options);\n    }\n\n    if (\n      options.root &&\n      options.stateInterface &&\n      options.stateInterface !== 'State'\n    ) {\n      options.stateInterface = stringUtils.classify(options.stateInterface);\n    }\n\n    const templateSource = apply(url('./files'), [\n      options.root && options.minimal ? filter((_) => false) : noop(),\n      applyTemplates({\n        ...stringUtils,\n        ...(options as object),\n        isLib: isLib(host, options),\n        environmentsPath,\n      }),\n      move(parsedPath.path),\n    ]);\n\n    return chain([\n      branchAndMerge(\n        chain([addImportToNgModule(options), mergeWith(templateSource)])\n      ),\n    ])(host, context);\n  };\n}\n"]}