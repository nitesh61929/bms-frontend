{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../modules/schematics/src/reducer/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,yDAeoC;AAEpC,oEAS0C;AAG1C,mBAAyB,OAAuB;IAC9C,OAAO,UAAC,IAAU,EAAE,OAAyB;QAC3C,IAAM,aAAa,GAAG,4BAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,OAAO,CAAC,IAAI,GAAG,gCAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAE7C,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,OAAO,CAAC,MAAM,GAAG,uCAAqB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SACvD;QAED,IAAM,UAAU,GAAG,2BAAS,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QACzD,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC/B,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAE/B,IAAM,eAAe,kCAChB,6BAAW,KACd,SAAS,EAAE,UAAC,CAAS;gBACnB,OAAA,6BAAW,CAAC,KAAK,CACf,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EACrB,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAChC;YAHD,CAGC,EACH,YAAY,EACV,8BAAY,CAAC,IAAI,EAAE,eAAe,CAAC;gBACnC,8BAAY,CAAC,IAAI,EAAK,aAAa,CAAC,IAAI,uBAAoB,CAAC,KAC3D,OAAkB,CACvB,CAAC;QAEF,IAAM,cAAc,GAAG,kBAAK,CAAC,gBAAG,CAAC,gBAAgB,CAAC,EAAE;YAClD,OAAO,CAAC,SAAS;gBACf,CAAC,CAAC,mBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAnC,CAAmC,CAAC;gBACvD,CAAC,CAAC,iBAAI,EAAE;YACV,2BAAc,CAAC,eAAe,CAAC;YAC/B,iBAAI,CAAC,UAAU,CAAC,IAAI,CAAC;SACtB,CAAC,CAAC;QAEH,IAAM,cAAc,GAAG,kBAAK,CAC1B,gBAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,CAAC,EACrD,CAAC,2BAAc,CAAC,eAAe,CAAC,EAAE,iBAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CACzD,CAAC;QAEF,OAAO,kBAAK,CAAC;YACX,2BAAc,CAAC,kBAAK,CAAC,CAAC,mCAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACnD,2BAAc,CACZ,kBAAK,CAAC;gBACJ,4CAA0B,CAAC,OAAO,CAAC;gBACnC,sBAAS,CAAC,cAAc,CAAC;gBACzB,sBAAS,CAAC,cAAc,CAAC;aAC1B,CAAC,CACH;SACF,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACpB,CAAC,CAAC;AACJ,CAAC;AAlDD,+BAkDC","sourcesContent":["import {\n  Rule,\n  SchematicContext,\n  SchematicsException,\n  Tree,\n  apply,\n  applyTemplates,\n  branchAndMerge,\n  chain,\n  filter,\n  mergeWith,\n  move,\n  noop,\n  template,\n  url,\n} from '@angular-devkit/schematics';\nimport * as ts from 'typescript';\nimport {\n  getProjectPath,\n  findModuleFromOptions,\n  stringUtils,\n  addReducerToState,\n  addReducerImportToNgModule,\n  parseName,\n  isIvyEnabled,\n  getProject,\n} from '@ngrx/schematics/schematics-core';\nimport { Schema as ReducerOptions } from './schema';\n\nexport default function (options: ReducerOptions): Rule {\n  return (host: Tree, context: SchematicContext) => {\n    const projectConfig = getProject(host, options);\n    options.path = getProjectPath(host, options);\n\n    if (options.module) {\n      options.module = findModuleFromOptions(host, options);\n    }\n\n    const parsedPath = parseName(options.path, options.name);\n    options.name = parsedPath.name;\n    options.path = parsedPath.path;\n\n    const templateOptions = {\n      ...stringUtils,\n      'if-flat': (s: string) =>\n        stringUtils.group(\n          options.flat ? '' : s,\n          options.group ? 'reducers' : ''\n        ),\n      isIvyEnabled:\n        isIvyEnabled(host, 'tsconfig.json') &&\n        isIvyEnabled(host, `${projectConfig.root}/tsconfig.app.json`),\n      ...(options as object),\n    };\n\n    const commonTemplate = apply(url('./common-files'), [\n      options.skipTests\n        ? filter((path) => !path.endsWith('.spec.ts.template'))\n        : noop(),\n      applyTemplates(templateOptions),\n      move(parsedPath.path),\n    ]);\n\n    const templateSource = apply(\n      url(options.creators ? './creator-files' : './files'),\n      [applyTemplates(templateOptions), move(parsedPath.path)]\n    );\n\n    return chain([\n      branchAndMerge(chain([addReducerToState(options)])),\n      branchAndMerge(\n        chain([\n          addReducerImportToNgModule(options),\n          mergeWith(commonTemplate),\n          mergeWith(templateSource),\n        ])\n      ),\n    ])(host, context);\n  };\n}\n"]}