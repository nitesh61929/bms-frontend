{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../modules/schematics/src/data/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,yDAaoC;AACpC,oEAI0C;AAG1C,mBAAyB,OAAoB;IAC3C,OAAO,UAAC,IAAU,EAAE,OAAyB;QAC3C,OAAO,CAAC,IAAI,GAAG,gCAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAE7C,IAAM,UAAU,GAAG,2BAAS,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QACzD,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC/B,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAE/B,IAAM,cAAc,GAAG,kBAAK,CAAC,gBAAG,CAAC,SAAS,CAAC,EAAE;YAC3C,OAAO,CAAC,SAAS;gBACf,CAAC,CAAC,mBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAnC,CAAmC,CAAC;gBACvD,CAAC,CAAC,iBAAI,EAAE;YACV,2BAAc,gCACT,6BAAW,KACd,SAAS,EAAE,UAAC,CAAS;oBACnB,OAAA,6BAAW,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;gBAArE,CAAqE,KACpE,OAAO,EACV;YACF,iBAAI,CAAC,UAAU,CAAC,IAAI,CAAC;SACtB,CAAC,CAAC;QAEH,OAAO,kBAAK,CAAC,CAAC,2BAAc,CAAC,kBAAK,CAAC,CAAC,sBAAS,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAChE,IAAI,EACJ,OAAO,CACR,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AA1BD,+BA0BC","sourcesContent":["import {\n  apply,\n  applyTemplates,\n  branchAndMerge,\n  chain,\n  filter,\n  mergeWith,\n  move,\n  noop,\n  Rule,\n  SchematicContext,\n  Tree,\n  url,\n} from '@angular-devkit/schematics';\nimport {\n  getProjectPath,\n  parseName,\n  stringUtils,\n} from '@ngrx/schematics/schematics-core';\nimport { Schema as DataOptions } from './schema';\n\nexport default function (options: DataOptions): Rule {\n  return (host: Tree, context: SchematicContext) => {\n    options.path = getProjectPath(host, options);\n\n    const parsedPath = parseName(options.path, options.name);\n    options.name = parsedPath.name;\n    options.path = parsedPath.path;\n\n    const templateSource = apply(url('./files'), [\n      options.skipTests\n        ? filter((path) => !path.endsWith('.spec.ts.template'))\n        : noop(),\n      applyTemplates({\n        ...stringUtils,\n        'if-flat': (s: string) =>\n          stringUtils.group(options.flat ? '' : s, options.group ? 'data' : ''),\n        ...options,\n      }),\n      move(parsedPath.path),\n    ]);\n\n    return chain([branchAndMerge(chain([mergeWith(templateSource)]))])(\n      host,\n      context\n    );\n  };\n}\n"]}