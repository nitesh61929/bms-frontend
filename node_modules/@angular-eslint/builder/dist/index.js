"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:true});const architect_1=require("@angular-devkit/architect");const path_1=__importDefault(require("path"));const eslint_utils_1=require("./utils/eslint-utils");async function run(options,context){var _a,_b,_c;const systemRoot=context.workspaceRoot;process.chdir(context.currentDirectory);const projectName=((_a=context.target)===null||_a===void 0?void 0:_a.project)||"<???>";const printInfo=options.format&&!options.silent;const reportOnlyErrors=options.quiet;context.reportStatus(`Linting ${JSON.stringify(projectName)}...`);if(printInfo){context.logger.info(`\nLinting ${JSON.stringify(projectName)}...`)}const projectESLint=await eslint_utils_1.loadESLint();const version=(_c=(_b=projectESLint.ESLint)===null||_b===void 0?void 0:_b.version)===null||_c===void 0?void 0:_c.split(".");if(!version||version.length<2||Number(version[0])<7||Number(version[0])===7&&Number(version[1])<6){throw new Error("ESLint must be version 7.6 or higher.")}const eslint=new projectESLint.ESLint({});const eslintConfigPath=options.eslintConfig?path_1.default.resolve(systemRoot,options.eslintConfig):undefined;const lintResults=await eslint_utils_1.lint(eslintConfigPath,options);if(lintResults.length===0){throw new Error("Invalid lint configuration. Nothing to lint.")}const formatter=await eslint.loadFormatter(options.format);let totalErrors=0;let totalWarnings=0;await projectESLint.ESLint.outputFixes(lintResults);for(const result of lintResults){totalErrors+=result.errorCount;totalWarnings+=result.warningCount;if(result.errorCount||result.warningCount&&!reportOnlyErrors){if(reportOnlyErrors){result.messages=result.messages.filter(({severity:severity})=>severity===2)}context.logger.info(formatter.format([result]))}}if(totalWarnings>0&&printInfo&&!reportOnlyErrors){context.logger.warn("Lint warnings found in the listed files.\n")}if(totalErrors>0&&printInfo){context.logger.error("Lint errors found in the listed files.\n")}if((totalWarnings===0||reportOnlyErrors)&&totalErrors===0&&printInfo){context.logger.info("All files pass linting.\n")}return{success:options.force||totalErrors===0}}exports.default=architect_1.createBuilder(run);