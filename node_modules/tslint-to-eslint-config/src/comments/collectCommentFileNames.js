"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.collectCommentFileNames = void 0;
const utils_1 = require("../utils");
const collectCommentFileNames = async (dependencies, filePathGlobs, typescriptConfiguration) => {
    if (filePathGlobs === true) {
        if (!typescriptConfiguration) {
            return new Error("--comments indicated to convert files listed in a tsconfig.json, but one was not found on disk or specified by with --typescript.");
        }
        return {
            exclude: typescriptConfiguration.exclude,
            include: utils_1.uniqueFromSources(typescriptConfiguration.files, typescriptConfiguration.include),
        };
    }
    if (typeof filePathGlobs === "string" && filePathGlobs.endsWith(".json")) {
        const findResult = await dependencies.findTypeScriptConfiguration(filePathGlobs);
        if (findResult instanceof Error) {
            return findResult;
        }
        return await exports.collectCommentFileNames(dependencies, true, findResult);
    }
    return {
        include: utils_1.uniqueFromSources(filePathGlobs),
    };
};
exports.collectCommentFileNames = collectCommentFileNames;
//# sourceMappingURL=collectCommentFileNames.js.map