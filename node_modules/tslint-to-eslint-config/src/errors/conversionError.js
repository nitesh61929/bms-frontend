"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversionError = void 0;
const os_1 = require("os");
class ConversionError extends Error {
    constructor(summary) {
        super(summary);
        this.summary = summary;
    }
    static forMerger(eslintRule) {
        return new ConversionError([
            `Error: multiple output ${eslintRule} ESLint rule options were generated, but tslint-to-eslint-config doesn't have "merger" logic to deal with this.`,
            `Please file an issue at https://github.com/typescript-eslint/tslint-to-eslint-config/issues/new?template=missing_merger.md. Thanks!`,
        ].join(os_1.EOL));
    }
    static forRuleError(error, tslintRule) {
        return new ConversionError(`${tslintRule.ruleName} threw an error during conversion: ${error.stack}${os_1.EOL}`);
    }
    getSummary() {
        return this.summary;
    }
}
exports.ConversionError = ConversionError;
//# sourceMappingURL=conversionError.js.map