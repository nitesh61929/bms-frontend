export declare type WithDependencies<Args extends any[] = any[], Return = any> = (dependencies: any, ...args: Args) => Return;
export declare type SansDependencies<Method> = Method extends WithDependencies<infer Args, infer Return> ? (...args: Args) => Return : never;
export declare const bind: <Dependencies = any, Args extends any[] = any[], Return = any>(method: WithDependencies<Args, Return>, dependencies: Dependencies) => (...args: Args) => Return;
