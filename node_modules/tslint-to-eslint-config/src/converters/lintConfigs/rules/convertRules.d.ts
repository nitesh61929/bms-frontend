import { ErrorSummary } from "../../../errors/errorSummary";
import { TSLintConfigurationRules } from "../../../input/findTSLintConfiguration";
import { RuleMerger } from "./ruleMerger";
import { RuleConverter } from "./ruleConverter";
import { TSLintRuleOptions, ESLintRuleOptions } from "./types";
export declare type ConvertRulesDependencies = {
    ruleConverters: Map<string, RuleConverter>;
    ruleMergers: Map<string, RuleMerger>;
};
export declare type RuleConversionResults = {
    converted: Map<string, ESLintRuleOptions>;
    failed: ErrorSummary[];
    missing: TSLintRuleOptions[];
    plugins: Set<string>;
    ruleEquivalents: Map<string, string[]>;
};
/**
 * Converts raw TSLint rules to their ESLint equivalents.
 * @see `/docs/Architecture/Linting.md` for documentation.
 */
export declare const convertRules: (dependencies: ConvertRulesDependencies, rawTslintRules: TSLintConfigurationRules | undefined, ruleEquivalents: Map<string, string[]>) => RuleConversionResults;
