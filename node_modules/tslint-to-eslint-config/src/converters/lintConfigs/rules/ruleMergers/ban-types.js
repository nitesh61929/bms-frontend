"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mergeBanTypes = void 0;
const mergeBanTypes = (existingOptions, newOptions) => {
    if (existingOptions === undefined && newOptions === undefined) {
        return [];
    }
    // This is mentioned in Architecture/Linters.md as an ESLint rule with a merger
    return [
        {
            types: {
                ...existingOptions === null || existingOptions === void 0 ? void 0 : existingOptions[0].types,
                ...newOptions === null || newOptions === void 0 ? void 0 : newOptions[0].types,
            },
        },
    ];
};
exports.mergeBanTypes = mergeBanTypes;
//# sourceMappingURL=ban-types.js.map