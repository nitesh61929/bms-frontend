"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.reportCommentResults = void 0;
const chalk_1 = __importDefault(require("chalk"));
const os_1 = require("os");
const reportCommentResults = (dependencies, uniqueFilePathGlobs) => {
    if (uniqueFilePathGlobs === undefined) {
        dependencies.logger.stdout.write(chalk_1.default.magentaBright(`${os_1.EOL}♻ Consider using --comments to replace TSLint comment directives in your source files. ♻${os_1.EOL}`));
        return;
    }
    dependencies.logger.stdout.write(chalk_1.default.magentaBright(`${os_1.EOL}♻ ${uniqueFilePathGlobs.length}`));
    dependencies.logger.stdout.write(chalk_1.default.magenta(` file${uniqueFilePathGlobs.length === 1 ? "" : "s"}`));
    dependencies.logger.stdout.write(chalk_1.default.magenta(` of TSLint comment directives converted to ESLint.`));
    dependencies.logger.stdout.write(chalk_1.default.magentaBright(` ♻${os_1.EOL}`));
};
exports.reportCommentResults = reportCommentResults;
//# sourceMappingURL=reportCommentResults.js.map