/// <reference types="node" />
import { CollectCommentFileNamesDependencies } from "../comments/collectCommentFileNames";
import { ReportCommentResultsDependencies } from "../converters/comments/reporting/reportCommentResults";
import { ConvertEditorConfigDependencies } from "../converters/editorConfigs/convertEditorConfig";
import { ConvertLintConfigDependencies } from "../converters/lintConfigs/convertLintConfig";
import { ReportConversionResultsDependencies } from "../converters/lintConfigs/reporting/reportConfigConversionResults";
import { ConvertCommentsDependencies } from "../converters/comments/convertComments";
import { ConvertFileCommentsDependencies } from "../converters/comments/convertFileComments";
import { ConvertRulesDependencies } from "../converters/lintConfigs/rules/convertRules";
import { RetrieveExtendsValuesDependencies } from "../converters/lintConfigs/summarization/retrieveExtendsValues";
import { SummarizePackageRulesDependencies } from "../converters/lintConfigs/summarization/summarizePackageRules";
import { ChoosePackageManagerDependencies } from "../converters/lintConfigs/reporting/packages/choosePackageManager";
import { LogMissingPackagesDependencies } from "../converters/lintConfigs/reporting/packages/logMissingPackages";
import { RunCliDependencies } from "../cli/runCli";
import { ExtractGlobPathsDependencies } from "../converters/comments/extractGlobPaths";
import { FindOriginalConfigurationsDependencies } from "../input/findOriginalConfigurations";
import { ImporterDependencies } from "../input/importer";
import { CreateESLintConfigurationDependencies } from "../converters/lintConfigs/createESLintConfiguration";
import { ConvertEditorConfigsDependencies } from "../converters/editorConfigs/convertEditorConfigs";
import { EditorConfigDescriptor } from "../converters/editorConfigs/types";
export declare const convertFileCommentsDependencies: ConvertFileCommentsDependencies;
export declare const reportCommentResultsDependencies: ReportCommentResultsDependencies;
export declare const convertRulesDependencies: ConvertRulesDependencies;
export declare const nativeImporterDependencies: ImporterDependencies;
export declare const boundImporter: (moduleName: string) => Promise<any>;
export declare const findConfigurationDependencies: {
    exec: import("../adapters/exec").Exec;
    importer: (moduleName: string) => Promise<any>;
};
export declare const findOriginalConfigurationsDependencies: FindOriginalConfigurationsDependencies;
export declare const collectCommentFileNamesDependencies: CollectCommentFileNamesDependencies;
export declare const extractGlobPathsDependencies: ExtractGlobPathsDependencies;
export declare const convertCommentsDependencies: ConvertCommentsDependencies;
export declare const retrieveExtendsValuesDependencies: RetrieveExtendsValuesDependencies;
export declare const summarizePackageRulesDependencies: SummarizePackageRulesDependencies;
export declare const choosePackageManagerDependencies: ChoosePackageManagerDependencies;
export declare const createESLintConfigurationDependencies: CreateESLintConfigurationDependencies;
export declare const logMissingPackagesDependencies: LogMissingPackagesDependencies;
export declare const reportConversionResultsDependencies: ReportConversionResultsDependencies;
export declare const reportEditorSettingConversionResultsDependencies: {
    logger: {
        debugFileName: string;
        readonly info: import("fs").WriteStream;
        stderr: NodeJS.WriteStream;
        stdout: NodeJS.WriteStream;
    };
};
export declare const writeConversionResultsDependencies: {
    fileSystem: import("../adapters/fileSystem").FileSystem;
};
export declare const convertEditorConfigDependencies: ConvertEditorConfigDependencies;
export declare const editorConfigDescriptors: EditorConfigDescriptor[];
export declare const reportEditorConfigConversionResultsDependencies: {
    logger: {
        debugFileName: string;
        readonly info: import("fs").WriteStream;
        stderr: NodeJS.WriteStream;
        stdout: NodeJS.WriteStream;
    };
};
export declare const convertEditorConfigsDependencies: ConvertEditorConfigsDependencies;
export declare const convertLintConfigDependencies: ConvertLintConfigDependencies;
export declare const runCliDependencies: RunCliDependencies;
