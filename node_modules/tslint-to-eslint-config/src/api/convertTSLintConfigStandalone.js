"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertTSLintConfigStandalone = void 0;
const formatOutput_1 = require("../converters/lintConfigs/formatting/formatOutput");
const joinConfigConversionResults_1 = require("../converters/lintConfigs/joinConfigConversionResults");
const types_1 = require("../types");
const createESLintConfigurationStandalone_1 = require("./createESLintConfigurationStandalone");
const findOriginalConfigurationsStandalone_1 = require("./findOriginalConfigurationsStandalone");
/**
 * Finds relevant configurations on disk and outputs the generated ESLint configuration.
 *
 * @param settings - Settings to find and convert configurations to an ESLint configuration.
 */
const convertTSLintConfigStandalone = async (rawSettings = {}) => {
    const settings = {
        ...rawSettings,
        config: ".eslintrc.js",
    };
    const originalConfigurations = await findOriginalConfigurationsStandalone_1.findOriginalConfigurationsStandalone(settings);
    if (originalConfigurations.status !== types_1.ResultStatus.Succeeded) {
        return originalConfigurations;
    }
    const summarizedConfiguration = await createESLintConfigurationStandalone_1.createESLintConfigurationStandalone(originalConfigurations.data, settings.prettier);
    const output = joinConfigConversionResults_1.joinConfigConversionResults(summarizedConfiguration, originalConfigurations.data);
    return {
        data: {
            formatted: formatOutput_1.formatOutput(settings.config, output),
            raw: output,
        },
        status: types_1.ResultStatus.Succeeded,
    };
};
exports.convertTSLintConfigStandalone = convertTSLintConfigStandalone;
//# sourceMappingURL=convertTSLintConfigStandalone.js.map