import { Exec } from "../adapters/exec";
import { SansDependencies } from "../binding";
import { RawESLintRuleSeverity } from "../converters/lintConfigs/rules/types";
import { ConfigurationLocations } from "../types";
import { OriginalConfigurations } from "./findOriginalConfigurations";
import { importer } from "./importer";
export declare type ESLintConfiguration = {
    env?: Record<string, boolean | undefined>;
    extends?: string | string[];
    globals?: Record<string, boolean | undefined>;
    rules?: ESLintConfigurationRules;
};
export declare type ESLintConfigurationRules = Record<string, ESLintConfigurationRuleValue>;
export declare type ESLintConfigurationRuleValue = RawESLintRuleSeverity | [RawESLintRuleSeverity, ...any[]];
export declare type FindESLintConfigurationDependencies = {
    exec: Exec;
    importer: SansDependencies<typeof importer>;
};
export declare const findESLintConfiguration: (dependencies: FindESLintConfigurationDependencies, config: Pick<ConfigurationLocations, "config" | "eslint">) => Promise<OriginalConfigurations<ESLintConfiguration> | Error>;
