import { ElementRef, EventEmitter } from '@angular/core';
import { EventService } from './event.service';
import { CrystalLightbox } from './lightbox.service';
import { Properties, ImageExtended, Image } from './interfaces';
export declare class LightboxDirective {
    private lightbox;
    private eventService;
    private elementRef;
    globalEventsSubscription: any;
    image: ImageExtended;
    fullImage: Image;
    properties: Properties;
    loop: boolean;
    backgroundOpacity: number;
    counter: boolean;
    imageMaxHeight: string;
    imageMaxWidth: string;
    animationDuration: number;
    animationMode: 'default' | 'zoom' | 'zoom-blur' | 'zoom-preloader' | 'opacity' | 'none';
    animationTimingFunction: string;
    closeButtonText: string;
    counterSeparator: string;
    disable: boolean;
    simpleMode: boolean;
    backgroundColor: 'black' | 'white';
    hideThumbnail: boolean;
    gestureEnable: boolean;
    events: EventEmitter<any>;
    hostLightboxGroup: boolean;
    get hostSimpleMode(): boolean;
    get isGroupImage(): boolean;
    constructor(lightbox: CrystalLightbox, eventService: EventService, elementRef: ElementRef);
    onClick(event: any): void;
    ngOnChanges(changes: any): void;
    handleGlobalEvents(event: any): void;
    getImage(): ImageExtended;
    getProperties(changes: any): {};
}
