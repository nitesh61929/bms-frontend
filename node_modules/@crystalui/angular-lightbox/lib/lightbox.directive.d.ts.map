{"version":3,"file":"lightbox.directive.d.ts","sources":["lightbox.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter } from '@angular/core';\r\nimport { EventService } from './event.service';\r\nimport { CrystalLightbox } from './lightbox.service';\r\nimport { Properties, ImageExtended, Image } from './interfaces';\r\nexport declare class LightboxDirective {\r\n    private lightbox;\r\n    private eventService;\r\n    private elementRef;\r\n    globalEventsSubscription: any;\r\n    image: ImageExtended;\r\n    fullImage: Image;\r\n    properties: Properties;\r\n    loop: boolean;\r\n    backgroundOpacity: number;\r\n    counter: boolean;\r\n    imageMaxHeight: string;\r\n    imageMaxWidth: string;\r\n    animationDuration: number;\r\n    animationMode: 'default' | 'zoom' | 'zoom-blur' | 'zoom-preloader' | 'opacity' | 'none';\r\n    animationTimingFunction: string;\r\n    closeButtonText: string;\r\n    counterSeparator: string;\r\n    disable: boolean;\r\n    simpleMode: boolean;\r\n    backgroundColor: 'black' | 'white';\r\n    hideThumbnail: boolean;\r\n    gestureEnable: boolean;\r\n    events: EventEmitter<any>;\r\n    hostLightboxGroup: boolean;\r\n    get hostSimpleMode(): boolean;\r\n    get isGroupImage(): boolean;\r\n    constructor(lightbox: CrystalLightbox, eventService: EventService, elementRef: ElementRef);\r\n    onClick(event: any): void;\r\n    ngOnChanges(changes: any): void;\r\n    handleGlobalEvents(event: any): void;\r\n    getImage(): ImageExtended;\r\n    getProperties(changes: any): {};\r\n}\r\n"]}