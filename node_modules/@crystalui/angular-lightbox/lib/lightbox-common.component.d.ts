import { ElementRef } from '@angular/core';
import { LightboxData, Properties } from './interfaces';
import { ShowState, ClosingState } from './types';
import { EventService } from './event.service';
import * as ɵngcc0 from '@angular/core';
export declare class LightboxCommonComponent {
    eventService: EventService;
    currentImageIndex: number;
    indexCurrentSlide: number;
    showState: ShowState;
    closingState: ClosingState;
    containerStyles: any;
    currImageLoadingState: 'not-loaded' | 'loading' | 'uploaded' | 'error';
    isMobile: boolean;
    lightboxData: LightboxData;
    hostStyleBackgroundColor: string;
    hostStyleTransition: string;
    _imageFirst: ElementRef;
    _imageSecond: ElementRef;
    _imageLast: ElementRef;
    _lightboxImage: ElementRef;
    get lightboxImage(): ElementRef<any>;
    get lightboxImageElement(): any;
    get lightboxImageNaturalHeight(): any;
    get lightboxImageNaturalWidth(): any;
    get index(): number;
    get properties(): Properties;
    get images(): any;
    get thumbnailImage(): any;
    get thumbnailImagePosition(): any;
    get virtualImageDimension(): {
        width: number;
        height: any;
    };
    get containerInitialPosition(): string;
    get containerFullscreenPosition(): string;
    get containerScale(): number;
    get imageAspectRatio(): number;
    get isImageLargerWindow(): boolean;
    get isFirstImage(): boolean;
    get isLastImage(): boolean;
    get latestImageIndex(): number;
    get backgroundColor(): string;
    get animationDuration(): number;
    get animationMode(): "none" | "default" | "zoom" | "zoom-blur" | "zoom-preloader" | "opacity";
    get animationTimingFunction(): string;
    get closeButtonText(): string;
    get counterSeparator(): string;
    get counter(): string;
    constructor(eventService: EventService);
    emitState(type: any, state: any): void;
    setShowState(state: ShowState): void;
    setClosingState(state: ClosingState): void;
    setAnimationDuration(): void;
    setBackgroundColor(): void;
    getContainerHeight(): string;
    showThumbnailImage(): void;
    hideThumbnailImage(): void;
    updateThumbnailPosition(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LightboxCommonComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<LightboxCommonComponent, "lightbox-common", never, { "lightboxData": "lightboxData"; }, {}, never, never>;
}

//# sourceMappingURL=lightbox-common.component.d.ts.map