{"version":3,"file":"lightbox-common.component.d.ts","sources":["lightbox-common.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef } from '@angular/core';\r\nimport { LightboxData, Properties } from './interfaces';\r\nimport { ShowState, ClosingState } from './types';\r\nimport { EventService } from './event.service';\r\nexport declare class LightboxCommonComponent {\r\n    eventService: EventService;\r\n    currentImageIndex: number;\r\n    indexCurrentSlide: number;\r\n    showState: ShowState;\r\n    closingState: ClosingState;\r\n    containerStyles: any;\r\n    currImageLoadingState: 'not-loaded' | 'loading' | 'uploaded' | 'error';\r\n    isMobile: boolean;\r\n    lightboxData: LightboxData;\r\n    hostStyleBackgroundColor: string;\r\n    hostStyleTransition: string;\r\n    _imageFirst: ElementRef;\r\n    _imageSecond: ElementRef;\r\n    _imageLast: ElementRef;\r\n    _lightboxImage: ElementRef;\r\n    get lightboxImage(): ElementRef<any>;\r\n    get lightboxImageElement(): any;\r\n    get lightboxImageNaturalHeight(): any;\r\n    get lightboxImageNaturalWidth(): any;\r\n    get index(): number;\r\n    get properties(): Properties;\r\n    get images(): any;\r\n    get thumbnailImage(): any;\r\n    get thumbnailImagePosition(): any;\r\n    get virtualImageDimension(): {\r\n        width: number;\r\n        height: any;\r\n    };\r\n    get containerInitialPosition(): string;\r\n    get containerFullscreenPosition(): string;\r\n    get containerScale(): number;\r\n    get imageAspectRatio(): number;\r\n    get isImageLargerWindow(): boolean;\r\n    get isFirstImage(): boolean;\r\n    get isLastImage(): boolean;\r\n    get latestImageIndex(): number;\r\n    get backgroundColor(): string;\r\n    get animationDuration(): number;\r\n    get animationMode(): \"none\" | \"default\" | \"zoom\" | \"zoom-blur\" | \"zoom-preloader\" | \"opacity\";\r\n    get animationTimingFunction(): string;\r\n    get closeButtonText(): string;\r\n    get counterSeparator(): string;\r\n    get counter(): string;\r\n    constructor(eventService: EventService);\r\n    emitState(type: any, state: any): void;\r\n    setShowState(state: ShowState): void;\r\n    setClosingState(state: ClosingState): void;\r\n    setAnimationDuration(): void;\r\n    setBackgroundColor(): void;\r\n    getContainerHeight(): string;\r\n    showThumbnailImage(): void;\r\n    hideThumbnailImage(): void;\r\n    updateThumbnailPosition(): void;\r\n}\r\n"]}