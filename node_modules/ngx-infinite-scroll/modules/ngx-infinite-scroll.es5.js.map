{"version":3,"file":"ngx-infinite-scroll.es5.js","sources":["../../src/services/ngx-ins-utils.ts","../../src/services/axis-resolver.ts","../../src/services/event-trigger.ts","../../src/services/position-resolver.ts","../../src/services/scroll-resolver.ts","../../src/services/scroll-state.ts","../../src/services/scroll-register.ts","../../src/modules/infinite-scroll.directive.ts","../../src/modules/ngx-infinite-scroll.module.ts","../../src/ngx-infinite-scroll.ts","../../public-api.ts","../../ngx-infinite-scroll.ts"],"names":["ScrollResolver.getScrollStats"],"mappings":"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","sourcesContent":["import { ElementRef, SimpleChange } from '@angular/core';\n\nexport function resolveContainerElement(\n  selector: string | any,\n  scrollWindow,\n  defaultElement,\n  fromRoot: boolean\n): any {\n  const hasWindow = window && !!window.document && window.document.documentElement;\n  let container = hasWindow && scrollWindow ? window : defaultElement;\n  if (selector) {\n    const containerIsString =\n      selector && hasWindow && typeof selector === 'string';\n    container = containerIsString\n      ? findElement(selector, defaultElement.nativeElement, fromRoot)\n      : selector;\n    if (!container) {\n      throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n    }\n  }\n  return container;\n}\n\nexport function findElement(\n  selector: string | any,\n  customRoot: ElementRef | any,\n  fromRoot: boolean\n) {\n  const rootEl = fromRoot ? window.document : customRoot;\n  return rootEl.querySelector(selector);\n}\n\nexport function inputPropChanged(prop: SimpleChange): boolean {\n  return prop && !prop.firstChange;\n}\n\nexport function hasWindowDefined(): boolean {\n  return typeof window !== 'undefined';\n}\n","const VerticalProps = {\n  clientHeight: \"clientHeight\",\n  offsetHeight: \"offsetHeight\",\n  scrollHeight: \"scrollHeight\",\n  pageYOffset: \"pageYOffset\",\n  offsetTop: \"offsetTop\",\n  scrollTop: \"scrollTop\",\n  top: \"top\"\n};\n\nconst HorizontalProps = {\n  clientHeight: \"clientWidth\",\n  offsetHeight: \"offsetWidth\",\n  scrollHeight: \"scrollWidth\",\n  pageYOffset: \"pageXOffset\",\n  offsetTop: \"offsetLeft\",\n  scrollTop: \"scrollLeft\",\n  top: \"left\"\n};\n\nexport class AxisResolver {\n  private propsMap: any;\n\n  constructor(private vertical: boolean = true) {\n    this.propsMap = vertical ? VerticalProps : HorizontalProps;\n  }\n  clientHeightKey() {\n    return this.propsMap.clientHeight;\n  }\n  offsetHeightKey() {\n    return this.propsMap.offsetHeight;\n  }\n  scrollHeightKey() {\n    return this.propsMap.scrollHeight;\n  }\n  pageYOffsetKey() {\n    return this.propsMap.pageYOffset;\n  }\n  offsetTopKey() {\n    return this.propsMap.offsetTop;\n  }\n  scrollTopKey() {\n    return this.propsMap.scrollTop;\n  }\n  topKey() {\n    return this.propsMap.top;\n  }\n}\n","import { IInfiniteScrollEvent, IPositionStats } from '../models';\n\nexport interface IScrollerProps extends IDistanceRange {\n  container: IPositionStats;\n  alwaysCallback: boolean;\n  disabled: boolean;\n}\n\nexport interface ITriggerEvents {\n  down: (event: any) => any;\n  up: (event: any) => any;\n}\n\nexport interface IDistanceRange {\n  down: number;\n  up: number;\n}\n\nexport interface IScrollConfig {\n  alwaysCallback: boolean;\n  shouldFireScrollEvent: boolean;\n}\n\nexport function shouldTriggerEvents(\n  alwaysCallback: boolean,\n  shouldFireScrollEvent: boolean,\n  isTriggeredCurrentTotal: boolean\n) {\n  if (alwaysCallback && shouldFireScrollEvent) {\n    return true;\n  }\n  if (!isTriggeredCurrentTotal && shouldFireScrollEvent) {\n    return true;\n  }\n  return false;\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ContainerRef, IPositionElements, IPositionStats, IResolver } from '../models';\nimport { AxisResolver } from './axis-resolver';\n\nexport function createResolver({\n  windowElement,\n  axis\n}: IPositionElements): IResolver {\n  return createResolverWithContainer(\n    { axis, isWindow: isElementWindow(windowElement) },\n    windowElement\n  );\n}\n\nexport function createResolverWithContainer(\n  resolver,\n  windowElement: ContainerRef\n) {\n  const container =\n    resolver.isWindow || (windowElement && !windowElement.nativeElement)\n      ? windowElement\n      : windowElement.nativeElement;\n  return { ...resolver, container };\n}\n\nexport function isElementWindow(windowElement: ContainerRef): boolean {\n  const isWindow = ['Window', 'global'].some((obj: string) =>\n    Object.prototype.toString.call(windowElement).includes(obj)\n  );\n  return isWindow;\n}\n\nexport function getDocumentElement(isContainerWindow: boolean, windowElement) {\n  return isContainerWindow ? windowElement.document.documentElement : null;\n}\n\nexport function calculatePoints(element: ElementRef, resolver: IResolver) {\n  const height = extractHeightForElement(resolver);\n  return resolver.isWindow\n    ? calculatePointsForWindow(height, element, resolver)\n    : calculatePointsForElement(height, element, resolver);\n}\n\nexport function calculatePointsForWindow(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container, isWindow } = resolver;\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  // scrolled until now / current y point\n  const scrolled =\n    height +\n    getElementPageYOffset(\n      getDocumentElement(isWindow, container),\n      axis,\n      isWindow\n    );\n  // total height / most bottom y point\n  const nativeElementHeight = getElementHeight(\n    element.nativeElement,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n  const totalToScroll =\n    getElementOffsetTop(element.nativeElement, axis, isWindow) +\n    nativeElementHeight;\n  return { height, scrolled, totalToScroll, isWindow };\n}\n\nexport function calculatePointsForElement(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container } = resolver;\n  // perhaps use container.offsetTop instead of 'scrollTop'\n  const scrolled = container[axis.scrollTopKey()];\n  const totalToScroll = container[axis.scrollHeightKey()];\n  return { height, scrolled, totalToScroll, isWindow: false };\n}\n\nexport function extractHeightPropKeys(axis: AxisResolver) {\n  return {\n    offsetHeightKey: axis.offsetHeightKey(),\n    clientHeightKey: axis.clientHeightKey()\n  };\n}\n\nexport function extractHeightForElement({\n  container,\n  isWindow,\n  axis\n}: IResolver) {\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  return getElementHeight(\n    container,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n}\nexport function getElementHeight(\n  elem: any,\n  isWindow: boolean,\n  offsetHeightKey: string,\n  clientHeightKey: string\n) {\n  if (isNaN(elem[offsetHeightKey])) {\n    const docElem = getDocumentElement(isWindow, elem);\n    return docElem ? docElem[clientHeightKey] : 0;\n  } else {\n    return elem[offsetHeightKey];\n  }\n}\n\nexport function getElementOffsetTop(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const topKey = axis.topKey();\n  // elem = elem.nativeElement;\n  if (!elem.getBoundingClientRect) {\n    // || elem.css('none')) {\n    return;\n  }\n  return (\n    elem.getBoundingClientRect()[topKey] +\n    getElementPageYOffset(elem, axis, isWindow)\n  );\n}\n\nexport function getElementPageYOffset(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const pageYOffset = axis.pageYOffsetKey();\n  const scrollTop = axis.scrollTopKey();\n  const offsetTop = axis.offsetTopKey();\n\n  if (isNaN(window.pageYOffset)) {\n    return getDocumentElement(isWindow, elem)[scrollTop];\n  } else if (elem.ownerDocument) {\n    return elem.ownerDocument.defaultView[pageYOffset];\n  } else {\n    return elem[offsetTop];\n  }\n}\n","import { IPositionStats, IScrollState, IScrollerDistance } from '../models';\n\nexport function shouldFireScrollEvent(\n  container: IPositionStats,\n  distance: IScrollerDistance,\n  scrollingDown: boolean\n) {\n  let remaining: number;\n  let containerBreakpoint: number;\n  if (container.totalToScroll <= 0) {\n    return false;\n  }\n\n  const scrolledUntilNow = container.isWindow ? container.scrolled : container.height + container.scrolled;\n  if (scrollingDown) {\n    remaining =\n      (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\n    containerBreakpoint = distance.down / 10;\n  } else {\n    const totalHiddenContentHeight =\n      container.scrolled + (container.totalToScroll - scrolledUntilNow);\n    remaining = container.scrolled / totalHiddenContentHeight;\n    containerBreakpoint = distance.up / 10;\n  }\n\n  const shouldFireEvent: boolean = remaining <= containerBreakpoint;\n  return shouldFireEvent;\n}\n\nexport function isScrollingDownwards(\n  lastScrollPosition: number,\n  container: IPositionStats\n) {\n  return lastScrollPosition < container.scrolled;\n}\n\nexport function getScrollStats(\n  lastScrollPosition: number,\n  container: IPositionStats,\n  distance: IScrollerDistance\n) {\n  const scrollDown = isScrollingDownwards(lastScrollPosition, container);\n  return {\n    fire: shouldFireScrollEvent(container, distance, scrollDown),\n    scrollDown\n  };\n}\n\nexport function updateScrollPosition(\n  position: number,\n  scrollState: IScrollState\n) {\n  return (scrollState.lastScrollPosition = position);\n}\n\nexport function updateTotalToScroll(\n  totalToScroll: number,\n  scrollState: IScrollState\n) {\n  if (scrollState.lastTotalToScroll !== totalToScroll) {\n    scrollState.lastTotalToScroll = scrollState.totalToScroll;\n    scrollState.totalToScroll = totalToScroll;\n  }\n}\n\nexport function isSameTotalToScroll(scrollState: IScrollState) {\n  return scrollState.totalToScroll === scrollState.lastTotalToScroll;\n}\n\nexport function updateTriggeredFlag(\n  scroll,\n  scrollState: IScrollState,\n  triggered: boolean,\n  isScrollingDown: boolean\n) {\n  if (isScrollingDown) {\n    scrollState.triggered.down = scroll;\n  } else {\n    scrollState.triggered.up = scroll;\n  }\n}\n\nexport function isTriggeredScroll(\n  totalToScroll,\n  scrollState: IScrollState,\n  isScrollingDown: boolean\n) {\n  return isScrollingDown\n    ? scrollState.triggered.down === totalToScroll\n    : scrollState.triggered.up === totalToScroll;\n}\n\nexport function updateScrollState(\n  scrollState: IScrollState,\n  scrolledUntilNow: number,\n  totalToScroll: number\n) {\n  updateScrollPosition(scrolledUntilNow, scrollState);\n  updateTotalToScroll(totalToScroll, scrollState);\n  // const isSameTotal = isSameTotalToScroll(scrollState);\n  // if (!isSameTotal) {\n  //   updateTriggeredFlag(scrollState, false, isScrollingDown);\n  // }\n}\n","import { IScrollState, IScrollerDistance } from '../models';\n\nexport class ScrollState implements IScrollState {\n  lastScrollPosition = 0;\n  lastTotalToScroll = 0;\n  totalToScroll = 0;\n  triggered: IScrollerDistance = {\n    down: 0,\n    up: 0\n  };\n\n  constructor({ totalToScroll }) {\n    this.totalToScroll = totalToScroll;\n  }\n\n  updateScrollPosition(position: number) {\n    return (this.lastScrollPosition = position);\n  }\n\n  updateTotalToScroll(totalToScroll: number) {\n    if (this.lastTotalToScroll !== totalToScroll) {\n      this.lastTotalToScroll = this.totalToScroll;\n      this.totalToScroll = totalToScroll;\n    }\n  }\n\n  updateScroll(scrolledUntilNow: number, totalToScroll: number) {\n    this.updateScrollPosition(scrolledUntilNow);\n    this.updateTotalToScroll(totalToScroll);\n  }\n\n  updateTriggeredFlag(scroll, isScrollingDown: boolean) {\n    if (isScrollingDown) {\n      this.triggered.down = scroll;\n    } else {\n      this.triggered.up = scroll;\n    }\n  }\n\n  isTriggeredScroll(totalToScroll, isScrollingDown: boolean) {\n    return isScrollingDown\n      ? this.triggered.down === totalToScroll\n      : this.triggered.up === totalToScroll;\n  }\n}\n","import { Observable, of, fromEvent } from 'rxjs';\nimport { map, mergeMap, tap, throttleTime, filter } from 'rxjs/operators';\n\nimport * as Models from '../models';\nimport { AxisResolver } from './axis-resolver';\nimport { shouldTriggerEvents } from './event-trigger';\nimport { resolveContainerElement } from './ngx-ins-utils';\nimport { calculatePoints, createResolver } from './position-resolver';\nimport * as ScrollResolver from './scroll-resolver';\nimport { ScrollState } from './scroll-state';\n\nexport function createScroller(config: Models.IScroller) {\n  const { scrollContainer, scrollWindow, element, fromRoot } = config;\n  const resolver = createResolver({\n    axis: new AxisResolver(!config.horizontal),\n    windowElement: resolveContainerElement(\n      scrollContainer,\n      scrollWindow,\n      element,\n      fromRoot\n    )\n  });\n  const scrollState = new ScrollState({\n    totalToScroll: calculatePoints(element, resolver)\n  });\n  const options: Models.IScrollRegisterConfig = {\n    container: resolver.container,\n    throttle: config.throttle\n  };\n  const distance = {\n    up: config.upDistance,\n    down: config.downDistance\n  };\n  return attachScrollEvent(options).pipe(\n    mergeMap(() => of(calculatePoints(element, resolver))),\n    map((positionStats: Models.IPositionStats) =>\n      toInfiniteScrollParams(\n        scrollState.lastScrollPosition,\n        positionStats,\n        distance\n      )\n    ),\n    tap(({ stats }: Models.IScrollParams) =>\n      scrollState.updateScroll(stats.scrolled, stats.totalToScroll)\n    ),\n    filter(\n      ({ fire, scrollDown, stats: { totalToScroll } }: Models.IScrollParams) =>\n        shouldTriggerEvents(\n          config.alwaysCallback,\n          fire,\n          scrollState.isTriggeredScroll(totalToScroll, scrollDown)\n        )\n    ),\n    tap(({ scrollDown, stats: { totalToScroll } }: Models.IScrollParams) => {\n      scrollState.updateTriggeredFlag(totalToScroll, scrollDown);\n    }),\n    map(toInfiniteScrollAction)\n  );\n}\n\nexport function attachScrollEvent(\n  options: Models.IScrollRegisterConfig\n): Observable<{}> {\n  let obs = fromEvent(options.container, 'scroll');\n  // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\n  // Let's avoid calling the function unless needed.\n  // Replacing with throttleTime seems to solve the problem\n  // See https://github.com/orizens/ngx-infinite-scroll/issues/198\n  if (options.throttle) {\n    obs = obs.pipe(throttleTime(options.throttle));\n  }\n  return obs;\n}\n\nexport function toInfiniteScrollParams(\n  lastScrollPosition: number,\n  stats: Models.IPositionStats,\n  distance: Models.IScrollerDistance\n): Models.IScrollParams {\n  const { scrollDown, fire } = ScrollResolver.getScrollStats(\n    lastScrollPosition,\n    stats,\n    distance\n  );\n  return {\n    scrollDown,\n    fire,\n    stats\n  };\n}\n\nexport const InfiniteScrollActions = {\n  DOWN: '[NGX_ISE] DOWN',\n  UP: '[NGX_ISE] UP'\n};\n\nexport function toInfiniteScrollAction(\n  response: Models.IScrollParams\n): Models.IInfiniteScrollAction {\n  const {\n    scrollDown,\n    stats: { scrolled: currentScrollPosition }\n  } = response;\n  return {\n    type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\n    payload: {\n      currentScrollPosition\n    }\n  };\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport { IInfiniteScrollEvent, IInfiniteScrollAction } from '../models';\nimport { hasWindowDefined, inputPropChanged } from '../services/ngx-ins-utils';\nimport { createScroller, InfiniteScrollActions } from '../services/scroll-register';\n\n@Directive({\n  selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n})\nexport class InfiniteScrollDirective\n  implements OnDestroy, OnChanges, AfterViewInit {\n  @Output() scrolled = new EventEmitter<IInfiniteScrollEvent>();\n  @Output() scrolledUp = new EventEmitter<IInfiniteScrollEvent>();\n\n  @Input() infiniteScrollDistance: number = 2;\n  @Input() infiniteScrollUpDistance: number = 1.5;\n  @Input() infiniteScrollThrottle: number = 150;\n  @Input() infiniteScrollDisabled: boolean = false;\n  @Input() infiniteScrollContainer: any = null;\n  @Input() scrollWindow: boolean = true;\n  @Input() immediateCheck: boolean = false;\n  @Input() horizontal: boolean = false;\n  @Input() alwaysCallback: boolean = false;\n  @Input() fromRoot: boolean = false;\n\n  private disposeScroller: Subscription;\n\n  constructor(private element: ElementRef, private zone: NgZone) { }\n\n  ngAfterViewInit() {\n    if (!this.infiniteScrollDisabled) {\n      this.setup();\n    }\n  }\n\n  ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }: SimpleChanges) {\n    const containerChanged = inputPropChanged(infiniteScrollContainer);\n    const disabledChanged = inputPropChanged(infiniteScrollDisabled);\n    const distanceChanged = inputPropChanged(infiniteScrollDistance);\n    const shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n      (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n\n    if (containerChanged || disabledChanged || distanceChanged) {\n      this.destroyScroller();\n      if (shouldSetup) {\n        this.setup();\n      }\n    }\n  }\n\n  setup() {\n    if (hasWindowDefined()) {\n      this.zone.runOutsideAngular(() => {\n        this.disposeScroller = createScroller({\n          fromRoot: this.fromRoot,\n          alwaysCallback: this.alwaysCallback,\n          disable: this.infiniteScrollDisabled,\n          downDistance: this.infiniteScrollDistance,\n          element: this.element,\n          horizontal: this.horizontal,\n          scrollContainer: this.infiniteScrollContainer,\n          scrollWindow: this.scrollWindow,\n          throttle: this.infiniteScrollThrottle,\n          upDistance: this.infiniteScrollUpDistance\n        }).subscribe((payload: any) => this.zone.run(() => this.handleOnScroll(payload)));\n      });\n    }\n  }\n\n  handleOnScroll({ type, payload }: IInfiniteScrollAction) {\n    switch (type) {\n      case InfiniteScrollActions.DOWN:\n        return this.scrolled.emit(payload);\n\n      case InfiniteScrollActions.UP:\n        return this.scrolledUp.emit(payload);\n\n      default:\n        return;\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyScroller();\n  }\n\n  destroyScroller() {\n    if (this.disposeScroller) {\n      this.disposeScroller.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\n\n@NgModule({\n  declarations: [InfiniteScrollDirective],\n  exports: [InfiniteScrollDirective],\n  imports: [],\n  providers: []\n})\nexport class InfiniteScrollModule { }\n","// Public classes.\nexport {\n  ContainerRef,\n  IInfiniteScrollEvent,\n  IPositionElements,\n  IPositionStats,\n  IResolver\n} from './models';\n\nexport { InfiniteScrollDirective } from './modules/infinite-scroll.directive';\nexport { InfiniteScrollModule } from './modules/ngx-infinite-scroll.module';\n","/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n\n/**\n * Entry point for all public APIs of the package.\n */\nexport * from './src/ngx-infinite-scroll';\n","export * from './public-api';\n"]}