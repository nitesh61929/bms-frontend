{"version":3,"file":"quill-editor.component.d.ts","sources":["quill-editor.component.d.ts"],"names":[],"mappingssourcesContent":["import { DomSanitizer } from '@angular/platform-browser';\nimport { QuillModules, CustomOption, CustomModule } from './quill-editor.interfaces';\nimport QuillType, { Delta } from 'quill';\nimport { AfterViewInit, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, Validator } from '@angular/forms';\nimport { QuillService } from './quill.service';\nexport interface Range {\n    index: number;\n    length: number;\n}\nexport interface ContentChange {\n    content: any;\n    delta: Delta;\n    editor: QuillType;\n    html: string | null;\n    oldDelta: Delta;\n    source: string;\n    text: string;\n}\nexport interface SelectionChange {\n    editor: QuillType;\n    oldRange: Range | null;\n    range: Range | null;\n    source: string;\n}\nexport interface Blur {\n    editor: QuillType;\n    source: string;\n}\nexport interface Focus {\n    editor: QuillType;\n    source: string;\n}\nexport declare type EditorChangeContent = ContentChange & {\n    event: 'text-change';\n};\nexport declare type EditorChangeSelection = SelectionChange & {\n    event: 'selection-change';\n};\nexport declare abstract class QuillEditorBase implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy, Validator {\n    elementRef: ElementRef;\n    protected domSanitizer: DomSanitizer;\n    protected doc: any;\n    protected platformId: any;\n    protected renderer: Renderer2;\n    protected zone: NgZone;\n    protected service: QuillService;\n    format?: 'object' | 'html' | 'text' | 'json';\n    theme?: string;\n    modules?: QuillModules;\n    debug?: 'warn' | 'log' | 'error' | false;\n    readOnly?: boolean;\n    placeholder?: string;\n    maxLength?: number;\n    minLength?: number;\n    required: boolean;\n    formats?: string[] | null;\n    customToolbarPosition: 'top' | 'bottom';\n    sanitize: boolean;\n    styles: any;\n    strict: boolean;\n    scrollingContainer?: HTMLElement | string | null;\n    bounds?: HTMLElement | string;\n    customOptions: CustomOption[];\n    customModules: CustomModule[];\n    trackChanges?: 'user' | 'all';\n    preserveWhitespace: boolean;\n    classes?: string;\n    trimOnValidation: boolean;\n    linkPlaceholder?: string;\n    compareValues: boolean;\n    filterNull: boolean;\n    onEditorCreated: EventEmitter<any>;\n    onEditorChanged: EventEmitter<EditorChangeContent | EditorChangeSelection>;\n    onContentChanged: EventEmitter<ContentChange>;\n    onSelectionChanged: EventEmitter<SelectionChange>;\n    onFocus: EventEmitter<Focus>;\n    onBlur: EventEmitter<Blur>;\n    quillEditor: QuillType;\n    editorElem: HTMLElement;\n    content: any;\n    disabled: boolean;\n    onModelChange: (modelValue?: any) => void;\n    onModelTouched: () => void;\n    onValidatorChanged: () => void;\n    constructor(elementRef: ElementRef, domSanitizer: DomSanitizer, doc: any, platformId: any, renderer: Renderer2, zone: NgZone, service: QuillService);\n    static normalizeClassNames(classes: string): string[];\n    valueGetter: (quillEditor: QuillType, editorElement: HTMLElement) => string | any;\n    valueSetter: (quillEditor: QuillType, value: any) => any;\n    ngAfterViewInit(): Promise<void>;\n    selectionChangeHandler: (range: Range | null, oldRange: Range | null, source: string) => void;\n    textChangeHandler: (delta: Delta, oldDelta: Delta, source: string) => void;\n    editorChangeHandler: (event: 'text-change' | 'selection-change', current: any | Range | null, old: any | Range | null, source: string) => void;\n    ngOnDestroy(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    addClasses(classList: string): void;\n    removeClasses(classList: string): void;\n    writeValue(currentValue: any): void;\n    setDisabledState(isDisabled?: boolean): void;\n    registerOnChange(fn: (modelValue: any) => void): void;\n    registerOnTouched(fn: () => void): void;\n    registerOnValidatorChange(fn: () => void): void;\n    validate(): {\n        minLengthError?: {\n            given: number;\n            minLength: number;\n        };\n        maxLengthError?: {\n            given: number;\n            maxLength: number;\n        };\n        requiredError?: {\n            empty: boolean;\n        };\n    };\n}\nexport declare class QuillEditorComponent extends QuillEditorBase {\n    constructor(elementRef: ElementRef, domSanitizer: DomSanitizer, doc: any, platformId: any, renderer: Renderer2, zone: NgZone, service: QuillService);\n}\n"]}