{"version":3,"file":"grid.es5.js","sources":["../../../src/lib/grid/grid-align/grid-align.ts","../../../src/lib/grid/align-columns/align-columns.ts","../../../src/lib/grid/align-rows/align-rows.ts","../../../src/lib/grid/area/area.ts","../../../src/lib/grid/areas/areas.ts","../../../src/lib/grid/auto/auto.ts","../../../src/lib/grid/column/column.ts","../../../src/lib/grid/columns/columns.ts","../../../src/lib/grid/gap/gap.ts","../../../src/lib/grid/row/row.ts","../../../src/lib/grid/rows/rows.ts","../../../src/lib/grid/module.ts"],"names":["buildCss","inputs","selector","DEFAULT_MAIN","DEFAULT_CROSS","DEFAULT_VALUE","AUTO_SPECIFIER"],"mappings":";;;;;;;;;;;;;;;;;;;;AAgBA,IAAM,WAAW,GAAG,SAAS,CAA7B;AAAC;AACD,IAAM,WAAW,GAAG,SAAS,CAA7B;AAEA,IAAA,qBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACyC,SAA3C,CAAA,qBAAA,EAAA,MAAA,CAAA,CAAuD;AAAC,IADxD,SAAA,qBAAA,GAAA;AAAE;AACuC,KAIxC;AACD;AACO;AACW;AAAmB;AAAQ,IAN3C,qBAAF,CAAA,SAAA,CAAA,WAAa;AAAO;AACP;AAAmB;AAAQ,IADtC,UAAY,KAAa,EAA3B;AAAE,QACE,OAAO,QAAQ,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC;AAC1C,KAAG,CAAH;AAAC;iDAJD,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;;;0BAAO;AAAC,IAnBR,OAAA,qBAAA,CAAA;AAAC,CAwBA,CAJ0C,YAAY,CAIvD,CAAA,CAAC;AAED,IAAA,kBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACsC,SAAxC,CAAA,kBAAA,EAAA,MAAA,CAAA,CAAsD;AAAC,IAIrD,SAAF,kBAAA,CAAc,UAAsB,EACtB,YAAmC,EACnC,MAAkB,EAClB,OAAwB,EAHtC;AAAE,QAAA,IAAF,KAAA,GAII,MAJJ,CAAA,IAAA,CAAA,IAAA,EAIU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IAJpD,IAAA,CAMG;AACH,QATY,KAAZ,CAAA,aAAyB,GAAG,YAAY,CAAC;AACzC,QASY,KAAZ,CAAA,UAAsB,GAAG,UAAU,CAAC;AACpC,QAJI,KAAI,CAAC,IAAI,EAAE,CAAC;AAChB;AAEiB,KAFd,AAXI;AAAC;uBAAR,EAAA,IAAA,EAAC,SAAS,EAAV,1CACkB;AAEK,QAtBvB,EAAA,IAAA,EAAmB,UAAU,EAA7B;AAAE,QAyBF,EAAA,IAAA,EAA4B,qBAAqB,EAAjD;AAAE,QAnBF,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAE,QAJF,EAAA,IAAA,EAAE,eAAe,EAAjB;AAAC;;;;;2KAAS;AAAC,IA+BX,OAAA,kBAAC,CAAD;AAAC,CAAA,CAbuC,cAAc,CAatD,CAAA,CAAC;AAbD;AAeA,IAAM,UAAU,GAAiC,IAAI,GAAG,EAAE,CAA1D;AAAC;AAED,IAAM,MAAM,GAAG;AACf,IAAE,aAAa;AACf,IAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB;AAC1F,IAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB;AACpF,IAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB;AACpF,CAAC,CAAD;AAAC;AAED,IAAM,QAAQ,GAAG,+RAKhB,CALD;AAAC;AAAI;AAEoB;AACH;AACT;AAAG;AAIV;AACyB;AAM/B,IAAA,yBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC6C,SAA/C,CAAA,yBAAA,EAAA,MAAA,CAAA,CAAiE;AAAC,IADlE,SAAA,yBAAA,GAAA;AAAE,QAAF,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAGC;AACD,QAFY,KAAZ,CAAA,MAAkB,GAAG,MAAM,CAAC;AAC5B;AAEmB,KAFlB;qDAHD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApB,QAAoB,EAAE,MAAM,EAA5B,MAA4B,EAAC,EAA7B,EAAA;;;;;;0BAAO;AAAC,IAGR,OAAA,yBAAC,CAAD;AAAC,CAAA,CAF8C,kBAAkB,CAEjE,CAAA,CAAC;AAFD;AAAI;AAAqB;AAAe;AAIxC,SAAS,QAAQ,CAAC,KAAkB,EAApC;AAAE,IAAgB,IAAlB,KAAA,KAAA,KAAA,CAAA,EAAkB,EAAA,KAAlB,GAAA,EAAoC,CAApC,EAAA;AAAC;AAAqB,IACtB,IAAQ,GAAG,GAA4B,EAAE,CAAzC;AAAC,IAA0C,IAAA,EAA3C,GAAmE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAAvC,OAAO,GAAnD,EAAA,CAAA,CAAA,CAAmD,EAAE,UAAU,GAA/D,EAAA,CAAA,CAAA,CAAmF,CAAnF;AAAC;AAAgB,IAGf,QAAQ,OAAO;AACjB,QAAI,KAAK,KAAK;AACd,YAAM,GAAG,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;AAClC,YAAM,MAAM;AACZ,QAAI,KAAK,QAAQ;AACjB,YAAM,GAAG,CAAC,cAAc,CAAC,GAAG,QAAQ,CAAC;AACrC,YAAM,MAAM;AACZ,QAAI,KAAK,SAAS;AAClB,YAAM,GAAG,CAAC,cAAc,CAAC,GAAG,SAAS,CAAC;AACtC,YAAM,MAAM;AACZ,QAAI,KAAK,OAAO;AAChB,YAAM,GAAG,CAAC,cAAc,CAAC,GAAG,OAAO,CAAC;AACpC,YAAM,MAAM;AACZ,QAAI;AACJ,YAAM,GAAG,CAAC,cAAc,CAAC,GAAG,WAAW,CAAC;AAAqB,YACvD,MAAM;AACZ,KAAG;AACH;AAEC,IAAC,QAAQ,UAAU;AACpB,QAAI,KAAK,KAAK;AACd,YAAM,GAAG,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;AAChC,YAAM,MAAM;AACZ,QAAI,KAAK,QAAQ;AACjB,YAAM,GAAG,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC;AACnC,YAAM,MAAM;AACZ,QAAI,KAAK,SAAS;AAClB,YAAM,GAAG,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC;AACpC,YAAM,MAAM;AACZ,QAAI,KAAK,OAAO;AAChB,YAAM,GAAG,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC;AAClC,YAAM,MAAM;AACZ,QAAI;AACJ,YAAM,GAAG,CAAC,YAAY,CAAC,GAAG,WAAW,CAAC;AAAwB,YACxD,MAAM;AACZ,KAAG;AACH,IACE,OAAO,GAAG,CAAC;AACb,CAAC;AACD;AAAC;AAAI;AAAkC;AAAuD;AAAqJ;AAAI;ACjGvP,IAAM,YAAY,GAAG,OAAO,CAA5B;AAAC;AACD,IAAM,aAAa,GAAG,SAAS,CAA/B;AAMA,IAAA,4BAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACgD,SAAlD,CAAA,4BAAA,EAAA,MAAA,CAAA,CAA8D;AAAC,IAD/D,SAAA,4BAAA,GAAA;AAAE;AACuC,KAIxC;AACD;AACO;AACW;AAAyB;AAAmB;AAEzD,IARH,4BAAF,CAAA,SAAA,CAAA,WAAa;AAAO;AAAwB;AACtC;AAAmB;AAAQ,IAD/B,UAAY,KAAa,EAAE,MAA8B,EAA3D;AAAE,QACE,OAAOA,UAAQ,CAAC,KAAK,IAAO,YAAY,GAA5C,GAAA,GAAgD,aAAe,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AAChF,KAAG,CAAH;AAAC;wDAJD,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;;;0BAAO;AAAC,IAxBR,OAAA,4BAAA,CAAA;AAAC,CA6BA,CAJiD,YAAY,CAI9D,CAAA,CAAC;AAED,IAAA,yBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC6C,SAA/C,CAAA,yBAAA,EAAA,MAAA,CAAA,CAA6D;AAAC,IAS5D,SAAF,yBAAA,CAAc,UAAsB,EACtB,YAA0C,EAC1C,MAAkB,EAClB,OAAwB,EAHtC;AAAE,QAAA,IAAF,KAAA,GAII,MAJJ,CAAA,IAAA,CAAA,IAAA,EAIU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IAJpD,IAAA,CAMG;AACH,QAdY,KAAZ,CAAA,aAAyB,GAAG,oBAAoB,CAAC;AACjD,QAIY,KAAZ,CAAA,OAAmB,GAAG,KAAK,CAAC;AAC5B,QAMI,KAAI,CAAC,IAAI,EAAE,CAAC;AAChB;AAEiB,KAFd;AACH,IAZE,MAAF,CAAA,cAAA,CACM,yBADN,CAAA,SAAA,EAAA,QACY,EADZ;AAAE;AAAiB;AACE;AAAY,QAD/B,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;AAC/C;AAAiB;AAA0B;AAAuB;AAC9D,QADH,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;AACxE;AAA2B;AAEH,KAJzB,CAAA,CAAgD;AAChD;AAAqD;AACjD;AAEuB;AACe;AACjC;AACmB;AAAQ;AACxB;AAAwB;AACnC;AAAQ,IAOG,yBAAZ,CAAA,SAAA,CAAA,eAA2B;AAAI;AACQ;AAAyB;AAC5B;AAAQ;AAIvC;AAAwB;AAAmB;AAAQ,IANtD,UAA0B,KAAa,EAAzC;AAAE,QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,uBAAuB,GAAG,iBAAiB,CAAC;AAChF,QAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;AACjD,KAAG,CAAH,AAzBO;AAAC;8BAAR,EAAA,IAAA,EAAC,SAAS,EAAV,jDACkB;AAEK,QA3BvB,EAAA,IAAA,EAAmB,UAAU,EAA7B;AAAE,QAmCF,EAAA,IAAA,EAA4B,4BAA4B,EAAxD;AAAE,QAhCF,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAE,QAGF,EAAA,IAAA,EAAE,eAAe,EAAjB;AAAC;AAAU;AAEN,QAqBL,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;AAAC;;;;;;;;oBAAM;AAAC,IAqBR,OAAA,yBAAC,CAAD;AAAC,CAAA,CAzB8C,cAAc,CAyB7D,CAAA,CAAC;AAzBD;AA2BA,IAAM,iBAAiB,GAAiC,IAAI,GAAG,EAAE,CAAjE;AAAC;AACD,IAAM,uBAAuB,GAAiC,IAAI,GAAG,EAAE,CAAvE;AAAC;AAED,IAAMC,QAAM,GAAG;AACf,IAAE,gBAAgB;AAClB,IAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB;AAC/D,IAAE,mBAAmB,EAAE,mBAAmB,EAAE,sBAAsB;AAClE,IAAE,sBAAsB,EAAE,sBAAsB,EAAE,sBAAsB;AACxE,IAAE,sBAAsB,EAAE,sBAAsB,EAAE,sBAAsB;AACxE,IAAE,sBAAsB;AACxB,CAAC,CAAD;AAAC;AACD,IAAMC,UAAQ,GAAG,gVAOhB,CAPD;AAAC;AAAI;AAEU;AACb;AACkB;AACY;AAUhC,IAAA,gCAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACoD,SAAtD,CAAA,gCAAA,EAAA,MAAA,CAAA,CAA+E;AAAC,IADhF,SAAA,gCAAA,GAAA;AAAE,QAAF,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAGC;AACD,QAFY,KAAZ,CAAA,MAAkB,GAAGD,QAAM,CAAC;AAC5B;AAEmB,KAFlB;4DAHD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBC,UAAoB,EAAE,MAAM,EAA5BD,QAA4B,EAAC,EAA7B,EAAA;;;;;;0BAAO;AAAC,IAGR,OAAA,gCAAC,CAAD;AAAC,CAAA,CAFqD,yBAAyB,CAE/E,CAAA,CAAC;AAFD;AAAI;AAAoB;AAAqB;AAAe;AAI5D,SAASD,UAAQ,CAAC,KAAa,EAAE,MAAe,EAAhD;AAAE;AAAqB,IACvB,IAAQ,GAAG,GAA4B,EAAE,CAAzC;AAAC,IAA0C,IAAA,EAA3C,GAAmE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAAvC,QAAQ,GAApD,EAAA,CAAA,CAAA,CAAoD,EAAE,SAAS,GAA/D,EAAA,CAAA,CAAA,CAAmF,CAAnF;AAAC;AAAiB,IAGhB,QAAQ,QAAQ;AAClB,QAAI,KAAK,QAAQ;AACjB,YAAM,GAAG,CAAC,eAAe,CAAC,GAAG,QAAQ,CAAC;AACtC,YAAM,MAAM;AACZ,QAAI,KAAK,cAAc;AACvB,YAAM,GAAG,CAAC,eAAe,CAAC,GAAG,cAAc,CAAC;AAC5C,YAAM,MAAM;AACZ,QAAI,KAAK,eAAe;AACxB,YAAM,GAAG,CAAC,eAAe,CAAC,GAAG,eAAe,CAAC;AAC7C,YAAM,MAAM;AACZ,QAAI,KAAK,cAAc;AACvB,YAAM,GAAG,CAAC,eAAe,CAAC,GAAG,cAAc,CAAC;AAC5C,YAAM,MAAM;AACZ,QAAI,KAAK,KAAK;AACd,YAAM,GAAG,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC;AACnC,YAAM,MAAM;AACZ,QAAI,KAAK,OAAO;AAChB,YAAM,GAAG,CAAC,eAAe,CAAC,GAAG,OAAO,CAAC;AACrC,YAAM,MAAM;AACZ,QAAI,KAAK,SAAS;AAClB,YAAM,GAAG,CAAC,eAAe,CAAC,GAAG,SAAS,CAAC;AACvC,YAAM,MAAM;AACZ,QAAI;AACJ,YAAM,GAAG,CAAC,eAAe,CAAC,GAAG,YAAY,CAAC;AAAsB,YAC1D,MAAM;AACZ,KAAG;AACH;AAEC,IAAC,QAAQ,SAAS;AACnB,QAAI,KAAK,OAAO;AAChB,YAAM,GAAG,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC;AACnC,YAAM,MAAM;AACZ,QAAI,KAAK,QAAQ;AACjB,YAAM,GAAG,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC;AACpC,YAAM,MAAM;AACZ,QAAI,KAAK,KAAK;AACd,YAAM,GAAG,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;AACjC,YAAM,MAAM;AACZ,QAAI,KAAK,SAAS;AAClB,YAAM,GAAG,CAAC,aAAa,CAAC,GAAG,SAAS,CAAC;AACrC,YAAM,MAAM;AACZ,QAAI;AAAsB,YACpB,GAAG,CAAC,aAAa,CAAC,GAAG,aAAa,CAAC;AAAuB,YAC1D,MAAM;AACZ,KAAG;AACH,IACE,GAAG,CAAC,SAAS,CAAC,GAAG,MAAM,GAAG,aAAa,GAAG,MAAM,CAAC;AACnD,IACE,OAAO,GAAG,CAAC;AACb,CAAC;AACD;AAAC;AAAI;AAAkC;AAAiD;AAAqJ;AAAI;AC/HjP,IAAMG,cAAY,GAAG,OAAO,CAA5B;AAAC;AACD,IAAMC,eAAa,GAAG,SAAS,CAA/B;AAMA,IAAA,yBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC6C,SAA/C,CAAA,yBAAA,EAAA,MAAA,CAAA,CAA2D;AAAC,IAD5D,SAAA,yBAAA,GAAA;AAAE;AACuC,KAIxC;AACD;AACO;AACW;AAAyB;AAE3C;AAAQ,IARN,yBAAF,CAAA,SAAA,CAAA,WAAa;AAAO;AAAwB;AACnC;AAAmB;AAAQ,IADlC,UAAY,KAAa,EAAE,MAA2B,EAAxD;AAAE,QACE,OAAOJ,UAAQ,CAAC,KAAK,IAAOG,cAAY,GAA5C,GAAA,GAAgDC,eAAe,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AAChF,KAAG,CAAH;AAAC;qDAJD,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;;;0BAAO;AAAC,IAxBR,OAAA,yBAAA,CAAA;AAAC,CA6BA,CAJ8C,YAAY,CAI3D,CAAA,CAAC;AAED,IAAA,sBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC0C,SAA5C,CAAA,sBAAA,EAAA,MAAA,CAAA,CAA0D;AAAC,IASzD,SAAF,sBAAA,CAAc,UAAsB,EACtB,YAAuC,EACvC,MAAkB,EAClB,OAAwB,EAHtC;AAAE,QAAA,IAAF,KAAA,GAII,MAJJ,CAAA,IAAA,CAAA,IAAA,EAIU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IAJpD,IAAA,CAMG;AACH,QAdY,KAAZ,CAAA,aAAyB,GAAG,iBAAiB,CAAC;AAC9C,QAIY,KAAZ,CAAA,OAAmB,GAAG,KAAK,CAAC;AAC5B,QAMI,KAAI,CAAC,IAAI,EAAE,CAAC;AAChB;AAEiB,KAFd;AACH,IAZE,MAAF,CAAA,cAAA,CACM,sBADN,CAAA,SAAA,EAAA,QACY,EADZ;AAAE;AAAiB;AACE;AAAY,QAD/B,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;AAC/C;AAAiB;AAA0B;AAAuB;AAC9D,QADH,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;AACxE;AAA2B;AAEH,KAJzB,CAAA,CAAgD;AAChD;AAAqD;AACjD;AAEuB;AACe;AAC9B;AACmB;AAAQ;AACxB;AAAwB;AACnC;AAAQ,IAOA,sBAAZ,CAAA,SAAA,CAAA,eAA2B;AAAI;AACQ;AAAyB;AACtB;AAC1C;AAGW;AAAwB;AAAmB;AAAQ,IAN5D,UAA0B,KAAa,EAAzC;AAAE,QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,oBAAoB,GAAG,cAAc,CAAC;AAC1E,QAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;AACjD,KAAG,CAAH,AAzBO;AAAC;2BAAR,EAAA,IAAA,EAAC,SAAS,EAAV,9CACkB;AAEK,QA3BvB,EAAA,IAAA,EAAmB,UAAU,EAA7B;AAAE,QAmCF,EAAA,IAAA,EAA4B,yBAAyB,EAArD;AAAE,QAhCF,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAE,QAGF,EAAA,IAAA,EAAE,eAAe,EAAjB;AAAC;AAAU;AAET,QAqBF,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;AAAC;;;;;;;;oBAAM;AAAC,IAqBR,OAAA,sBAAC,CAAD;AAAC,CAAA,CAzB2C,cAAc,CAyB1D,CAAA,CAAC;AAzBD;AA2BA,IAAM,cAAc,GAAiC,IAAI,GAAG,EAAE,CAA9D;AAAC;AACD,IAAM,oBAAoB,GAAiC,IAAI,GAAG,EAAE,CAApE;AAAC;AAED,IAAMH,QAAM,GAAG;AACf,IAAE,aAAa;AACf,IAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB;AACtD,IAAE,gBAAgB,EAAE,gBAAgB,EAAE,mBAAmB;AACzD,IAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB;AAC/D,IAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB;AAC/D,IAAE,mBAAmB;AACrB,CAAC,CAAD;AAAC;AACD,IAAMC,UAAQ,GAAG,sSAOhB,CAPD;AAAC;AAAI;AAEU;AACP;AAC2B;AACqB;AAUxD,IAAA,6BAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACiD,SAAnD,CAAA,6BAAA,EAAA,MAAA,CAAA,CAAyE;AAAC,IAD1E,SAAA,6BAAA,GAAA;AAAE,QAAF,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAGC;AACD,QAFY,KAAZ,CAAA,MAAkB,GAAGD,QAAM,CAAC;AAC5B;AAEmB,KAFlB;yDAHD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBC,UAAoB,EAAE,MAAM,EAA5BD,QAA4B,EAAC,EAA7B,EAAA;;;;;;0BAAO;AAAC,IAGR,OAAA,6BAAC,CAAD;AAAC,CAAA,CAFkD,sBAAsB,CAEzE,CAAA,CAAC;AAFD;AAAI;AAAoB;AAAqB;AAAe;AAI5D,SAASD,UAAQ,CAAC,KAAa,EAAE,MAAe,EAAhD;AAAE;AAAqB,IACvB,IAAQ,GAAG,GAA4B,EAAE,CAAzC;AAAC,IAA0C,IAAA,EAA3C,GAAmE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAAvC,QAAQ,GAApD,EAAA,CAAA,CAAA,CAAoD,EAAE,SAAS,GAA/D,EAAA,CAAA,CAAA,CAAmF,CAAnF;AAAC;AAAiB,IAGhB,QAAQ,QAAQ;AAClB,QAAI,KAAK,QAAQ,CAAC;AAClB,QAAI,KAAK,cAAc,CAAC;AACxB,QAAI,KAAK,eAAe,CAAC;AACzB,QAAI,KAAK,cAAc,CAAC;AACxB,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,OAAO,CAAC;AACjB,QAAI,KAAK,SAAS;AAClB,YAAM,GAAG,CAAC,iBAAiB,CAAC,GAAG,QAAQ,CAAC;AACxC,YAAM,MAAM;AACZ,QAAI;AACJ,YAAM,GAAG,CAAC,iBAAiB,CAAC,GAAGG,cAAY,CAAC;AAAsB,YAC5D,MAAM;AACZ,KAAG;AACH;AAEC,IAAC,QAAQ,SAAS;AACnB,QAAI,KAAK,OAAO,CAAC;AACjB,QAAI,KAAK,QAAQ,CAAC;AAClB,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,SAAS;AAClB,YAAM,GAAG,CAAC,eAAe,CAAC,GAAG,SAAS,CAAC;AACvC,YAAM,MAAM;AACZ,QAAI;AAAsB,YACpB,GAAG,CAAC,eAAe,CAAC,GAAGC,eAAa,CAAC;AAAuB,YAC5D,MAAM;AACZ,KAAG;AACH,IACE,GAAG,CAAC,SAAS,CAAC,GAAG,MAAM,GAAG,aAAa,GAAG,MAAM,CAAC;AACnD,IACE,OAAO,GAAG,CAAC;AACb,CAAC;AACD;AAAC;AAAI;AAAkC;AAAqC;AAAqJ;AAAI;AC9GrO,IAAM,aAAa,GAAG,MAAM,CAA5B;AAEA,IAAA,oBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACwC,SAA1C,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAsD;AAAC,IADvD,SAAA,oBAAA,GAAA;AAAE;AACuC,KAIxC;AACD;AACO;AACW;AAAmB;AAAQ,IAN3C,oBAAF,CAAA,SAAA,CAAA,WAAa;AAAO;AACP;AAAmB;AAAQ,IADtC,UAAY,KAAa,EAA3B;AAAE,QACE,OAAO,EAAC,WAAW,EAAE,KAAK,IAAI,aAAa,EAAC,CAAC;AACjD,KAAG,CAAH;AAAC;gDAJD,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;;;0BAAO;AAAC,IAlBR,OAAA,oBAAA,CAAA;AAAC,CAuBA,CAJyC,YAAY,CAItD,CAAA,CAAC;AAED,IAAA,iBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACqC,SAAvC,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAqD;AAAC,IAIpD,SAAF,iBAAA,CAAc,KAAiB,EACjB,UAAsB,EACtB,YAAkC,EAClC,OAAwB,EAHtC;AAAE,QAAA,IAAF,KAAA,GAII,MAJJ,CAAA,IAAA,CAAA,IAAA,EAIU,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,CAAC,IAJnD,IAAA,CAMG;AACH,QATY,KAAZ,CAAA,aAAyB,GAAG,WAAW,CAAC;AACxC,QASY,KAAZ,CAAA,UAAsB,GAAG,aAAa,CAAC;AACvC,QAJI,KAAI,CAAC,IAAI,EAAE,CAAC;AAChB;AAEiB,KAFd,AAXI;AAAC;sBAAR,EAAA,IAAA,EAAC,SAAS,EAAV,zCACkB;AAEK,QArBvB,EAAA,IAAA,EAAmB,UAAU,EAA7B;AAAE,QAGF,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAE,QAsBF,EAAA,IAAA,EAA4B,oBAAoB,EAAhD;AAAE,QArBF,EAAA,IAAA,EAAE,eAAe,EAAjB;AAAC;;;;;0KAAS;AAAC,IA4BX,OAAA,iBAAC,CAAD;AAAC,CAAA,CAbsC,cAAc,CAarD,CAAA,CAAC;AAbD;AAeA,IAAM,aAAa,GAAiC,IAAI,GAAG,EAAE,CAA7D;AAAC;AAED,IAAMH,QAAM,GAAG;AACf,IAAE,QAAQ;AACV,IAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW;AACjE,IAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChE,IAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChE,CAAC,CAAD;AAAC;AACD,IAAMC,UAAQ,GAAG,0NAKhB,CALD;AAAC;AAAI;AAEW;AACF;AACoB;AAQlC,IAAA,wBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC4C,SAA9C,CAAA,wBAAA,EAAA,MAAA,CAAA,CAA+D;AAAC,IADhE,SAAA,wBAAA,GAAA;AAAE,QAAF,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAGC;AACD,QAFY,KAAZ,CAAA,MAAkB,GAAGD,QAAM,CAAC;AAC5B;AACoB,KADnB;oDAHD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBC,UAAoB,EAAE,MAAM,EAA5BD,QAA4B,EAAC,EAA7B,EAAA;;;;;;0BAAO;AAAC,IAGR,OAAA,wBAAC,CAAD;AAAC,CAAA,CAF6C,iBAAiB,CAE/D,CAAA;AACA;AAAC;AAAI;AAAkC;AAAuC;AAAqJ;AAAI;AChDvO,IAAMI,eAAa,GAAG,MAAM,CAA5B;AAAC;AACD,IAAM,SAAS,GAAG,GAAG,CAArB;AAMA,IAAA,oBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACwC,SAA1C,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAsD;AAAC,IADvD,SAAA,oBAAA,GAAA;AAAE;AACuC,KASxC;AACD;AACO;AACW;AAAyB;AAEvC;AAAQ,IAbV,oBAAF,CAAA,SAAA,CAAA,WAAa;AAAO;AAAwB;AAC/B;AAAmB;AAAQ,IADtC,UAAY,KAAa,EAAE,MAAuB,EAApD;AAAE;AAAyB,QAC3B,IAAU,KAAK,GAAG,CAAC,KAAK,IAAIA,eAAa,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG;AAAM;AAEhE;AACU;AAAY,QAHqC,UAAA,CAAC,EAAjE,EAAqE,OAAA,IAArE,GAAyE,CAAC,CAAC,IAAI,EAAE,GAAjF,IAAoF,CAApF,EAAoF,EAAC,CAArF;AAAC,QAEG,OAAO;AACX,YAAM,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,aAAa,GAAG,MAAM;AACvD,YAAM,qBAAqB,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;AAC5C,SAAK,CAAC;AACN,KAAG,CAAH;AAAC;gDATD,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;;;0BAAO;AAAC,IAxBR,OAAA,oBAAA,CAAA;AAAC,CAkCA,CATyC,YAAY,CAStD,CAAA,CAAC;AAED,IAAA,kBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACsC,SAAxC,CAAA,kBAAA,EAAA,MAAA,CAAA,CAAsD;AAAC,IASrD,SAAF,kBAAA,CAAc,KAAiB,EACjB,UAAsB,EACtB,YAAkC,EAClC,OAAwB,EAHtC;AAAE,QAAA,IAAF,KAAA,GAII,MAJJ,CAAA,IAAA,CAAA,IAAA,EAIU,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,CAAC,IAJnD,IAAA,CAMG;AACH,QAdY,KAAZ,CAAA,aAAyB,GAAG,YAAY,CAAC;AACzC,QAIY,KAAZ,CAAA,OAAmB,GAAG,KAAK,CAAC;AAC5B,QAMI,KAAI,CAAC,IAAI,EAAE,CAAC;AAChB;AAEiB,KAFd;AACH,IAZE,MAAF,CAAA,cAAA,CACM,kBADN,CAAA,SAAA,EAAA,QACY,EADZ;AAAE;AAAiB;AACE;AAAY,QAD/B,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;AAC/C;AAAiB;AAA0B;AAAuB;AAC9D,QADH,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;AACxE;AAA2B;AAEH,KAJzB,CAAA,CAAgD;AAChD;AAAqD;AACjD;AAEuB;AAElB;AAAyB;AACG;AAClC;AAAkB;AAAwB;AAClC;AACT,IAMU,kBAAZ,CAAA,SAAA,CAAA,eAA2B;AAAI;AACQ;AAAyB;AAEhE;AAGC;AAAkB;AAAwB;AACzC;AAAQ,IAPR,UAA0B,KAAa,EAAzC;AAAE,QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,gBAAgB,GAAG,UAAU,CAAC;AAClE,QAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;AACjD,KAAG,CAAH,AAzBO;AAAC;uBAAR,EAAA,IAAA,EAAC,SAAS,EAAV,1CACkB;AAEK,QAhCvB,EAAA,IAAA,EAAmB,UAAU,EAA7B;AAAE,QAGF,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAE,QAsCF,EAAA,IAAA,EAA4B,oBAAoB,EAAhD;AAAE,QApCF,EAAA,IAAA,EAAE,eAAe,EAAjB;AAAC;AAAU;AAEI,QA2Bf,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;AAAC;;;;;;;;oBAAM;AAAC,IAqBR,OAAA,kBAAC,CAAD;AAAC,CAAA,CAzBuC,cAAc,CAyBtD,CAAA,CAAC;AAzBD;AA2BA,IAAM,UAAU,GAAiC,IAAI,GAAG,EAAE,CAA1D;AAAC;AACD,IAAM,gBAAgB,GAAiC,IAAI,GAAG,EAAE,CAAhE;AAAC;AAED,IAAMJ,QAAM,GAAG;AACf,IAAE,SAAS;AACX,IAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY;AACtE,IAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe;AACpE,IAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe;AACpE,CAAC,CAAD;AAAC;AAED,IAAMC,UAAQ,GAAG,wOAKhB,CALD;AAAC;AAAI;AAEoB;AACpB;AACgB;AAQrB,IAAA,yBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC6C,SAA/C,CAAA,yBAAA,EAAA,MAAA,CAAA,CAAiE;AAAC,IADlE,SAAA,yBAAA,GAAA;AAAE,QAAF,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAGC;AACD,QAFY,KAAZ,CAAA,MAAkB,GAAGD,QAAM,CAAC;AAC5B;AACoB,KADnB;qDAHD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBC,UAAoB,EAAE,MAAM,EAA5BD,QAA4B,EAAC,EAA7B,EAAA;;;;;;0BAAO;AAAC,IAGR,OAAA,yBAAC,CAAD;AAAC,CAAA,CAF8C,kBAAkB,CAEjE,CAAA;AACA;AAAC;AAAI;AAAkC;AAAqC;AAAqJ;AAAI;ACzErO,IAAMI,eAAa,GAAG,SAAS,CAA/B;AAMA,IAAA,oBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACwC,SAA1C,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAsD;AAAC,IADvD,SAAA,oBAAA,GAAA;AAAE;AACuC,KAcxC;AACD;AACO;AACW;AAAyB;AACrC;AAAQ,IAjBZ,oBAAF,CAAA,SAAA,CAAA,WAAa;AAAO;AAAwB;AAC9B;AAAmB;AAAQ,IADvC,UAAY,KAAa,EAAE,MAAsB,EAAnD;AAAE,QACM,IAAA,EAAR,GAA6B,CAAC,KAAK,IAAIA,eAAa,EAAE,KAAK,CAAC,GAAG,CAAC,EAAvD,SAAS,GAAlB,EAAA,CAAA,CAAA,CAAkB,EAAE,KAAK,GAAzB,EAAA,CAAA,CAAA,CAAgE,CAAhE;AAAC,QACG,IAAI,SAAS,KAAK,QAAQ,IAAI,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,OAAO,EAAE;AAChF,YAAM,SAAS,GAAG,KAAK,CAAC;AACxB,SAAK;AACL,QACI,KAAK,GAAG,CAAC,KAAK,KAAK,OAAO,IAAI,SAAS,KAAK,OAAO,IAAI,QAAQ,GAAG,EAAE,CAAC;AACzE,QACI,OAAO;AACX,YAAM,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,aAAa,GAAG,MAAM;AACvD,YAAM,gBAAgB,EAAE,SAAS,GAAG,KAAK;AACzC,SAAK,CAAC;AACN,KAAG,CAAH;AAAC;gDAdD,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;;;0BAAO;AAAC,IAvBR,OAAA,oBAAA,CAAA;AAAC,CAsCA,CAdyC,YAAY,CActD,CAAA,CAAC;AAED,IAAA,iBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACqC,SAAvC,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAqD;AAAC,IAQpD,SAAF,iBAAA,CAAc,UAAsB,EACtB,YAAkC,EAClC,MAAkB,EAClB,OAAwB,EAHtC;AAAE,QAAA,IAAF,KAAA,GAII,MAJJ,CAAA,IAAA,CAAA,IAAA,EAIU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IAJpD,IAAA,CAMG;AACH,QAXY,KAAZ,CAAA,OAAmB,GAAG,KAAK,CAAC;AAC5B,QACY,KAAZ,CAAA,aAAyB,GAAG,WAAW,CAAC;AACxC,QAMI,KAAI,CAAC,IAAI,EAAE,CAAC;AAChB;AAEiB,KAFd;AACH,IAdE,MAAF,CAAA,cAAA,CACM,iBADN,CAAA,SAAA,EAAA,QACY,EADZ;AAAE;AAAiB;AACE;AAAY,QAD/B,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;AAC/C;AAAiB;AAA0B;AAAuB;AAC9D,QADH,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;AACxE;AAA2B;AAEH,KAJzB,CAAA,CAAgD;AAChD;AAAqD;AACjD;AAEuB;AAG3B;AAAyB;AACG;AAC1B;AAAkB;AAClB;AAAmB;AAAQ,IAQjB,iBAAZ,CAAA,SAAA,CAAA,eAA2B;AAAI;AACQ;AAAyB;AAE9D;AAGC;AAAkB;AAAwB;AACxC;AAAQ,IAPX,UAA0B,KAAa,EAAzC;AAAE,QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,eAAe,GAAG,SAAS,CAAC;AAChE,QAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;AACjD,KAAG,CAAH,AAxBO;AAAC;sBAAR,EAAA,IAAA,EAAC,SAAS,EAAV,zCACkB;AAEf,QApCH,EAAA,IAAA,EAAmB,UAAU,EAA7B;AAAE,QA2CF,EAAA,IAAA,EAA4B,oBAAoB,EAAhD;AAAE,QAxCF,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAE,QAEF,EAAA,IAAA,EAAE,eAAe,EAAjB;AAAC;AAAU;AAEG,QA4Bd,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;AAAC;;;;;;;;oBAAM;AAAC,IAuBR,OAAA,iBAAC,CAAD;AAAC,CAAA,CAxBsC,cAAc,CAwBrD,CAAA,CAAC;AAxBD;AA0BA,IAAM,SAAS,GAAiC,IAAI,GAAG,EAAE,CAAzD;AAAC;AACD,IAAM,eAAe,GAAiC,IAAI,GAAG,EAAE,CAA/D;AAAC;AAED,IAAMJ,QAAM,GAAG;AACf,IAAE,QAAQ;AACV,IAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW;AACjE,IAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChE,IAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChE,CAAC,CAAD;AAAC;AACD,IAAMC,UAAQ,GAAG,0NAKhB,CALD;AAAC;AAAI;AAEgB;AACX;AACoB;AAQ9B,IAAA,wBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC4C,SAA9C,CAAA,wBAAA,EAAA,MAAA,CAAA,CAA+D;AAAC,IADhE,SAAA,wBAAA,GAAA;AAAE,QAAF,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAGC;AACD,QAFY,KAAZ,CAAA,MAAkB,GAAGD,QAAM,CAAC;AAC5B;AACoB,KADnB;oDAHD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBC,UAAoB,EAAE,MAAM,EAA5BD,QAA4B,EAAC,EAA7B,EAAA;;;;;;0BAAO;AAAC,IAGR,OAAA,wBAAC,CAAD;AAAC,CAAA,CAF6C,iBAAiB,CAE/D,CAAA;AACA;AAAC;AAAI;AAAkC;AAAyC;AAAqJ;AAAI;AC5EzO,IAAMI,eAAa,GAAG,MAAM,CAA5B;AAEA,IAAA,sBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC0C,SAA5C,CAAA,sBAAA,EAAA,MAAA,CAAA,CAAwD;AAAC,IADzD,SAAA,sBAAA,GAAA;AAAE;AACuC,KAIxC;AACD;AACO;AACW;AAAmB;AAAQ,IAN3C,sBAAF,CAAA,SAAA,CAAA,WAAa;AAAO;AACP;AAAmB;AAAQ,IADtC,UAAY,KAAa,EAA3B;AAAE,QACE,OAAO,EAAC,aAAa,EAAE,KAAK,IAAIA,eAAa,EAAC,CAAC;AACnD,KAAG,CAAH;AAAC;kDAJD,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;;;0BAAO;AAAC,IAlBR,OAAA,sBAAA,CAAA;AAAC,CAuBA,CAJ2C,YAAY,CAIxD,CAAA,CAAC;AAED,IAAA,mBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACuC,SAAzC,CAAA,mBAAA,EAAA,MAAA,CAAA,CAAuD;AAAC,IAGtD,SAAF,mBAAA,CAAc,UAAsB,EACtB,YAAoC,EACpC,MAAkB,EAClB,OAAwB,EAHtC;AAAE,QAAA,IAAF,KAAA,GAII,MAJJ,CAAA,IAAA,CAAA,IAAA,EAIU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IAJpD,IAAA,CAMG;AACH,QATY,KAAZ,CAAA,aAAyB,GAAG,aAAa,CAAC;AAC1C,QASY,KAAZ,CAAA,UAAsB,GAAG,WAAW,CAAC;AACrC,QAJI,KAAI,CAAC,IAAI,EAAE,CAAC;AAChB;AAEiB,KAFd,AAVI;AAAC;wBAAR,EAAA,IAAA,EAAC,SAAS,EAAV,3CACkB;AACM,QApBxB,EAAA,IAAA,EAAmB,UAAU,EAA7B;AAAE,QAuBF,EAAA,IAAA,EAA4B,sBAAsB,EAAlD;AAAE,QApBF,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAE,QACF,EAAA,IAAA,EAAE,eAAe,EAAjB;AAAC;;;;;4KAAS;AAAC,IA2BX,OAAA,mBAAC,CAAD;AAAC,CAAA,CAZwC,cAAc,CAYvD,CAAA,CAAC;AAZD;AAcA,IAAM,WAAW,GAAiC,IAAI,GAAG,EAAE,CAA3D;AAAC;AAED,IAAMJ,QAAM,GAAG;AACf,IAAE,UAAU;AACZ,IAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa;AAC3E,IAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB;AACxE,IAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB;AACxE,CAAC,CAAD;AAAC;AAED,IAAMC,UAAQ,GAAG,sPAKhB,CALD;AAAC;AAAI;AAEW;AACZ;AACY;AAQhB,IAAA,0BAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC8C,SAAhD,CAAA,0BAAA,EAAA,MAAA,CAAA,CAAmE;AAAC,IADpE,SAAA,0BAAA,GAAA;AAAE,QAAF,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAGC;AACD,QAFY,KAAZ,CAAA,MAAkB,GAAGD,QAAM,CAAC;AAC5B;AACoB,KADnB;sDAHD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBC,UAAoB,EAAE,MAAM,EAA5BD,QAA4B,EAAC,EAA7B,EAAA;;;;;;0BAAO;AAAC,IAGR,OAAA,0BAAC,CAAD;AAAC,CAAA,CAF+C,mBAAmB,CAEnE,CAAA;AACA;AAAC;AAAI;AAAkC;AAA2C;AAAqJ;AAAI;AChD3O,IAAMI,eAAa,GAAG,MAAM,CAA5B;AAAC;AACD,IAAM,cAAc,GAAG,GAAG,CAA1B;AAMA,IAAA,uBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC2C,SAA7C,CAAA,uBAAA,EAAA,MAAA,CAAA,CAAyD;AAAC,IAD1D,SAAA,uBAAA,GAAA;AAAE;AACuC,KAmBxC;AACD;AACO;AACW;AAAyB;AACxC;AAAQ,IAtBT,uBAAF,CAAA,SAAA,CAAA,WAAa;AAAO;AAAwB;AACjC;AAAmB;AAC5B,IAFA,UAAY,KAAa,EAAE,MAAyB,EAAtD;AAAE,QACE,KAAK,GAAG,KAAK,IAAIA,eAAa,CAAC;AACnC;AACG,QADH,IAAQ,IAAI,GAAG,KAAK,CAApB;AAAC,QACG,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;AACxC,YAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;AAChE,YAAM,IAAI,GAAG,IAAI,CAAC;AAClB,SAAK;AACL;AAEM,QADN,IAAU,GAAG,GAAG;AAChB,YAAM,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,aAAa,GAAG,MAAM;AACvD,YAAM,mBAAmB,EAAE,EAAE;AAC7B,YAAM,uBAAuB,EAAE,EAAE;AACjC,SAAK,CAAL;AAAC;AACkB,QAAnB,IAAU,GAAG,IAAI,IAAI,GAAG,mBAAmB,GAAG,uBAAuB,CAAC,CAAtE;AAAC,QACG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACrB,QACI,OAAO,GAAG,CAAC;AACf,KAAG,CAAH;AAAC;mDAnBD,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;;;0BAAO;AAAC,IAxBR,OAAA,uBAAA,CAAA;AAAC,CA4CA,CAnB4C,YAAY,CAmBzD,CAAA,CAAC;AAED,IAAA,oBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACwC,SAA1C,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAwD;AAAC,IAQvD,SAAF,oBAAA,CAAc,UAAsB,EACtB,YAAqC,EACrC,MAAkB,EAClB,OAAwB,EAHtC;AAAE,QAAA,IAAF,KAAA,GAII,MAJJ,CAAA,IAAA,CAAA,IAAA,EAIU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IAJpD,IAAA,CAMG;AACH,QAdY,KAAZ,CAAA,aAAyB,GAAG,cAAc,CAAC;AAC3C,QAIY,KAAZ,CAAA,OAAmB,GAAG,KAAK,CAAC;AAC5B,QAMI,KAAI,CAAC,IAAI,EAAE,CAAC;AAChB;AAEiB,KAFd;AACH,IAZE,MAAF,CAAA,cAAA,CACM,oBADN,CAAA,SAAA,EAAA,QACY,EADZ;AAAE;AAAiB;AACE;AAAY,QAD/B,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;AAC/C;AAAiB;AAA0B;AAAuB;AAC9D,QADH,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;AACxE;AAA2B;AAEH,KAJzB,CAAA,CAAgD;AAChD;AAAqD;AACjD;AAEuB;AACe;AAC5B;AACmB;AAAQ;AACxB;AAAwB;AACnC;AAAQ,IAOF,oBAAZ,CAAA,SAAA,CAAA,eAA2B;AAAI;AACQ;AAAyB;AAClB;AAE9C;AAEe;AAAwB;AAAmB;AACtD,IAPF,UAA0B,KAAa,EAAzC;AAAE,QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,kBAAkB,GAAG,YAAY,CAAC;AACtE,QAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;AACjD,KAAG,CAAH,AAxBO;AAAC;yBAAR,EAAA,IAAA,EAAC,SAAS,EAAV,5CACkB;AACM,QAzCxB,EAAA,IAAA,EAAmB,UAAU,EAA7B;AAAE,QAiDF,EAAA,IAAA,EAA4B,uBAAuB,EAAnD;AAAE,QA3CF,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAE,QAJF,EAAA,IAAA,EAAE,eAAe,EAAjB;AAAC;AAAU;AAGT,QAsCF,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;AAAC;;;;;;;;oBAAM;AAAC,IAqBR,OAAA,oBAAC,CAAD;AAAC,CAAA,CAxByC,cAAc,CAwBxD,CAAA,CAAC;AAxBD;AA0BA,IAAM,YAAY,GAAiC,IAAI,GAAG,EAAE,CAA5D;AAAC;AACD,IAAM,kBAAkB,GAAiC,IAAI,GAAG,EAAE,CAAlE;AAAC;AAED,IAAMJ,QAAM,GAAG;AACf,IAAE,WAAW;AACb,IAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF,IAAE,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB;AAC5E,IAAE,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB;AAC5E,CAAC,CAAD;AAAC;AAED,IAAMC,UAAQ,GAAG,oQAKhB,CALD;AAAC;AAAI;AAEoB;AAAqD;AACjD;AACQ;AASrC,IAAA,2BAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC+C,SAAjD,CAAA,2BAAA,EAAA,MAAA,CAAA,CAAqE;AAAC,IADtE,SAAA,2BAAA,GAAA;AAAE,QAAF,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAGC;AACD,QAFY,KAAZ,CAAA,MAAkB,GAAGD,QAAM,CAAC;AAC5B;AACoB,KADnB;uDAHD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBC,UAAoB,EAAE,MAAM,EAA5BD,QAA4B,EAAC,EAA7B,EAAA;;;;;;0BAAO;AAAC,IAGR,OAAA,2BAAC,CAAD;AAAC,CAAA,CAFgD,oBAAoB,CAErE,CAAA;AACA;AAAC;AAAI;AAAkC;AAAmC;AAAqJ;AAAI;ACnFnO,IAAMI,eAAa,GAAG,GAAG,CAAzB;AAMA,IAAA,mBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACuC,SAAzC,CAAA,mBAAA,EAAA,MAAA,CAAA,CAAqD;AAAC,IADtD,SAAA,mBAAA,GAAA;AAAE;AACuC,KAOxC;AACD;AACO;AACW;AAAyB;AACpC;AAAQ,IAVb,mBAAF,CAAA,SAAA,CAAA,WAAa;AAAO;AAAwB;AAE1C;AAAmB;AAAQ,IAF3B,UAAY,KAAa,EAAE,MAAqB,EAAlD;AAAE,QACE,OAAO;AACX,YAAM,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,aAAa,GAAG,MAAM;AACvD,YAAM,UAAU,EAAE,KAAK,IAAIA,eAAa;AACxC,SAAK,CAAC;AACN,KAAG,CAAH;AAAC;+CAPD,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;;;0BAAO;AAAC,IAvBR,OAAA,mBAAA,CAAA;AAAC,CA+BA,CAPwC,YAAY,CAOrD,CAAA,CAAC;AAED,IAAA,gBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACoC,SAAtC,CAAA,gBAAA,EAAA,MAAA,CAAA,CAAoD;AAAC,IAQnD,SAAF,gBAAA,CAAc,KAAiB,EACjB,UAAsB,EACtB,YAAiC,EACjC,OAAwB,EAHtC;AAAE,QAAA,IAAF,KAAA,GAII,MAJJ,CAAA,IAAA,CAAA,IAAA,EAIU,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,CAAC,IAJnD,IAAA,CAMG;AACH,QAdY,KAAZ,CAAA,aAAyB,GAAG,UAAU,CAAC;AACvC,QAIY,KAAZ,CAAA,OAAmB,GAAG,KAAK,CAAC;AAC5B,QAMI,KAAI,CAAC,IAAI,EAAE,CAAC;AAChB;AAEiB,KAFd;AACH,IAZE,MAAF,CAAA,cAAA,CACM,gBADN,CAAA,SAAA,EAAA,QACY,EADZ;AAAE;AAAiB;AACE;AAAY,QAD/B,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;AAC/C;AAAiB;AAA0B;AAAuB;AAC9D,QADH,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;AACxE;AAA2B;AAEH,KAJzB,CAAA,CAAgD;AAChD;AAAqD;AACjD;AAEuB;AAElB;AAAyB;AACI;AAClC;AAAkB;AAAwB;AAClC;AACT,IAMS,gBAAZ,CAAA,SAAA,CAAA,eAA2B;AAAI;AACQ;AACtC;AAED;AAEK;AAAkB;AAAwB;AACvC;AAAQ,IAPd,UAA0B,KAAa,EAAzC;AAAE,QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,cAAc,GAAG,QAAQ,CAAC;AAC9D,QAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;AACjD,KAAG,CAAH,AAxBO;AAAC;qBAAR,EAAA,IAAA,EAAC,SAAS,EAAV,xCACkB;AACM,QA5BxB,EAAA,IAAA,EAAmB,UAAU,EAA7B;AAAE,QAGF,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAE,QAkCF,EAAA,IAAA,EAA4B,mBAAmB,EAA/C;AAAE,QAjCF,EAAA,IAAA,EAAE,eAAe,EAAjB;AAAC;AAAU;AAEK,QAwBhB,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;AAAC;;;;;;;;oBAAM;AAAC,IAqBR,OAAA,gBAAC,CAAD;AAAC,CAAA,CAxBqC,cAAc,CAwBpD,CAAA,CAAC;AAxBD;AA0BA,IAAM,QAAQ,GAAiC,IAAI,GAAG,EAAE,CAAxD;AAAC;AACD,IAAM,cAAc,GAAiC,IAAI,GAAG,EAAE,CAA9D;AAAC;AAED,IAAMJ,QAAM,GAAG;AACf,IAAE,OAAO;AACT,IAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC5D,IAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa;AAC5D,IAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa;AAC5D,CAAC,CAAD;AAAC;AAED,IAAMC,UAAQ,GAAG,4MAKhB,CALD;AAAC;AAAI;AAEW;AACd;AAAoC;AAErC;AAQD,IAAA,uBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC2C,SAA7C,CAAA,uBAAA,EAAA,MAAA,CAAA,CAA6D;AAAC,IAD9D,SAAA,uBAAA,GAAA;AAAE,QAAF,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAGC;AACD,QAFY,KAAZ,CAAA,MAAkB,GAAGD,QAAM,CAAC;AAC5B;AACoB,KADnB;mDAHD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBC,UAAoB,EAAE,MAAM,EAA5BD,QAA4B,EAAC,EAA7B,EAAA;;;;;;0BAAO;AAAC,IAGR,OAAA,uBAAC,CAAD;AAAC,CAAA,CAF4C,gBAAgB,CAE7D,CAAA;AACA;AAAC;AAAI;AAAkC;AAAmC;AAAqJ;AAAI;ACvEnO,IAAMI,eAAa,GAAG,MAAM,CAA5B;AAEA,IAAA,mBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACuC,SAAzC,CAAA,mBAAA,EAAA,MAAA,CAAA,CAAqD;AAAC,IADtD,SAAA,mBAAA,GAAA;AAAE;AACuC,KAIxC;AACD;AACO;AACW;AAAmB;AAAQ,IAN3C,mBAAF,CAAA,SAAA,CAAA,WAAa;AAAO;AACP;AAAmB;AAAQ,IADtC,UAAY,KAAa,EAA3B;AAAE,QACE,OAAO,EAAC,UAAU,EAAE,KAAK,IAAIA,eAAa,EAAC,CAAC;AAChD,KAAG,CAAH;AAAC;+CAJD,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;;;0BAAO;AAAC,IAlBR,OAAA,mBAAA,CAAA;AAAC,CAuBA,CAJwC,YAAY,CAIrD,CAAA,CAAC;AAED,IAAA,gBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACoC,SAAtC,CAAA,gBAAA,EAAA,MAAA,CAAA,CAAoD;AAAC,IAGnD,SAAF,gBAAA,CAAc,UAAsB,EACtB,YAAiC,EACjC,MAAkB,EAClB,OAAwB,EAHtC;AAAE,QAAA,IAAF,KAAA,GAII,MAJJ,CAAA,IAAA,CAAA,IAAA,EAIU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IAJpD,IAAA,CAMG;AACH,QATY,KAAZ,CAAA,aAAyB,GAAG,UAAU,CAAC;AACvC,QASY,KAAZ,CAAA,UAAsB,GAAG,QAAQ,CAAC;AAClC,QAJI,KAAI,CAAC,IAAI,EAAE,CAAC;AAChB;AAEiB,KAFd,AAVI;AAAC;qBAAR,EAAA,IAAA,EAAC,SAAS,EAAV,xCACkB;AACM,QApBxB,EAAA,IAAA,EAAmB,UAAU,EAA7B;AAAE,QAuBF,EAAA,IAAA,EAA4B,mBAAmB,EAA/C;AAAE,QApBF,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAE,QACF,EAAA,IAAA,EAAE,eAAe,EAAjB;AAAC;;;;;yKAAS;AAAC,IA2BX,OAAA,gBAAC,CAAD;AAAC,CAAA,CAZqC,cAAc,CAYpD,CAAA,CAAC;AAZD;AAcA,IAAM,QAAQ,GAAiC,IAAI,GAAG,EAAE,CAAxD;AAAC;AAED,IAAMJ,QAAM,GAAG;AACf,IAAE,OAAO;AACT,IAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC5D,IAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa;AAC5D,IAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa;AAC5D,CAAC,CAAD;AAAC;AAED,IAAMC,UAAQ,GAAG,4MAKhB,CALD;AAAC;AAAI;AAEW;AACG;AACwB;AAQ3C,IAAA,uBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC2C,SAA7C,CAAA,uBAAA,EAAA,MAAA,CAAA,CAA6D;AAAC,IAD9D,SAAA,uBAAA,GAAA;AAAE,QAAF,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAGC;AACD,QAFY,KAAZ,CAAA,MAAkB,GAAGD,QAAM,CAAC;AAC5B;AACoB,KADnB;mDAHD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBC,UAAoB,EAAE,MAAM,EAA5BD,QAA4B,EAAC,EAA7B,EAAA;;;;;;0BAAO;AAAC,IAGR,OAAA,uBAAC,CAAD;AAAC,CAAA,CAF4C,gBAAgB,CAE7D,CAAA;AACA;AAAC;AAAI;AAAkC;AAAqC;AAAqJ;AAAI;AChDrO,IAAMI,eAAa,GAAG,MAAM,CAA5B;AAAC;AACD,IAAMC,gBAAc,GAAG,GAAG,CAA1B;AAMA,IAAA,oBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACwC,SAA1C,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAsD;AAAC,IADvD,SAAA,oBAAA,GAAA;AAAE;AACuC,KAmBxC;AACD;AACO;AACW;AAAyB;AACrC;AAAQ,IAtBZ,oBAAF,CAAA,SAAA,CAAA,WAAa;AAAO;AAAwB;AAC9B;AAAmB;AAC5B,IAFH,UAAY,KAAa,EAAE,MAAsB,EAAnD;AAAE,QACE,KAAK,GAAG,KAAK,IAAID,eAAa,CAAC;AACnC;AACG,QADH,IAAQ,IAAI,GAAG,KAAK,CAApB;AAAC,QACG,IAAI,KAAK,CAAC,QAAQ,CAACC,gBAAc,CAAC,EAAE;AACxC,YAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,CAACA,gBAAc,CAAC,CAAC,CAAC;AAChE,YAAM,IAAI,GAAG,IAAI,CAAC;AAClB,SAAK;AACL;AAEM,QADN,IAAU,GAAG,GAAG;AAChB,YAAM,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,aAAa,GAAG,MAAM;AACvD,YAAM,gBAAgB,EAAE,EAAE;AAC1B,YAAM,oBAAoB,EAAE,EAAE;AAC9B,SAAK,CAAL;AAAC;AACkB,QAAnB,IAAU,GAAG,IAAI,IAAI,GAAG,gBAAgB,GAAG,oBAAoB,CAAC,CAAhE;AAAC,QACG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACrB,QACI,OAAO,GAAG,CAAC;AACf,KAAG,CAAH;AAAC;gDAnBD,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;;;0BAAO;AAAC,IAxBR,OAAA,oBAAA,CAAA;AAAC,CA4CA,CAnByC,YAAY,CAmBtD,CAAA,CAAC;AAED,IAAA,iBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IACqC,SAAvC,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAqD;AAAC,IAQpD,SAAF,iBAAA,CAAc,UAAsB,EACtB,YAAkC,EAClC,MAAkB,EAClB,OAAwB,EAHtC;AAAE,QAAA,IAAF,KAAA,GAII,MAJJ,CAAA,IAAA,CAAA,IAAA,EAIU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IAJpD,IAAA,CAMG;AACH,QAdY,KAAZ,CAAA,aAAyB,GAAG,WAAW,CAAC;AACxC,QAIY,KAAZ,CAAA,OAAmB,GAAG,KAAK,CAAC;AAC5B,QAMI,KAAI,CAAC,IAAI,EAAE,CAAC;AAChB;AAEiB,KAFd;AACH,IAZE,MAAF,CAAA,cAAA,CACM,iBADN,CAAA,SAAA,EAAA,QACY,EADZ;AAAE;AAAiB;AACE;AAAY,QAD/B,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;AAC/C;AAAiB;AAA0B;AAAuB;AAC9D,QADH,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;AACxE;AAA2B;AAEH,KAJzB,CAAA,CAAgD;AAChD;AAAqD;AACjD;AAEuB;AACe;AACzB;AACmB;AAClC;AAAkB;AAAwB;AACnC;AACT,IAMY,iBAAZ,CAAA,SAAA,CAAA,eAA2B;AAAI;AACQ;AAAyB;AAE9D;AAGC;AAAkB;AAAwB;AACxC;AAAQ,IAPX,UAA0B,KAAa,EAAzC;AAAE,QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,eAAe,GAAG,SAAS,CAAC;AAChE,QAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;AACjD,KAAG,CAAH,AAxBO;AAAC;sBAAR,EAAA,IAAA,EAAC,SAAS,EAAV,zCACkB;AACM,QAzCxB,EAAA,IAAA,EAAmB,UAAU,EAA7B;AAAE,QAiDF,EAAA,IAAA,EAA4B,oBAAoB,EAAhD;AAAE,QA3CF,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAE,QAJF,EAAA,IAAA,EAAE,eAAe,EAAjB;AAAC;AAAU;AAEI,QAuCf,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;AAAC;;;;;;;;oBAAM;AAAC,IAqBR,OAAA,iBAAC,CAAD;AAAC,CAAA,CAxBsC,cAAc,CAwBrD,CAAA,CAAC;AAxBD;AA0BA,IAAM,SAAS,GAAiC,IAAI,GAAG,EAAE,CAAzD;AAAC;AACD,IAAM,eAAe,GAAiC,IAAI,GAAG,EAAE,CAA/D;AAAC;AAED,IAAML,SAAM,GAAG;AACf,IAAE,QAAQ;AACV,IAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW;AACjE,IAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChE,IAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChE,CAAC,CAAD;AAAC;AAED,IAAMC,WAAQ,GAAG,0NAKhB,CALD;AAAC;AAAI;AAEoB;AACjB;AAAiC;AACoB;AAS7D,IAAA,wBAAA,kBAAA,UAAA,MAAA,EAAA;AAAE,IAC4C,SAA9C,CAAA,wBAAA,EAAA,MAAA,CAAA,CAA+D;AAAC,IADhE,SAAA,wBAAA,GAAA;AAAE,QAAF,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAGC;AACD,QAFY,KAAZ,CAAA,MAAkB,GAAGD,SAAM,CAAC;AAC5B;AACoB,KADnB;oDAHD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBC,WAAoB,EAAE,MAAM,EAA5BD,SAA4B,EAAC,EAA7B,EAAA;;;;;;0BAAO;AAAC,IAGR,OAAA,wBAAC,CAAD;AAAC,CAAA,CAF6C,iBAAiB,CAE/D,CAAA;AACA;AAAC;AAAI;AAAkC;AAAkC;AAAqJ;AAAI;AC7ElO,IAAM,cAAc,GAAG;AACvB,IAAE,yBAAyB;AAC3B,IAAE,gCAAgC;AAClC,IAAE,6BAA6B;AAC/B,IAAE,wBAAwB;AAC1B,IAAE,yBAAyB;AAC3B,IAAE,wBAAwB;AAC1B,IAAE,0BAA0B;AAC5B,IAAE,2BAA2B;AAC7B,IAAE,uBAAuB;AACzB,IAAE,uBAAuB;AACzB,IAAE,wBAAwB;AAC1B,CAAC,CAAD;AAAC;AAEA;AACiE;AAC/B;AAC+B;AAGlE,IAAA,UAAA,kBAAA,YAAA;AAAE,IAAF,SAAA,UAAA,GAAA;AAAE,KAMD;sCAND,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;oBACR,OAAO,EAAE,CAAC,UAAU,CAAC,sBACrB,YAAY,EAAd,cAAA,CAAoB,cAAc,CAAC,sBACjC,OAAO,EAAT;GAAA,CAAe,cAAc,CAAC,kBAC7B,EAAD,EAAA;;;;;;;;gDACI;AAAC,IACL,OAAA,UAAC,CAAD;AAAC,CAAA,EAAD,CAAA;AACA;AAAC;AAAI;AAAkC;AAAsC;AAAqJ;AAAI;AAAC;AAAI;AAAkC;AAAiC;AAAqJ;AAAI;AAAC;AAAs4C","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\n@Directive()\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive()\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignColumnsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive()\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignRowsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridAreaStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\n@Directive()\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridAreasStyleBuiler,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\n@Directive()\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAutoStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridColumnStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive()\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridColumnsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\n@Directive()\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridGapStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridRowStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive()\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridRowsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n"]}